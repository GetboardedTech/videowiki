{"remainingRequest":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/babel-loader/lib/index.js!/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/src/components/vx-auto-suggest/VxAutoSuggest.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/src/components/vx-auto-suggest/VxAutoSuggest.vue","mtime":1617441534121},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.array.from\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport _defineProperty from \"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es7.object.entries\";\nimport \"core-js/modules/es6.string.starts-with\";\nimport _slicedToArray from \"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport \"core-js/modules/es7.object.values\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.number.constructor\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  props: {\n    placeholder: {\n      type: String,\n      default: 'Search..'\n    },\n    data: {\n      type: Object,\n      required: true\n    },\n    initalData: {\n      type: Object,\n      default: function _default() {\n        return new Object();\n      }\n    },\n    inputClassses: {\n      type: [String, Object, Array]\n    },\n    autoFocus: {\n      type: Boolean,\n      default: false\n    },\n    showPinned: {\n      type: Boolean,\n      default: false\n    },\n    searchLimit: {\n      type: Number,\n      default: 4\n    },\n    hideGroupTitle: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: function data() {\n    return {\n      searchQuery: '',\n      filteredData: {},\n      currentSelected: -1,\n      inputFocused: false,\n      insideSuggestions: false\n    };\n  },\n  watch: {\n    // UPDATE SUGGESTIONS LIST\n    searchQuery: function searchQuery(val) {\n      var _this = this;\n\n      this.$emit('input', val);\n\n      if (val == '') {\n        this.inputInit();\n      } else {\n        var queried_data = {};\n        var data_grps = Object.keys(this.data);\n        data_grps.forEach(function (grp, i) {\n          queried_data[data_grps[i]] = _this.filter_grp(_this.data[grp]);\n        }); // Check if any of group has at least one queried item\n\n        if (!Object.values(queried_data).some(function (obj) {\n          return obj.length;\n        })) {\n          this.currentSelected = -1;\n        }\n\n        this.filteredData = queried_data;\n      }\n    },\n    autoFocus: function autoFocus(val) {\n      if (val) this.focusInput();else this.searchQuery = '';\n    },\n    filteredData: function filteredData(val) {\n      // Auto Select first item if it's not item-404\n      var grp_index = null;\n\n      var _iterator = _createForOfIteratorHelper(Object.values(val).entries()),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var _step$value = _slicedToArray(_step.value, 2),\n              index = _step$value[0],\n              grp_suggestions = _step$value[1];\n\n          if (grp_suggestions.length) {\n            grp_index = index;\n            break;\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      if (grp_index != null) this.currentSelected = grp_index + '.0';\n    }\n  },\n  methods: {\n    escPressed: function escPressed() {\n      this.$emit('closeSearchbar');\n      this.searchQuery = '';\n    },\n    filter_grp: function filter_grp(grp) {\n      var _this2 = this;\n\n      var exactEle = grp.data.filter(function (item) {\n        return item[grp.key].toLowerCase().startsWith(_this2.searchQuery.toLowerCase());\n      });\n      var containEle = grp.data.filter(function (item) {\n        return !item[grp.key].toLowerCase().startsWith(_this2.searchQuery.toLowerCase()) && item[grp.key].toLowerCase().indexOf(_this2.searchQuery.toLowerCase()) > -1;\n      });\n      return exactEle.concat(containEle).slice(0, this.searchLimit);\n    },\n    inputInit: function inputInit() {\n      if (Object.entries(this.initalData).length === 0 && this.initalData.constructor === Object) {\n        this.filteredData = {};\n      } else {\n        this.filteredData = this.initalData;\n      }\n    },\n    updateInputFocus: function updateInputFocus() {\n      var _this3 = this;\n\n      var val = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n      if (val) {\n        if (this.searchQuery == '') this.inputInit();\n        setTimeout(function () {\n          _this3.inputFocused = true;\n        }, 100);\n      } else {\n        if (this.insideSuggestions) return;\n        setTimeout(function () {\n          _this3.inputFocused = false;\n        }, 100);\n        this.escPressed();\n      }\n    },\n    suggestionSelected: function suggestionSelected() {\n      if (this.currentSelected > -1) {\n        var _this$currentSelected = this.currentSelected.split('.'),\n            _this$currentSelected2 = _slicedToArray(_this$currentSelected, 2),\n            grp_index = _this$currentSelected2[0],\n            item_index = _this$currentSelected2[1];\n\n        var grp_of_selected_item = Object.keys(this.data)[grp_index];\n        var selected_item = this.filteredData[grp_of_selected_item][item_index];\n        this.$emit('selected', _defineProperty({}, grp_of_selected_item, selected_item));\n        this.searchQuery = '';\n      }\n    },\n    increaseIndex: function increaseIndex() {\n      var val = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      // If there's no matching items\n      if (!Object.values(this.filteredData).some(function (grp_items) {\n        return grp_items.length;\n      })) return;\n\n      var _this$currentSelected3 = this.currentSelected.split('.'),\n          _this$currentSelected4 = _slicedToArray(_this$currentSelected3, 2),\n          grp_i = _this$currentSelected4[0],\n          item_i = _this$currentSelected4[1];\n\n      var grp_arr = Object.entries(this.filteredData);\n      var active_grp_total_items = grp_arr[grp_i][1].length;\n\n      if (val) {\n        // If active item is not of last item in grp\n        if (active_grp_total_items - 1 > item_i) {\n          this.currentSelected = grp_i + '.' + (Number(item_i) + 1); // If active item grp is not last in grp list\n        } else if (grp_i < grp_arr.length - 1) {\n          for (var i = Number(grp_i) + 1; i < grp_arr.length; i++) {\n            // If navigating group have items => Then move in that group\n            if (grp_arr[i][1].length > 0) {\n              this.currentSelected = Number(i) + '.0';\n              break;\n            }\n          }\n        }\n      } else {\n        // If active item is not of first item in grp\n        if (Number(item_i)) {\n          this.currentSelected = grp_i + '.' + (Number(item_i) - 1); // If active item grp  is not first in grp list\n        } else if (Number(grp_i)) {\n          for (var _i = Number(grp_i) - 1; _i >= 0; _i--) {\n            // If navigating group have items => Then move in that group\n            if (grp_arr[_i][1].length > 0) {\n              this.currentSelected = _i + '.' + (grp_arr[_i][1].length - 1);\n              break;\n            }\n          }\n        }\n      }\n    },\n    focusInput: function focusInput() {\n      this.$refs.input.$el.querySelector('input').focus();\n    }\n  },\n  mounted: function mounted() {\n    if (this.autoFocus) this.focusInput();\n  }\n};",{"version":3,"sources":["VxAutoSuggest.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"vx-auto-suggest\">\n    <div class=\"flex items-center relative\">\n      <!-- Input -->\n      <vs-input\n        ref=\"input\"\n        :placeholder=\"placeholder\"\n        :class=\"inputClassses\"\n        class=\"z-50\"\n        icon-pack=\"feather\"\n        icon=\"icon-search\"\n        icon-no-border\n        v-model=\"searchQuery\"\n        @keyup.esc=\"escPressed\"\n        @keyup.up=\"increaseIndex(false)\"\n        @keyup.down=\"increaseIndex\"\n        @keyup.enter=\"suggestionSelected\"\n        @focus=\"updateInputFocus\"\n        @blur=\"updateInputFocus(false)\"\n      />\n    </div>\n\n    <!-- Group List -->\n    <ul\n      ref=\"scrollContainer\"\n      :class=\"{ hidden: !inputFocused }\"\n      class=\"auto-suggest-suggestions-list z-50 rounded-lg mt-2 shadow-lg overflow-x-hidden\"\n      @mouseenter=\"insideSuggestions = true\"\n      @mouseleave=\"insideSuggestions = false\"\n      @focus=\"updateInputFocus\"\n      @blur=\"updateInputFocus(false)\"\n      tabindex=\"-1\"\n    >\n      <li\n        ref=\"grp_list\"\n        v-for=\"(suggestion_list, grp_name, grp_index) in filteredData\"\n        :key=\"grp_index\"\n        class=\"auto-suggest__suggestion-group-container\"\n      >\n        <!-- Group Header -->\n        <p\n          class=\"auto-suggest__suggestion-group-title pt-3 pb-1 px-4\"\n          v-if=\"!hideGroupTitle\"\n        >\n          <slot name=\"group\" :group_name=\"grp_name\"></slot>\n        </p>\n\n        <!-- Suggestion List of each group -->\n        <ul>\n          <li\n            v-for=\"(suggestion, index) in suggestion_list\"\n            :key=\"index\"\n            class=\"auto-suggest__suggestion-group__suggestion py-3 px-4 cursor-pointer\"\n            :class=\"{\n              'vx-auto-suggest__current-selected':\n                currentSelected == `${grp_index}.${index}`\n            }\"\n            @mouseenter=\"currentSelected = `${grp_index}.${index}`\"\n            @click=\"suggestionSelected\"\n          >\n            <slot :name=\"grp_name\" :suggestion=\"suggestion\"></slot>\n          </li>\n\n          <li\n            class=\"auto-suggest__suggestion-group__suggestion py-3 px-4 no-results\"\n            v-if=\"!suggestion_list.length && searchQuery\"\n          >\n            <slot name=\"noResult\" :group_name=\"grp_name\">\n              <p>No Results Found.</p>\n            </slot>\n          </li>\n        </ul>\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    placeholder: {\n      type: String,\n      default: 'Search..'\n    },\n    data: {\n      type: Object,\n      required: true\n    },\n    initalData: {\n      type: Object,\n      default: () => new Object()\n    },\n    inputClassses: {\n      type: [String, Object, Array]\n    },\n    autoFocus: {\n      type: Boolean,\n      default: false\n    },\n    showPinned: {\n      type: Boolean,\n      default: false\n    },\n    searchLimit: {\n      type: Number,\n      default: 4\n    },\n    hideGroupTitle: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      searchQuery: '',\n      filteredData: {},\n      currentSelected: -1,\n      inputFocused: false,\n      insideSuggestions: false\n    };\n  },\n  watch: {\n    // UPDATE SUGGESTIONS LIST\n    searchQuery(val) {\n      this.$emit('input', val);\n\n      if (val == '') {\n        this.inputInit();\n      } else {\n        const queried_data = {};\n        const data_grps = Object.keys(this.data);\n\n        data_grps.forEach((grp, i) => {\n          queried_data[data_grps[i]] = this.filter_grp(this.data[grp]);\n        });\n\n        // Check if any of group has at least one queried item\n        if (!Object.values(queried_data).some(obj => obj.length)) {\n          this.currentSelected = -1;\n        }\n\n        this.filteredData = queried_data;\n      }\n    },\n    autoFocus(val) {\n      if (val) this.focusInput();\n      else this.searchQuery = '';\n    },\n    filteredData(val) {\n      // Auto Select first item if it's not item-404\n      let grp_index = null;\n\n      for (const [index, grp_suggestions] of Object.values(val).entries()) {\n        if (grp_suggestions.length) {\n          grp_index = index;\n          break;\n        }\n      }\n\n      if (grp_index != null) this.currentSelected = grp_index + '.0';\n    }\n  },\n  methods: {\n    escPressed() {\n      this.$emit('closeSearchbar');\n      this.searchQuery = '';\n    },\n    filter_grp(grp) {\n      const exactEle = grp.data.filter(item => {\n        return item[grp.key]\n          .toLowerCase()\n          .startsWith(this.searchQuery.toLowerCase());\n      });\n      const containEle = grp.data.filter(item => {\n        return (\n          !item[grp.key]\n            .toLowerCase()\n            .startsWith(this.searchQuery.toLowerCase()) &&\n          item[grp.key].toLowerCase().indexOf(this.searchQuery.toLowerCase()) >\n            -1\n        );\n      });\n      return exactEle.concat(containEle).slice(0, this.searchLimit);\n    },\n    inputInit() {\n      if (\n        Object.entries(this.initalData).length === 0 &&\n        this.initalData.constructor === Object\n      ) {\n        this.filteredData = {};\n      } else {\n        this.filteredData = this.initalData;\n      }\n    },\n    updateInputFocus(val = true) {\n      if (val) {\n        if (this.searchQuery == '') this.inputInit();\n        setTimeout(() => {\n          this.inputFocused = true;\n        }, 100);\n      } else {\n        if (this.insideSuggestions) return;\n        setTimeout(() => {\n          this.inputFocused = false;\n        }, 100);\n        this.escPressed();\n      }\n    },\n    suggestionSelected() {\n      if (this.currentSelected > -1) {\n        const [grp_index, item_index] = this.currentSelected.split('.');\n\n        const grp_of_selected_item = Object.keys(this.data)[grp_index];\n        const selected_item = this.filteredData[grp_of_selected_item][\n          item_index\n        ];\n\n        this.$emit('selected', { [grp_of_selected_item]: selected_item });\n\n        this.searchQuery = '';\n      }\n    },\n    increaseIndex(val = true) {\n      // If there's no matching items\n      if (!Object.values(this.filteredData).some(grp_items => grp_items.length))\n        return;\n\n      const [grp_i, item_i] = this.currentSelected.split('.');\n\n      const grp_arr = Object.entries(this.filteredData);\n      const active_grp_total_items = grp_arr[grp_i][1].length;\n\n      if (val) {\n        // If active item is not of last item in grp\n        if (active_grp_total_items - 1 > item_i) {\n          this.currentSelected = grp_i + '.' + (Number(item_i) + 1);\n\n          // If active item grp is not last in grp list\n        } else if (grp_i < grp_arr.length - 1) {\n          for (let i = Number(grp_i) + 1; i < grp_arr.length; i++) {\n            // If navigating group have items => Then move in that group\n            if (grp_arr[i][1].length > 0) {\n              this.currentSelected = Number(i) + '.0';\n              break;\n            }\n          }\n        }\n      } else {\n        // If active item is not of first item in grp\n        if (Number(item_i)) {\n          this.currentSelected = grp_i + '.' + (Number(item_i) - 1);\n\n          // If active item grp  is not first in grp list\n        } else if (Number(grp_i)) {\n          for (let i = Number(grp_i) - 1; i >= 0; i--) {\n            // If navigating group have items => Then move in that group\n            if (grp_arr[i][1].length > 0) {\n              this.currentSelected = i + '.' + (grp_arr[i][1].length - 1);\n              break;\n            }\n          }\n        }\n      }\n    },\n    focusInput() {\n      this.$refs.input.$el.querySelector('input').focus();\n    }\n  },\n  mounted() {\n    if (this.autoFocus) this.focusInput();\n  }\n};\n</script>\n\n<style lang=\"scss\">\n@import '@/assets/scss/vuexy/components/vxAutoSuggest.scss';\n</style>\n"],"sourceRoot":"src/components/vx-auto-suggest"}]}