{"remainingRequest":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/babel-loader/lib/index.js!/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/src/components/search/SearchModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/src/components/search/SearchModal.vue","mtime":1617441641267},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport VideoPreview from \"../../layouts/components/vertical-nav-menu/PanelItems/components/VideoPreview\";\nimport ImagePreview from \"../../layouts/components/vertical-nav-menu/PanelItems/components/ImagePreview\";\nexport default {\n  name: 'SearchModal',\n  props: ['sceneNum', 'showModal'],\n  components: {\n    VideoPreview: VideoPreview,\n    ImagePreview: ImagePreview\n  },\n  data: function data() {\n    return {\n      searchQuery: '',\n      searchInProgress: false,\n      media: 'video'\n    };\n  },\n  computed: {\n    videoList: function videoList() {\n      return this.$store.state.studio.videos[this.sceneNum - 1];\n    },\n    imageList: function imageList() {\n      return this.$store.state.studio.images[this.sceneNum - 1];\n    },\n    keywords: function keywords() {\n      return this.$store.state.studio.keywords;\n    },\n    modalVisibility: {\n      get: function get() {\n        return this.showModal;\n      },\n      set: function set(val) {\n        this.$emit('update:showModal', val);\n      }\n    }\n  },\n  methods: {\n    selectVideo: function selectVideo(v) {\n      this.$emit('close');\n      this.$store.commit('studio/selectVideo', {\n        value: v[1],\n        sceneNum: this.sceneNum\n      });\n    },\n    selectImage: function selectImage(img, zoomType) {\n      var _this = this;\n\n      this.$emit('close');\n      var dataObj = {\n        image_url: img,\n        zoom: zoomType,\n        sceneNum: this.sceneNum\n      };\n      this.$vs.loading({\n        color: 'transparent',\n        container: \"#upload_scene_\".concat(this.sceneNum)\n      });\n      this.$store.commit('TOGGLE_PROGRESS_BAR', false);\n      this.$Progress.start();\n      this.$store.dispatch('studio/addMotionToImage', dataObj).then(function () {\n        _this.$Progress.finish();\n\n        _this.$vs.loading.close();\n      }).catch(function () {\n        _this.$Progress.fail();\n\n        _this.$vs.loading.close();\n      }).finally(function () {\n        _this.$vs.loading.close(\"#upload_scene_\".concat(_this.currentScene, \" > .con-vs-loading\"));\n\n        setTimeout(function () {\n          _this.$store.commit('TOGGLE_PROGRESS_BAR', true);\n        }, 1000);\n      });\n    },\n    searchMedia: function searchMedia() {\n      var _this2 = this;\n\n      this.searchInProgress = true;\n      this.$vs.loading({\n        background: 'primary',\n        color: '#fff',\n        container: '#search-with-loading',\n        scale: 0.4\n      });\n      var mediaType = this.media;\n      var dataObj = {\n        searchQuery: this.searchQuery,\n        srcLang: this.$store.state.studio.video.srcLang,\n        type: mediaType\n      };\n      this.$store.dispatch('studio/searchMedia', dataObj).then(function (res) {\n        if (Object.keys(res.data).length === 0) {\n          _this2.$vs.notify({\n            title: 'Not Found',\n            text: \"Cannot find \".concat(mediaType, \"s related to this keyword\"),\n            color: 'danger'\n          });\n        } else {\n          var _dataObj = {\n            sceneNum: _this2.sceneNum - 1,\n            value: res.data\n          };\n          mediaType === 'video' ? _this2.$store.commit('studio/setSearchedVideos', _dataObj) : _this2.$store.commit('studio/setSearchedImages', _dataObj);\n        }\n      }).catch(function (err) {\n        console.log(err);\n      }).finally(function () {\n        _this2.searchInProgress = false;\n\n        _this2.$vs.loading.close(\"#search-with-loading > .con-vs-loading\");\n      });\n\n      if (!this.keywords[this.sceneNum - 1].includes(this.searchQuery)) {\n        this.addKeyword();\n      }\n    },\n    addKeyword: function addKeyword() {\n      var payload = {\n        keyword: this.searchQuery,\n        sceneNum: this.sceneNum - 1\n      };\n      this.$store.commit('studio/addKeyword', payload);\n    }\n  }\n};",{"version":3,"sources":["SearchModal.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <vs-popup title=\"Search Media\" :active.sync=\"modalVisibility\">\n    <vx-input-group class=\"mb-4\">\n      <vs-input v-model=\"searchQuery\" placeholder=\"Search...\" />\n      <template slot=\"append\">\n        <div class=\"append-text btn-addon\">\n          <vs-button\n            color=\"primary\"\n            class=\"vs-con-loading__container\"\n            id=\"search-with-loading\"\n            icon-pack=\"feather\"\n            icon=\"icon-search\"\n            :disabled=\"searchInProgress\"\n            @click=\"searchMedia()\"\n          ></vs-button>\n        </div>\n      </template>\n    </vx-input-group>\n    <div class=\"flex justify-center -mx-2 mb-base\">\n      <vs-radio\n        v-model=\"media\"\n        class=\"px-2\"\n        vs-name=\"mediaType\"\n        vs-value=\"video\"\n        >Videos</vs-radio\n      >\n      <vs-radio\n        v-model=\"media\"\n        class=\"px-2\"\n        vs-name=\"mediaType\"\n        vs-value=\"image\"\n        >Images</vs-radio\n      >\n    </div>\n    <div v-if=\"media === 'video'\" class=\"flex flex-wrap -mr-2 -ml-2 -mb-2\">\n      <div\n        v-for=\"(v, indexv) in videoList\"\n        :key=\"`sv_${sceneNum}_${indexv}`\"\n        class=\"w-full sm:w-1/2 md:w-1/2 lg:w-1/3 p-2\"\n      >\n        <VideoPreview\n          :src=\"v[1]\"\n          v-show=\"v[3] !== ''\"\n          @click.native=\"selectVideo(v)\"\n          class=\"cursor-pointer\"\n        />\n      </div>\n    </div>\n    <div v-else class=\"flex flex-wrap -mr-2 -ml-2 -mb-2\">\n      <div\n        v-for=\"(img, indexi) in imageList\"\n        :key=\"`si_${sceneNum}_${indexi}`\"\n        class=\"w-full sm:w-1/2 md:w-1/2 lg:w-1/3 p-2\"\n      >\n        <ImagePreview\n          :src=\"img[0]\"\n          :imageId=\"`modal_img_${indexi}`\"\n          @motion=\"selectImage(img[0], $event)\"\n        />\n      </div>\n    </div>\n  </vs-popup>\n</template>\n<script>\nimport VideoPreview from '../../layouts/components/vertical-nav-menu/PanelItems/components/VideoPreview';\nimport ImagePreview from '../../layouts/components/vertical-nav-menu/PanelItems/components/ImagePreview';\nexport default {\n  name: 'SearchModal',\n  props: ['sceneNum', 'showModal'],\n  components: {\n    VideoPreview,\n    ImagePreview\n  },\n  data() {\n    return {\n      searchQuery: '',\n      searchInProgress: false,\n      media: 'video'\n    };\n  },\n  computed: {\n    videoList() {\n      return this.$store.state.studio.videos[this.sceneNum - 1];\n    },\n    imageList() {\n      return this.$store.state.studio.images[this.sceneNum - 1];\n    },\n    keywords() {\n      return this.$store.state.studio.keywords;\n    },\n    modalVisibility: {\n      get() {\n        return this.showModal;\n      },\n      set(val) {\n        this.$emit('update:showModal', val);\n      }\n    }\n  },\n  methods: {\n    selectVideo(v) {\n      this.$emit('close');\n      this.$store.commit('studio/selectVideo', {\n        value: v[1],\n        sceneNum: this.sceneNum\n      });\n    },\n    selectImage(img, zoomType) {\n      this.$emit('close');\n      const dataObj = {\n        image_url: img,\n        zoom: zoomType,\n        sceneNum: this.sceneNum\n      };\n      this.$vs.loading({\n        color: 'transparent',\n        container: `#upload_scene_${this.sceneNum}`\n      });\n      this.$store.commit('TOGGLE_PROGRESS_BAR', false);\n      this.$Progress.start();\n      this.$store\n        .dispatch('studio/addMotionToImage', dataObj)\n        .then(() => {\n          this.$Progress.finish();\n          this.$vs.loading.close();\n        })\n        .catch(() => {\n          this.$Progress.fail();\n          this.$vs.loading.close();\n        })\n        .finally(() => {\n          this.$vs.loading.close(\n            `#upload_scene_${this.currentScene} > .con-vs-loading`\n          );\n          setTimeout(() => {\n            this.$store.commit('TOGGLE_PROGRESS_BAR', true);\n          }, 1000);\n        });\n    },\n    searchMedia() {\n      this.searchInProgress = true;\n      this.$vs.loading({\n        background: 'primary',\n        color: '#fff',\n        container: '#search-with-loading',\n        scale: 0.4\n      });\n      const mediaType = this.media;\n      const dataObj = {\n        searchQuery: this.searchQuery,\n        srcLang: this.$store.state.studio.video.srcLang,\n        type: mediaType\n      };\n      this.$store\n        .dispatch('studio/searchMedia', dataObj)\n        .then(res => {\n          if (Object.keys(res.data).length === 0) {\n            this.$vs.notify({\n              title: 'Not Found',\n              text: `Cannot find ${mediaType}s related to this keyword`,\n              color: 'danger'\n            });\n          } else {\n            const dataObj = {\n              sceneNum: this.sceneNum - 1,\n              value: res.data\n            };\n            mediaType === 'video'\n              ? this.$store.commit('studio/setSearchedVideos', dataObj)\n              : this.$store.commit('studio/setSearchedImages', dataObj);\n          }\n        })\n        .catch(err => {\n          console.log(err);\n        })\n        .finally(() => {\n          this.searchInProgress = false;\n          this.$vs.loading.close(`#search-with-loading > .con-vs-loading`);\n        });\n\n      if (!this.keywords[this.sceneNum - 1].includes(this.searchQuery)) {\n        this.addKeyword();\n      }\n    },\n    addKeyword() {\n      const payload = {\n        keyword: this.searchQuery,\n        sceneNum: this.sceneNum - 1\n      };\n      this.$store.commit('studio/addKeyword', payload);\n    }\n  }\n};\n</script>\n"],"sourceRoot":"src/components/search"}]}