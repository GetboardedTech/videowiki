{"remainingRequest":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/babel-loader/lib/index.js!/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/eslint-loader/index.js??ref--13-0!/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/src/store/actions.js","dependencies":[{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/src/store/actions.js","mtime":1617441641271},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n\n/* =========================================================================================\n  File Name: actions.js\n  Description: Vuex Store - actions\n  ----------------------------------------------------------------------------------------\n  Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\n  Author: Pixinvent\n  Author URL: http://www.themeforest.net/user/pixinvent\n========================================================================================== */\n// import connectWallet from '../blockchain/connectWallet';\n// var walletInstance = new connectWallet();\nimport { onBuy, onConnect, onDisconnect } from \"../blockchain/connectWallet\";\nimport { buyContent, publishContent, downloadContent, getPrice, isDownloadable } from \"../blockchain/OceanMarket\";\nvar actions = {\n  // /////////////////////////////////////////////\n  // COMPONENTS\n  // /////////////////////////////////////////////\n  // Vertical NavMenu\n  updateVerticalNavMenuWidth: function updateVerticalNavMenuWidth(_ref, width) {\n    var commit = _ref.commit;\n    commit('UPDATE_VERTICAL_NAV_MENU_WIDTH', width);\n  },\n  // VxAutoSuggest\n  updateStarredPage: function updateStarredPage(_ref2, payload) {\n    var commit = _ref2.commit;\n    commit('UPDATE_STARRED_PAGE', payload);\n  },\n  // The Navbar\n  arrangeStarredPagesLimited: function arrangeStarredPagesLimited(_ref3, list) {\n    var commit = _ref3.commit;\n    commit('ARRANGE_STARRED_PAGES_LIMITED', list);\n  },\n  arrangeStarredPagesMore: function arrangeStarredPagesMore(_ref4, list) {\n    var commit = _ref4.commit;\n    commit('ARRANGE_STARRED_PAGES_MORE', list);\n  },\n  // /////////////////////////////////////////////\n  // UI\n  // /////////////////////////////////////////////\n  toggleContentOverlay: function toggleContentOverlay(_ref5) {\n    var commit = _ref5.commit;\n    commit('TOGGLE_CONTENT_OVERLAY');\n  },\n  updateTheme: function updateTheme(_ref6, val) {\n    var commit = _ref6.commit;\n    commit('UPDATE_THEME', val);\n  },\n  // /////////////////////////////////////////////\n  // User/Account\n  // /////////////////////////////////////////////\n  updateUserInfo: function updateUserInfo(_ref7, payload) {\n    var commit = _ref7.commit;\n    commit('UPDATE_USER_INFO', payload);\n  },\n  connectWallet: function () {\n    var _connectWallet = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(_ref8) {\n      var commit;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref8.commit;\n              _context.prev = 1;\n              _context.next = 4;\n              return onConnect();\n\n            case 4:\n              _context.next = 9;\n              break;\n\n            case 6:\n              _context.prev = 6;\n              _context.t0 = _context[\"catch\"](1);\n              console.log(_context.t0);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 6]]);\n    }));\n\n    function connectWallet(_x) {\n      return _connectWallet.apply(this, arguments);\n    }\n\n    return connectWallet;\n  }(),\n  disconnectWallet: function () {\n    var _disconnectWallet = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(_ref9) {\n      var commit;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              commit = _ref9.commit;\n              _context2.prev = 1;\n              _context2.next = 4;\n              return onDisconnect();\n\n            case 4:\n              commit('DISCONNECT');\n              _context2.next = 10;\n              break;\n\n            case 7:\n              _context2.prev = 7;\n              _context2.t0 = _context2[\"catch\"](1);\n              console.log(_context2.t0);\n\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 7]]);\n    }));\n\n    function disconnectWallet(_x2) {\n      return _disconnectWallet.apply(this, arguments);\n    }\n\n    return disconnectWallet;\n  }(),\n\n  /* async buyContent({ commit }) {\n    try {\n      await onBuy();\n    } catch (err) {\n      console.log(err);\n    }\n  }, */\n  getAssetPrice: function () {\n    var _getAssetPrice = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(_ref10, exchangeId) {\n      var commit, price;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              commit = _ref10.commit;\n              _context3.prev = 1;\n              _context3.next = 4;\n              return getPrice(exchangeId);\n\n            case 4:\n              price = _context3.sent;\n              return _context3.abrupt(\"return\", price);\n\n            case 8:\n              _context3.prev = 8;\n              _context3.t0 = _context3[\"catch\"](1);\n              console.log(_context3.t0);\n\n            case 11:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[1, 8]]);\n    }));\n\n    function getAssetPrice(_x3, _x4) {\n      return _getAssetPrice.apply(this, arguments);\n    }\n\n    return getAssetPrice;\n  }(),\n  getDownloadStatus: function () {\n    var _getDownloadStatus = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(_ref11, payload) {\n      var commit;\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              commit = _ref11.commit;\n              _context4.next = 3;\n              return isDownloadable(payload.dataTokenAddress, payload.accountAddress);\n\n            case 3:\n              return _context4.abrupt(\"return\", _context4.sent);\n\n            case 4:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    function getDownloadStatus(_x5, _x6) {\n      return _getDownloadStatus.apply(this, arguments);\n    }\n\n    return getDownloadStatus;\n  }(),\n  publishToOcean: function () {\n    var _publishToOcean = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(_ref12, payload) {\n      var commit, videoTxData;\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              commit = _ref12.commit;\n              _context5.prev = 1;\n              _context5.next = 4;\n              return publishContent(payload.author, payload.metaData);\n\n            case 4:\n              videoTxData = _context5.sent;\n              console.log(videoTxData);\n              commit('studio/SET_VIDEO_ATTR', {\n                key: 'txData',\n                value: videoTxData\n              });\n              return _context5.abrupt(\"return\", true);\n\n            case 10:\n              _context5.prev = 10;\n              _context5.t0 = _context5[\"catch\"](1);\n              console.log(_context5.t0);\n              throw _context5.t0;\n\n            case 14:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[1, 10]]);\n    }));\n\n    function publishToOcean(_x7, _x8) {\n      return _publishToOcean.apply(this, arguments);\n    }\n\n    return publishToOcean;\n  }(),\n  initiateBuy: function () {\n    var _initiateBuy = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(_ref13, exchangeId) {\n      var commit;\n      return regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              commit = _ref13.commit;\n              _context6.prev = 1;\n              _context6.next = 4;\n              return buyContent(exchangeId);\n\n            case 4:\n              _context6.next = 10;\n              break;\n\n            case 6:\n              _context6.prev = 6;\n              _context6.t0 = _context6[\"catch\"](1);\n              console.log({\n                buyContentError: _context6.t0\n              });\n              throw _context6.t0;\n\n            case 10:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, null, [[1, 6]]);\n    }));\n\n    function initiateBuy(_x9, _x10) {\n      return _initiateBuy.apply(this, arguments);\n    }\n\n    return initiateBuy;\n  }(),\n  startDownload: function () {\n    var _startDownload = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(_ref14, payload) {\n      var commit;\n      return regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              commit = _ref14.commit;\n              _context7.prev = 1;\n              _context7.next = 4;\n              return downloadContent(payload.did, payload.dta);\n\n            case 4:\n              _context7.next = 10;\n              break;\n\n            case 6:\n              _context7.prev = 6;\n              _context7.t0 = _context7[\"catch\"](1);\n              console.log({\n                downloadContentErro: _context7.t0\n              });\n              throw _context7.t0;\n\n            case 10:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7, null, [[1, 6]]);\n    }));\n\n    function startDownload(_x11, _x12) {\n      return _startDownload.apply(this, arguments);\n    }\n\n    return startDownload;\n  }()\n};\nexport default actions;",{"version":3,"sources":["/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/src/store/actions.js"],"names":["onBuy","onConnect","onDisconnect","buyContent","publishContent","downloadContent","getPrice","isDownloadable","actions","updateVerticalNavMenuWidth","width","commit","updateStarredPage","payload","arrangeStarredPagesLimited","list","arrangeStarredPagesMore","toggleContentOverlay","updateTheme","val","updateUserInfo","connectWallet","console","log","disconnectWallet","getAssetPrice","exchangeId","price","getDownloadStatus","dataTokenAddress","accountAddress","publishToOcean","author","metaData","videoTxData","key","value","initiateBuy","buyContentError","startDownload","did","dta","downloadContentErro"],"mappings":"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","sourcesContent":["/* =========================================================================================\n  File Name: actions.js\n  Description: Vuex Store - actions\n  ----------------------------------------------------------------------------------------\n  Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\n  Author: Pixinvent\n  Author URL: http://www.themeforest.net/user/pixinvent\n========================================================================================== */\n\n// import connectWallet from '../blockchain/connectWallet';\n// var walletInstance = new connectWallet();\nimport { onBuy, onConnect, onDisconnect } from '../blockchain/connectWallet';\nimport {\n  buyContent,\n  publishContent,\n  downloadContent,\n  getPrice,\n  isDownloadable\n} from '../blockchain/OceanMarket';\n\nconst actions = {\n  // /////////////////////////////////////////////\n  // COMPONENTS\n  // /////////////////////////////////////////////\n\n  // Vertical NavMenu\n  updateVerticalNavMenuWidth({ commit }, width) {\n    commit('UPDATE_VERTICAL_NAV_MENU_WIDTH', width);\n  },\n\n  // VxAutoSuggest\n  updateStarredPage({ commit }, payload) {\n    commit('UPDATE_STARRED_PAGE', payload);\n  },\n\n  // The Navbar\n  arrangeStarredPagesLimited({ commit }, list) {\n    commit('ARRANGE_STARRED_PAGES_LIMITED', list);\n  },\n  arrangeStarredPagesMore({ commit }, list) {\n    commit('ARRANGE_STARRED_PAGES_MORE', list);\n  },\n\n  // /////////////////////////////////////////////\n  // UI\n  // /////////////////////////////////////////////\n\n  toggleContentOverlay({ commit }) {\n    commit('TOGGLE_CONTENT_OVERLAY');\n  },\n  updateTheme({ commit }, val) {\n    commit('UPDATE_THEME', val);\n  },\n\n  // /////////////////////////////////////////////\n  // User/Account\n  // /////////////////////////////////////////////\n\n  updateUserInfo({ commit }, payload) {\n    commit('UPDATE_USER_INFO', payload);\n  },\n  async connectWallet({ commit }) {\n    try {\n      await onConnect();\n    } catch (err) {\n      console.log(err);\n    }\n  },\n\n  async disconnectWallet({ commit }) {\n    try {\n      await onDisconnect();\n      commit('DISCONNECT');\n    } catch (err) {\n      console.log(err);\n    }\n  },\n  /* async buyContent({ commit }) {\n    try {\n      await onBuy();\n    } catch (err) {\n      console.log(err);\n    }\n  }, */\n  async getAssetPrice({ commit }, exchangeId) {\n    try {\n      const price = await getPrice(exchangeId);\n      return price;\n    } catch (err) {\n      console.log(err);\n    }\n  },\n  async getDownloadStatus({ commit }, payload) {\n    return await isDownloadable(\n      payload.dataTokenAddress,\n      payload.accountAddress\n    );\n  },\n  async publishToOcean({ commit }, payload) {\n    try {\n      const videoTxData = await publishContent(\n        payload.author,\n        payload.metaData\n      );\n      console.log(videoTxData);\n      commit('studio/SET_VIDEO_ATTR', {\n        key: 'txData',\n        value: videoTxData\n      });\n      return true;\n    } catch (e) {\n      console.log(e);\n      throw e;\n    }\n  },\n  async initiateBuy({ commit }, exchangeId) {\n    try {\n      await buyContent(exchangeId);\n    } catch (e) {\n      console.log({ buyContentError: e });\n      throw e;\n    }\n  },\n  async startDownload({ commit }, payload) {\n    try {\n      await downloadContent(payload.did, payload.dta);\n    } catch (e) {\n      console.log({ downloadContentErro: e });\n      throw e;\n    }\n  }\n};\n\nexport default actions;\n"]}]}