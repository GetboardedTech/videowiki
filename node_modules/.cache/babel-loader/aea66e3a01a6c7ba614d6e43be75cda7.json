{"remainingRequest":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/babel-loader/lib/index.js!/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/eslint-loader/index.js??ref--13-0!/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/src/http/requests/auth/jwt/index.js","dependencies":[{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/src/http/requests/auth/jwt/index.js","mtime":1617441641267},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import axios from \"../../../axios/index.js\";\nimport store from \"../../../../store/store.js\";\nimport Constant from \"../../../../../constant\"; // Token Refresh\n\nvar isAlreadyFetchingAccessToken = false;\nvar subscribers = [];\n\nfunction onAccessTokenFetched(access_token) {\n  subscribers = subscribers.filter(function (callback) {\n    return callback(access_token);\n  });\n}\n\nfunction addSubscriber(callback) {\n  subscribers.push(callback);\n}\n\nexport default {\n  init: function init() {\n    axios.interceptors.response.use(function (response) {\n      return response;\n    }, function (error) {\n      // const { config, response: { status } } = error\n      var config = error.config,\n          response = error.response;\n      var originalRequest = config; // if (status === 401) {\n\n      if (response && response.status === 401) {\n        if (!isAlreadyFetchingAccessToken) {\n          isAlreadyFetchingAccessToken = true;\n          store.dispatch('auth/fetchAccessToken').then(function (access_token) {\n            isAlreadyFetchingAccessToken = false;\n            onAccessTokenFetched(access_token);\n          });\n        }\n\n        var retryOriginalRequest = new Promise(function (resolve) {\n          addSubscriber(function (access_token) {\n            originalRequest.headers.Authorization = \"Bearer \".concat(access_token);\n            resolve(axios(originalRequest));\n          });\n        });\n        return retryOriginalRequest;\n      }\n\n      return Promise.reject(error);\n    });\n  },\n  login: function login(email, pwd) {\n    return axios.post(Constant.apiUrl + '/api/auth/login/', {\n      username: email,\n      password: pwd\n    });\n  },\n  registerUser: function registerUser(firstName, lastName, email, pwd) {\n    return axios.post(Constant.apiUrl + '/api/users/', {\n      first_name: firstName,\n      last_name: lastName,\n      username: email,\n      email: email,\n      password: pwd,\n      profile: {\n        display_name: firstName + ' ' + lastName,\n        active: true\n      }\n    });\n  },\n  refreshToken: function refreshToken() {\n    return axios.post(Constant.apiUrl + '/api/auth/refresh-token/', {\n      accessToken: localStorage.getItem('accessToken')\n    });\n  }\n};",{"version":3,"sources":["/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/src/http/requests/auth/jwt/index.js"],"names":["axios","store","Constant","isAlreadyFetchingAccessToken","subscribers","onAccessTokenFetched","access_token","filter","callback","addSubscriber","push","init","interceptors","response","use","error","config","originalRequest","status","dispatch","then","retryOriginalRequest","Promise","resolve","headers","Authorization","reject","login","email","pwd","post","apiUrl","username","password","registerUser","firstName","lastName","first_name","last_name","profile","display_name","active","refreshToken","accessToken","localStorage","getItem"],"mappings":"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","sourcesContent":["import axios from '../../../axios/index.js';\nimport store from '../../../../store/store.js';\nimport Constant from '../../../../../constant';\n\n// Token Refresh\nlet isAlreadyFetchingAccessToken = false;\nlet subscribers = [];\n\nfunction onAccessTokenFetched(access_token) {\n  subscribers = subscribers.filter(callback => callback(access_token));\n}\n\nfunction addSubscriber(callback) {\n  subscribers.push(callback);\n}\n\nexport default {\n  init() {\n    axios.interceptors.response.use(\n      function(response) {\n        return response;\n      },\n      function(error) {\n        // const { config, response: { status } } = error\n        const { config, response } = error;\n        const originalRequest = config;\n\n        // if (status === 401) {\n        if (response && response.status === 401) {\n          if (!isAlreadyFetchingAccessToken) {\n            isAlreadyFetchingAccessToken = true;\n            store.dispatch('auth/fetchAccessToken').then(access_token => {\n              isAlreadyFetchingAccessToken = false;\n              onAccessTokenFetched(access_token);\n            });\n          }\n\n          const retryOriginalRequest = new Promise(resolve => {\n            addSubscriber(access_token => {\n              originalRequest.headers.Authorization = `Bearer ${access_token}`;\n              resolve(axios(originalRequest));\n            });\n          });\n          return retryOriginalRequest;\n        }\n        return Promise.reject(error);\n      }\n    );\n  },\n  login(email, pwd) {\n    return axios.post(Constant.apiUrl + '/api/auth/login/', {\n      username: email,\n      password: pwd\n    });\n  },\n  registerUser(firstName, lastName, email, pwd) {\n    return axios.post(Constant.apiUrl + '/api/users/', {\n      first_name: firstName,\n      last_name: lastName,\n      username: email,\n      email,\n      password: pwd,\n      profile: {\n        display_name: firstName + ' ' + lastName,\n        active: true\n      }\n    });\n  },\n  refreshToken() {\n    return axios.post(Constant.apiUrl + '/api/auth/refresh-token/', {\n      accessToken: localStorage.getItem('accessToken')\n    });\n  }\n};\n"]}]}