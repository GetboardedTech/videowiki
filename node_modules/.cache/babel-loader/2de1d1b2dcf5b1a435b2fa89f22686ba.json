{"remainingRequest":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/babel-loader/lib/index.js!/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/src/components/VideoNotFound.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/src/components/VideoNotFound.vue","mtime":1617441641267},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.split\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'VideoNotFound',\n  props: ['sceneNum'],\n  data: function data() {\n    return {\n      showEffectModal: false,\n      currentUploadedImage: null\n    };\n  },\n  methods: {\n    selectImage: function selectImage(zoomType) {\n      var _this = this;\n\n      this.showEffectModal = false;\n      var dataObj = {\n        image_url: this.currentUploadedImage,\n        zoom: zoomType\n      };\n      this.$vs.loading({\n        container: \"#upload_scene_\".concat(this.sceneNum)\n      }); // this.$Progress.start();\n\n      this.$store.dispatch('studio/addMotionToImage', dataObj).then(function (data) {\n        _this.$store.commit('studio/selectVideo', {\n          value: data.url,\n          sceneNum: _this.sceneNum\n        });\n      }).catch(function () {// this.$Progress.fail();\n        // this.$vs.loading.close();\n      }).finally(function () {\n        _this.$vs.loading.close(\"#upload_scene_\".concat(_this.sceneNum, \" > .con-vs-loading\"));\n      });\n    },\n    chooseFile: function chooseFile() {\n      document.getElementById(\"add_scene_\".concat(this.sceneNum)).click();\n    },\n    uploadFile: function uploadFile(event) {\n      var _this2 = this;\n\n      var selectedFile = event.target.files[0];\n      this.$vs.loading({\n        container: \"#upload_scene_\".concat(this.sceneNum)\n      });\n      this.$store.dispatch('studio/uploadMedia', selectedFile).then(function (url) {\n        if (selectedFile.type.split('/')[0] === 'video') {\n          _this2.$store.commit('studio/selectVideo', {\n            sceneNum: _this2.sceneNum,\n            value: url\n          });\n        } else {\n          _this2.showEffectModal = true;\n        }\n\n        _this2.currentUploadedImage = url;\n        var dataObj = {\n          fileName: selectedFile.name,\n          url: url\n        };\n\n        _this2.$store.commit('studio/setUploadedMedia', dataObj);\n      }).catch(function () {\n        _this2.$vs.notify({\n          title: 'Error Occured',\n          text: 'Media upload failed',\n          color: 'danger'\n        });\n      }).finally(function () {\n        _this2.$vs.loading.close(\"#upload_scene_\".concat(_this2.sceneNum, \" > .con-vs-loading\"));\n      });\n    }\n  }\n};",{"version":3,"sources":["VideoNotFound.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiEA,eAAA;AACA,EAAA,IAAA,EAAA,eADA;AAEA,EAAA,KAAA,EAAA,CAAA,UAAA,CAFA;AAGA,EAAA,IAHA,kBAGA;AACA,WAAA;AACA,MAAA,eAAA,EAAA,KADA;AAEA,MAAA,oBAAA,EAAA;AAFA,KAAA;AAIA,GARA;AASA,EAAA,OAAA,EAAA;AACA,IAAA,WADA,uBACA,QADA,EACA;AAAA;;AACA,WAAA,eAAA,GAAA,KAAA;AACA,UAAA,OAAA,GAAA;AACA,QAAA,SAAA,EAAA,KAAA,oBADA;AAEA,QAAA,IAAA,EAAA;AAFA,OAAA;AAIA,WAAA,GAAA,CAAA,OAAA,CAAA;AACA,QAAA,SAAA,0BAAA,KAAA,QAAA;AADA,OAAA,EANA,CASA;;AACA,WAAA,MAAA,CACA,QADA,CACA,yBADA,EACA,OADA,EAEA,IAFA,CAEA,UAAA,IAAA,EAAA;AACA,QAAA,KAAA,CAAA,MAAA,CAAA,MAAA,CAAA,oBAAA,EAAA;AACA,UAAA,KAAA,EAAA,IAAA,CAAA,GADA;AAEA,UAAA,QAAA,EAAA,KAAA,CAAA;AAFA,SAAA;AAIA,OAPA,EAQA,KARA,CAQA,YAAA,CACA;AACA;AACA,OAXA,EAYA,OAZA,CAYA,YAAA;AACA,QAAA,KAAA,CAAA,GAAA,CAAA,OAAA,CAAA,KAAA,yBACA,KAAA,CAAA,QADA;AAGA,OAhBA;AAiBA,KA5BA;AA6BA,IAAA,UA7BA,wBA6BA;AACA,MAAA,QAAA,CAAA,cAAA,qBAAA,KAAA,QAAA,GAAA,KAAA;AACA,KA/BA;AAgCA,IAAA,UAhCA,sBAgCA,KAhCA,EAgCA;AAAA;;AACA,UAAA,YAAA,GAAA,KAAA,CAAA,MAAA,CAAA,KAAA,CAAA,CAAA,CAAA;AACA,WAAA,GAAA,CAAA,OAAA,CAAA;AACA,QAAA,SAAA,0BAAA,KAAA,QAAA;AADA,OAAA;AAGA,WAAA,MAAA,CACA,QADA,CACA,oBADA,EACA,YADA,EAEA,IAFA,CAEA,UAAA,GAAA,EAAA;AACA,YAAA,YAAA,CAAA,IAAA,CAAA,KAAA,CAAA,GAAA,EAAA,CAAA,MAAA,OAAA,EAAA;AACA,UAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,oBAAA,EAAA;AACA,YAAA,QAAA,EAAA,MAAA,CAAA,QADA;AAEA,YAAA,KAAA,EAAA;AAFA,WAAA;AAIA,SALA,MAKA;AACA,UAAA,MAAA,CAAA,eAAA,GAAA,IAAA;AACA;;AACA,QAAA,MAAA,CAAA,oBAAA,GAAA,GAAA;AACA,YAAA,OAAA,GAAA;AACA,UAAA,QAAA,EAAA,YAAA,CAAA,IADA;AAEA,UAAA,GAAA,EAAA;AAFA,SAAA;;AAIA,QAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,yBAAA,EAAA,OAAA;AACA,OAjBA,EAkBA,KAlBA,CAkBA,YAAA;AACA,QAAA,MAAA,CAAA,GAAA,CAAA,MAAA,CAAA;AACA,UAAA,KAAA,EAAA,eADA;AAEA,UAAA,IAAA,EAAA,qBAFA;AAGA,UAAA,KAAA,EAAA;AAHA,SAAA;AAKA,OAxBA,EAyBA,OAzBA,CAyBA,YAAA;AACA,QAAA,MAAA,CAAA,GAAA,CAAA,OAAA,CAAA,KAAA,yBACA,MAAA,CAAA,QADA;AAGA,OA7BA;AA8BA;AAnEA;AATA,CAAA","sourcesContent":["<template>\n  <div class=\"flex items-center justify-center\">\n    <!--vue-progress-bar class=\"absolute\"></vue-progress-bar-->\n    <div class=\"flex items-center justify-center\">\n      <vs-button\n        type=\"filled\"\n        class=\"mr-2\"\n        :size=\"$store.state.windowWidth < 400 ? 'small' : 'default'\"\n        @click=\"$emit('search', sceneNum)\"\n        >Search</vs-button\n      >\n      <input\n        type=\"file\"\n        :id=\"`add_scene_${sceneNum}`\"\n        @change=\"uploadFile($event)\"\n        class=\"hidden\"\n        accept=\"video/*,image/*\"\n      />\n      <vs-button\n        type=\"filled\"\n        @click=\"chooseFile\"\n        :size=\"$store.state.windowWidth < 400 ? 'small' : 'default'\"\n        >Upload</vs-button\n      >\n    </div>\n    <vs-popup title=\"Select Motion\" :active.sync=\"showEffectModal\">\n      <div class=\"flex flex-wrap -m-3\">\n        <div class=\"w-1/5 p-3\">\n          <vx-card\n            class=\"effect-card bg-primary text-white\"\n            @click=\"selectImage('None')\"\n          >\n            <div class=\"-m-3 text-center\">\n              <vs-icon icon=\"not_interested\" size=\"45px\" />\n              <p>None</p>\n            </div>\n          </vx-card>\n        </div>\n        <div class=\"w-1/5 p-3\">\n          <vx-card\n            class=\"effect-card bg-primary text-white\"\n            @click=\"selectImage('in')\"\n          >\n            <div class=\"-m-3 text-center\">\n              <vs-icon icon=\"zoom_in\" size=\"45px\" />\n              <p>Zoom In</p>\n            </div>\n          </vx-card>\n        </div>\n        <div class=\"w-1/5 p-3\">\n          <vx-card\n            class=\"effect-card bg-primary text-white\"\n            @click=\"selectImage('out')\"\n          >\n            <div class=\"-m-3 text-center\">\n              <vs-icon icon=\"zoom_out\" size=\"45px\" />\n              <p>Zoom out</p>\n            </div>\n          </vx-card>\n        </div>\n      </div>\n    </vs-popup>\n  </div>\n</template>\n<script>\nexport default {\n  name: 'VideoNotFound',\n  props: ['sceneNum'],\n  data() {\n    return {\n      showEffectModal: false,\n      currentUploadedImage: null\n    };\n  },\n  methods: {\n    selectImage(zoomType) {\n      this.showEffectModal = false;\n      const dataObj = {\n        image_url: this.currentUploadedImage,\n        zoom: zoomType\n      };\n      this.$vs.loading({\n        container: `#upload_scene_${this.sceneNum}`\n      });\n      // this.$Progress.start();\n      this.$store\n        .dispatch('studio/addMotionToImage', dataObj)\n        .then(data => {\n          this.$store.commit('studio/selectVideo', {\n            value: data.url,\n            sceneNum: this.sceneNum\n          });\n        })\n        .catch(() => {\n          // this.$Progress.fail();\n          // this.$vs.loading.close();\n        })\n        .finally(() => {\n          this.$vs.loading.close(\n            `#upload_scene_${this.sceneNum} > .con-vs-loading`\n          );\n        });\n    },\n    chooseFile() {\n      document.getElementById(`add_scene_${this.sceneNum}`).click();\n    },\n    uploadFile(event) {\n      const selectedFile = event.target.files[0];\n      this.$vs.loading({\n        container: `#upload_scene_${this.sceneNum}`\n      });\n      this.$store\n        .dispatch('studio/uploadMedia', selectedFile)\n        .then(url => {\n          if (selectedFile.type.split('/')[0] === 'video') {\n            this.$store.commit('studio/selectVideo', {\n              sceneNum: this.sceneNum,\n              value: url\n            });\n          } else {\n            this.showEffectModal = true;\n          }\n          this.currentUploadedImage = url;\n          const dataObj = {\n            fileName: selectedFile.name,\n            url\n          };\n          this.$store.commit('studio/setUploadedMedia', dataObj);\n        })\n        .catch(() => {\n          this.$vs.notify({\n            title: 'Error Occured',\n            text: 'Media upload failed',\n            color: 'danger'\n          });\n        })\n        .finally(() => {\n          this.$vs.loading.close(\n            `#upload_scene_${this.sceneNum} > .con-vs-loading`\n          );\n        });\n    }\n  }\n};\n</script>\n<style scoped>\n.effect-card {\n  display: flex;\n  justify-content: center;\n}\n.effect-card:hover {\n  cursor: pointer;\n  transform: translateY(-5px);\n  box-shadow: 0px 4px 25px 0px rgba(0, 0, 0, 0.25);\n}\n</style>\n"],"sourceRoot":"src/components"}]}