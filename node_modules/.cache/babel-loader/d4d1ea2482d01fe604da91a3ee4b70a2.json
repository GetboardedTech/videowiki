{"remainingRequest":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/babel-loader/lib/index.js!/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/src/views/dashboard/components/VideoCard.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/src/views/dashboard/components/VideoCard.vue","mtime":1617441641275},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport constants from \"../../../../constant\";\nimport img from \"../../../assets/images/pages/VideoThumbnail.png\";\nimport axios from \"../../../axios\";\nimport VxTooltip from \"../../../layouts/components/vx-tooltip/VxTooltip.vue\";\nimport { ajaxCallMixin } from \"../../../http/HttpCommon\";\nexport default {\n  components: {\n    VxTooltip: VxTooltip\n  },\n  name: 'VideoCard',\n  props: ['prop', 'user'],\n  mixins: [ajaxCallMixin],\n  data: function data() {\n    return {\n      months: ['Jan', 'Feb', 'Mar', 'April', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n    };\n  },\n  computed: {\n    fullName: function fullName() {\n      return this.prop.user__first_name + ' ' + this.prop.user__last_name;\n    },\n    baseUrl: function baseUrl() {\n      return constants.apiUrl;\n    },\n    defaultImg: function defaultImg() {\n      return img;\n    },\n    getUploadTime: function getUploadTime() {\n      var date = Date.now();\n      var uploadDate = new Date(this.prop.publish_time);\n      var diff = Math.ceil(Math.abs(date - uploadDate) / 1000);\n\n      if (diff < 60) {\n        return diff < 30 ? \"Just Now\" : \"\".concat(diff, \" secs ago\");\n      } else if (diff < 60 * 60) {\n        var mins = Math.round(diff / 60);\n        return mins === 1 ? \"\".concat(mins, \" min ago\") : \"\".concat(mins, \" mins ago\");\n      } else if (diff < 60 * 60 * 24) {\n        var hours = Math.round(diff / (60 * 60));\n        return hours === 1 ? \"\".concat(hours, \" hr ago\") : \"\".concat(hours, \" hrs ago\");\n      } else if (diff <= 60 * 60 * 24 * 6.5) {\n        var days = Math.round(diff / (60 * 60 * 24));\n        return days === 1 ? \"\".concat(days, \" day ago\") : \"\".concat(days, \" days ago\");\n      } else if (diff < 60 * 60 * 24 * 7 * 4) {\n        var weeks = Math.round(diff / (60 * 60 * 24 * 7));\n        return weeks === 1 ? \"\".concat(weeks, \" week ago\") : \"\".concat(weeks, \" weeks ago\");\n      } else if (diff < 60 * 60 * 24 * 7 * 4 * 12) {\n        var months = Math.round(diff / (60 * 60 * 24 * 7 * 4));\n        return months === 1 ? \"\".concat(months, \" month ago\") : \"\".concat(months, \" months ago\");\n      } else {\n        var years = Math.round(diff / (60 * 60 * 24 * 7 * 4 * 12));\n        return years === 1 ? \"\".concat(years, \" year ago\") : \"\".concat(years, \" years ago\");\n      }\n    }\n  },\n  methods: {\n    editVideo: function editVideo() {\n      this.$store.commit('studio/toggleText');\n      this.$router.replace(\"/studio/\".concat(this.prop.id));\n    }\n  }\n};",{"version":3,"sources":["VideoCard.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"vx-col w-full sm:w-1/2 md:w-1/3 lg:w-1/5 mb-base\">\n    <vx-card class=\"video-card-inner cursor-pointer\">\n      <div slot=\"no-body\" class=\"relative\">\n        <img\n          :src=\"baseUrl + prop.thumbnail\"\n          @error=\"$event.target.src = defaultImg\"\n          alt=\"Not Found\"\n          class=\"h-48\"\n          width=\"100%\"\n        />\n        <vs-chip class=\"video-length\">{{ prop.duration }}</vs-chip>\n      </div>\n      <div class=\"card-body\">\n        <!--div v-if=\"!user\" class=\"flex items-center justify-between\">\n          <vs-row vs-type=\"flex\" vs-align=\"center\">\n            <vx-tooltip text=\"Coming Soon!\">\n              <vs-button\n                class=\"pl-3 text-xs fork-btn\"\n                size=\"small\"\n                @click.stop=\"\"\n              >\n                <span class=\"text-custom-purple ml-3\">Fork it!</span>\n              </vs-button>\n            </vx-tooltip>\n            <img\n              src=\"@/assets/images/pages/git-branch.png\"\n              class=\"branch-icon\"\n            />\n          </vs-row>\n          <vs-icon\n            v-if=\"prop.paid\"\n            icon=\"lock\"\n            size=\"24px\"\n            color=\"primary\"\n            class=\"px-4\"\n          />\n        </div>\n        <div v-else>\n          <vs-button\n            type=\"filled\"\n            size=\"small\"\n            class=\"mb-1\"\n            @click.stop=\"editVideo\"\n            >Edit\n          </vs-button>\n        </div-->\n        <div\n          class=\"mb-2 text-sm font-semibold\"\n          :title=\"prop.title === '' ? 'Video has no title' : prop.title\"\n        >\n          <p class=\"line-clamp\">\n            {{ prop.title === '' ? 'Video has no title' : prop.title }}\n          </p>\n        </div>\n        <!--p class=\"text-grey\">Subtitle-1</p>\n    <p class=\"text-grey\">Subtitle-2</p-->\n        <div class=\"flex justify-start items-center\">\n          <vs-avatar size=\"medium\" class=\"mr-3\" />\n          <div>\n            <div class=\"text-dark text-sm\">{{ fullName }}</div>\n            <div class=\"text-xs text-gery flex items-center -mx-4\">\n              <div class=\"px-4\">4.5M views</div>\n              <div class=\"px-4\">\n                {{ prop.publish_time ? getUploadTime : 'unknown' }}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </vx-card>\n  </div>\n</template>\n\n<script>\nimport constants from '../../../../constant';\nimport img from '../../../assets/images/pages/VideoThumbnail.png';\nimport axios from '../../../axios';\nimport VxTooltip from '../../../layouts/components/vx-tooltip/VxTooltip.vue';\nimport { ajaxCallMixin } from '../../../http/HttpCommon';\nexport default {\n  components: { VxTooltip },\n  name: 'VideoCard',\n  props: ['prop', 'user'],\n  mixins: [ajaxCallMixin],\n  data() {\n    return {\n      months: [\n        'Jan',\n        'Feb',\n        'Mar',\n        'April',\n        'May',\n        'Jun',\n        'Jul',\n        'Aug',\n        'Sep',\n        'Oct',\n        'Nov',\n        'Dec'\n      ]\n    };\n  },\n  computed: {\n    fullName() {\n      return this.prop.user__first_name + ' ' + this.prop.user__last_name;\n    },\n    baseUrl() {\n      return constants.apiUrl;\n    },\n    defaultImg() {\n      return img;\n    },\n    getUploadTime() {\n      const date = Date.now();\n      const uploadDate = new Date(this.prop.publish_time);\n      const diff = Math.ceil(Math.abs(date - uploadDate) / 1000);\n      if (diff < 60) {\n        return diff < 30 ? `Just Now` : `${diff} secs ago`;\n      } else if (diff < 60 * 60) {\n        const mins = Math.round(diff / 60);\n        return mins === 1 ? `${mins} min ago` : `${mins} mins ago`;\n      } else if (diff < 60 * 60 * 24) {\n        const hours = Math.round(diff / (60 * 60));\n        return hours === 1 ? `${hours} hr ago` : `${hours} hrs ago`;\n      } else if (diff <= 60 * 60 * 24 * 6.5) {\n        const days = Math.round(diff / (60 * 60 * 24));\n        return days === 1 ? `${days} day ago` : `${days} days ago`;\n      } else if (diff < 60 * 60 * 24 * 7 * 4) {\n        const weeks = Math.round(diff / (60 * 60 * 24 * 7));\n        return weeks === 1 ? `${weeks} week ago` : `${weeks} weeks ago`;\n      } else if (diff < 60 * 60 * 24 * 7 * 4 * 12) {\n        const months = Math.round(diff / (60 * 60 * 24 * 7 * 4));\n        return months === 1 ? `${months} month ago` : `${months} months ago`;\n      } else {\n        const years = Math.round(diff / (60 * 60 * 24 * 7 * 4 * 12));\n        return years === 1 ? `${years} year ago` : `${years} years ago`;\n      }\n    }\n  },\n  methods: {\n    editVideo() {\n      this.$store.commit('studio/toggleText');\n      this.$router.replace(`/studio/${this.prop.id}`);\n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n.video-card-inner {\n  border-radius: 16px;\n  overflow: hidden;\n  -webkit-backface-visibility: hidden;\n  -webkit-transform: translateX(0);\n  &:hover {\n    transform: translateY(-5px);\n    box-shadow: 0px 4px 25px 0px rgba(0, 0, 0, 0.25);\n\n    /*:img {\n      opacity: 0.9;\n    }*/\n  }\n}\n.card-body {\n  margin: -0.5rem;\n}\n.video-length {\n  position: absolute;\n  z-index: 10;\n  bottom: 15px;\n  right: 20px;\n  background: rgba(0, 0, 0, 0.62);\n  min-height: 20px;\n  min-width: 44px;\n  font-size: 9px;\n}\n.video-length :first-child {\n  color: #fff;\n  font-weight: 600;\n}\n.branch-icon {\n  height: 12px;\n  /* width: 10px; */\n  position: absolute;\n  margin-top: -1px;\n  margin-left: 5px;\n}\n.fork-btn {\n  cursor: pointer;\n  background: rgba(114, 71, 196, 0.1) !important;\n  border-radius: 16px;\n  padding: 0.4rem 0.6rem !important;\n}\n.line-clamp {\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n  height: 36px;\n}\n.tooltip {\n  position: relative;\n  display: inline-block;\n  /*border-bottom: 1px dotted black;*/\n}\n.tooltip .tooltiptext {\n  visibility: hidden;\n  width: 100%;\n  background-color: #555;\n  color: #fff;\n  text-align: center;\n  border-radius: 6px;\n  padding: 5px 5px;\n  position: absolute;\n  z-index: 1000;\n  /* bottom: 125%;*/\n  left: 50%;\n  /*margin-left: -60px; */\n  opacity: 0;\n  transition: opacity 0.3s;\n}\n.tooltip:hover .tooltiptext {\n  visibility: visible;\n  opacity: 1;\n}\n</style>\n"],"sourceRoot":"src/views/dashboard/components"}]}