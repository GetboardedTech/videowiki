{"remainingRequest":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/babel-loader/lib/index.js!/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/src/layouts/main/Main.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/src/layouts/main/Main.vue","mtime":1617441641271},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport HNavMenu from '@/layouts/components/horizontal-nav-menu/HorizontalNavMenu.vue';\nimport navMenuItems from '@/layouts/components/vertical-nav-menu/navMenuItems.js';\nimport TheNavbarHorizontal from '@/layouts/components/navbar/TheNavbarHorizontal.vue';\nimport TheNavbarVertical from '@/layouts/components/navbar/TheNavbarVertical.vue';\nimport TheFooter from '@/layouts/components/TheFooter.vue';\nimport themeConfig from '@/../themeConfig.js';\nimport VNavMenu1 from '@/layouts/components/vertical-nav-menu/VerticalNavMenu1.vue';\nexport default {\n  components: {\n    HNavMenu: HNavMenu,\n    TheFooter: TheFooter,\n    TheNavbarHorizontal: TheNavbarHorizontal,\n    TheNavbarVertical: TheNavbarVertical,\n    VNavMenu1: VNavMenu1\n  },\n  data: function data() {\n    return {\n      footerType: themeConfig.footerType || 'static',\n      isNavbarDark: false,\n      navbarColor: themeConfig.navbarColor || '#fff',\n      navbarType: themeConfig.navbarType || 'floating',\n      navMenuItems: navMenuItems,\n      routerTransition: themeConfig.routerTransition || 'none',\n      routeTitle: this.$route.meta.pageTitle\n    };\n  },\n  watch: {\n    $route: function $route() {\n      this.routeTitle = this.$route.meta.pageTitle;\n    },\n    isThemeDark: function isThemeDark(val) {\n      var color = this.navbarColor == '#fff' && val ? '#10163a' : '#fff';\n      this.updateNavbarColor(color);\n    },\n    '$store.state.mainLayoutType': function $storeStateMainLayoutType(val) {\n      this.setNavMenuVisibility(val);\n    }\n  },\n  computed: {\n    insideIframe: function insideIframe() {\n      return this.$store.state.insideIframe;\n    },\n    bodyOverlay: function bodyOverlay() {\n      return this.$store.state.bodyOverlay;\n    },\n    globalProgressBar: function globalProgressBar() {\n      return this.$store.state.globalProgressBar;\n    },\n    contentAreaClass: function contentAreaClass() {\n      if (this.mainLayoutType === 'vertical') {\n        if (this.verticalNavMenuWidth == 'default') return 'content-area-reduced';else if (this.verticalNavMenuWidth == 'reduced') return 'content-area-lg';else return 'content-area-full';\n      } // else if(this.mainLayoutType === \"boxed\") return \"content-area-reduced\"\n      else return 'content-area-full';\n    },\n    footerClasses: function footerClasses() {\n      return {\n        'footer-hidden': this.footerType == 'hidden',\n        'footer-sticky': this.footerType == 'sticky',\n        'footer-static': this.footerType == 'static'\n      };\n    },\n    isAppPage: function isAppPage() {\n      return this.$route.meta.no_scroll;\n    },\n    isThemeDark: function isThemeDark() {\n      return this.$store.state.theme == 'dark';\n    },\n    layoutTypeClass: function layoutTypeClass() {\n      return \"main-\".concat(this.mainLayoutType);\n    },\n    mainLayoutType: function mainLayoutType() {\n      return this.$store.state.mainLayoutType;\n    },\n    navbarClasses: function navbarClasses() {\n      return {\n        'navbar-hidden': this.navbarType == 'hidden',\n        'navbar-sticky': this.navbarType == 'sticky',\n        'navbar-static': this.navbarType == 'static',\n        'navbar-floating': this.navbarType == 'floating'\n      };\n    },\n    verticalNavMenuWidth: function verticalNavMenuWidth() {\n      return this.$store.state.verticalNavMenuWidth;\n    },\n    windowWidth: function windowWidth() {\n      return this.$store.state.windowWidth;\n    }\n  },\n  methods: {\n    changeRouteTitle: function changeRouteTitle(title) {\n      this.routeTitle = title;\n    },\n    updateNavbarColor: function updateNavbarColor(val) {\n      this.navbarColor = val;\n      if (val == '#fff') this.isNavbarDark = false;else this.isNavbarDark = true;\n    },\n    setNavMenuVisibility: function setNavMenuVisibility(layoutType) {\n      if (layoutType === 'horizontal' && this.windowWidth >= 1200 || layoutType === 'vertical' && this.windowWidth < 1200) {\n        this.$store.commit('TOGGLE_IS_VERTICAL_NAV_MENU_ACTIVE_STUDIO', false);\n        this.$store.dispatch('updateVerticalNavMenuWidth', 'no-nav-menu');\n      } else {\n        this.$store.commit('TOGGLE_IS_VERTICAL_NAV_MENU_ACTIVE_STUDIO', true);\n      }\n    }\n  },\n  created: function created() {\n    var color = this.navbarColor == '#fff' && this.isThemeDark ? '#10163a' : this.navbarColor;\n    this.updateNavbarColor(color);\n    this.setNavMenuVisibility(this.$store.state.mainLayoutType);\n  }\n};",{"version":3,"sources":["Main.vue"],"names":[],"mappings":"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","sourcesContent":["<!-- =========================================================================================\n    File Name: Main.vue\n    Description: Main layout\n    ----------------------------------------------------------------------------------------\n    Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\n    Author: Pixinvent\n    Author URL: http://www.themeforest.net/user/pixinvent\n========================================================================================== -->\n\n<template>\n  <div\n    class=\"layout--main\"\n    :class=\"[\n      layoutTypeClass,\n      navbarClasses,\n      footerClasses,\n      { 'no-scroll': isAppPage }\n    ]\"\n  >\n    <v-nav-menu-1\n      :navMenuItems=\"navMenuItems\"\n      title=\"VideoWiki\"\n      parent=\".layout--main\"\n    />\n\n    <div\n      id=\"content-area\"\n      :class=\"[contentAreaClass, { 'show-overlay': bodyOverlay }]\"\n    >\n      <div id=\"content-overlay\" />\n\n      <!-- Navbar -->\n      <template v-if=\"mainLayoutType === 'horizontal' && windowWidth >= 1200\">\n        <the-navbar-horizontal\n          :navbarType=\"navbarType\"\n          :class=\"[\n            { 'text-white': isNavbarDark && !isThemeDark },\n            { 'text-base': !isNavbarDark && isThemeDark }\n          ]\"\n        />\n\n        <div style=\"height: 62px\" v-if=\"navbarType === 'static'\"></div>\n\n        <h-nav-menu\n          :class=\"[\n            { 'text-white': isNavbarDark && !isThemeDark },\n            { 'text-base': !isNavbarDark && isThemeDark }\n          ]\"\n          :navMenuItems=\"navMenuItems\"\n        />\n      </template>\n\n      <template v-else>\n        <the-navbar-vertical\n          :navbarColor=\"navbarColor\"\n          :class=\"[\n            { 'text-white': isNavbarDark && !isThemeDark },\n            { 'text-base': !isNavbarDark && isThemeDark }\n          ]\"\n        />\n      </template>\n      <!-- /Navbar -->\n\n      <div class=\"content-wrapper\">\n        <div class=\"router-view\">\n          <div :class=\"{ 'router-content': !insideIframe }\">\n            <transition :name=\"routerTransition\">\n              <div\n                v-if=\"$route.meta.breadcrumb || $route.meta.pageTitle\"\n                class=\"router-header flex flex-wrap items-center mb-6\"\n              >\n                <div\n                  class=\"content-area__heading\"\n                  :class=\"{\n                    'pr-4 border-0 md:border-r border-solid border-grey-light':\n                      $route.meta.breadcrumb\n                  }\"\n                >\n                  <h2 class=\"mb-1\">{{ routeTitle }}</h2>\n                </div>\n\n                <!-- BREADCRUMB -->\n                <vx-breadcrumb\n                  class=\"ml-4 md:block hidden\"\n                  v-if=\"$route.meta.breadcrumb\"\n                  :route=\"$route\"\n                  :isRTL=\"$vs.rtl\"\n                />\n\n                <!-- DROPDOWN -->\n                <vs-dropdown\n                  vs-trigger-click\n                  class=\"ml-auto md:block hidden cursor-pointer\"\n                >\n                  <vs-button radius icon=\"icon-settings\" icon-pack=\"feather\" />\n\n                  <vs-dropdown-menu class=\"w-32\">\n                    <vs-dropdown-item>\n                      <div\n                        @click=\"$router.push('/pages/profile').catch(() => {})\"\n                        class=\"flex items-center\"\n                      >\n                        <feather-icon\n                          icon=\"UserIcon\"\n                          class=\"inline-block mr-2\"\n                          svgClasses=\"w-4 h-4\"\n                        />\n                        <span>Profile</span>\n                      </div>\n                    </vs-dropdown-item>\n                    <vs-dropdown-item>\n                      <div\n                        @click=\"$router.push('/apps/todo').catch(() => {})\"\n                        class=\"flex items-center\"\n                      >\n                        <feather-icon\n                          icon=\"CheckSquareIcon\"\n                          class=\"inline-block mr-2\"\n                          svgClasses=\"w-4 h-4\"\n                        />\n                        <span>Tasks</span>\n                      </div>\n                    </vs-dropdown-item>\n                    <vs-dropdown-item>\n                      <div\n                        @click=\"$router.push('/apps/email').catch(() => {})\"\n                        class=\"flex items-center\"\n                      >\n                        <feather-icon\n                          icon=\"MailIcon\"\n                          class=\"inline-block mr-2\"\n                          svgClasses=\"w-4 h-4\"\n                        />\n                        <span>Inbox</span>\n                      </div>\n                    </vs-dropdown-item>\n                  </vs-dropdown-menu>\n                </vs-dropdown>\n              </div>\n            </transition>\n\n            <div class=\"content-area__content\">\n              <transition :name=\"routerTransition\" mode=\"out-in\">\n                <router-view\n                  @changeRouteTitle=\"changeRouteTitle\"\n                  @setAppClasses=\"\n                    classesStr => $emit('setAppClasses', classesStr)\n                  \"\n                />\n              </transition>\n            </div>\n          </div>\n        </div>\n        <vue-progress-bar v-show=\"globalProgressBar\"></vue-progress-bar>\n      </div>\n      <the-footer />\n    </div>\n  </div>\n</template>\n\n<script>\nimport HNavMenu from '@/layouts/components/horizontal-nav-menu/HorizontalNavMenu.vue';\nimport navMenuItems from '@/layouts/components/vertical-nav-menu/navMenuItems.js';\nimport TheNavbarHorizontal from '@/layouts/components/navbar/TheNavbarHorizontal.vue';\nimport TheNavbarVertical from '@/layouts/components/navbar/TheNavbarVertical.vue';\nimport TheFooter from '@/layouts/components/TheFooter.vue';\nimport themeConfig from '@/../themeConfig.js';\nimport VNavMenu1 from '@/layouts/components/vertical-nav-menu/VerticalNavMenu1.vue';\n\nexport default {\n  components: {\n    HNavMenu,\n    TheFooter,\n    TheNavbarHorizontal,\n    TheNavbarVertical,\n    VNavMenu1\n  },\n  data() {\n    return {\n      footerType: themeConfig.footerType || 'static',\n      isNavbarDark: false,\n      navbarColor: themeConfig.navbarColor || '#fff',\n      navbarType: themeConfig.navbarType || 'floating',\n      navMenuItems: navMenuItems,\n      routerTransition: themeConfig.routerTransition || 'none',\n      routeTitle: this.$route.meta.pageTitle\n    };\n  },\n  watch: {\n    $route() {\n      this.routeTitle = this.$route.meta.pageTitle;\n    },\n    isThemeDark(val) {\n      const color = this.navbarColor == '#fff' && val ? '#10163a' : '#fff';\n      this.updateNavbarColor(color);\n    },\n    '$store.state.mainLayoutType'(val) {\n      this.setNavMenuVisibility(val);\n    }\n  },\n  computed: {\n    insideIframe() {\n      return this.$store.state.insideIframe;\n    },\n    bodyOverlay() {\n      return this.$store.state.bodyOverlay;\n    },\n    globalProgressBar() {\n      return this.$store.state.globalProgressBar;\n    },\n    contentAreaClass() {\n      if (this.mainLayoutType === 'vertical') {\n        if (this.verticalNavMenuWidth == 'default')\n          return 'content-area-reduced';\n        else if (this.verticalNavMenuWidth == 'reduced')\n          return 'content-area-lg';\n        else return 'content-area-full';\n      }\n      // else if(this.mainLayoutType === \"boxed\") return \"content-area-reduced\"\n      else return 'content-area-full';\n    },\n    footerClasses() {\n      return {\n        'footer-hidden': this.footerType == 'hidden',\n        'footer-sticky': this.footerType == 'sticky',\n        'footer-static': this.footerType == 'static'\n      };\n    },\n    isAppPage() {\n      return this.$route.meta.no_scroll;\n    },\n    isThemeDark() {\n      return this.$store.state.theme == 'dark';\n    },\n    layoutTypeClass() {\n      return `main-${this.mainLayoutType}`;\n    },\n    mainLayoutType() {\n      return this.$store.state.mainLayoutType;\n    },\n    navbarClasses() {\n      return {\n        'navbar-hidden': this.navbarType == 'hidden',\n        'navbar-sticky': this.navbarType == 'sticky',\n        'navbar-static': this.navbarType == 'static',\n        'navbar-floating': this.navbarType == 'floating'\n      };\n    },\n    verticalNavMenuWidth() {\n      return this.$store.state.verticalNavMenuWidth;\n    },\n    windowWidth() {\n      return this.$store.state.windowWidth;\n    }\n  },\n  methods: {\n    changeRouteTitle(title) {\n      this.routeTitle = title;\n    },\n    updateNavbarColor(val) {\n      this.navbarColor = val;\n      if (val == '#fff') this.isNavbarDark = false;\n      else this.isNavbarDark = true;\n    },\n    setNavMenuVisibility(layoutType) {\n      if (\n        (layoutType === 'horizontal' && this.windowWidth >= 1200) ||\n        (layoutType === 'vertical' && this.windowWidth < 1200)\n      ) {\n        this.$store.commit('TOGGLE_IS_VERTICAL_NAV_MENU_ACTIVE_STUDIO', false);\n        this.$store.dispatch('updateVerticalNavMenuWidth', 'no-nav-menu');\n      } else {\n        this.$store.commit('TOGGLE_IS_VERTICAL_NAV_MENU_ACTIVE_STUDIO', true);\n      }\n    }\n  },\n  created() {\n    const color =\n      this.navbarColor == '#fff' && this.isThemeDark\n        ? '#10163a'\n        : this.navbarColor;\n    this.updateNavbarColor(color);\n    this.setNavMenuVisibility(this.$store.state.mainLayoutType);\n  }\n};\n</script>\n"],"sourceRoot":"src/layouts/main"}]}