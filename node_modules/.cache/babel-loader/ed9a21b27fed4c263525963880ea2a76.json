{"remainingRequest":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/babel-loader/lib/index.js!/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/eslint-loader/index.js??ref--13-0!/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/src/http/HttpCommon.js","dependencies":[{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/src/http/HttpCommon.js","mtime":1617441641267},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _slicedToArray from \"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es7.object.entries\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nimport constants from \"../../constant\";\nvar HTTP = axios.create({\n  baseURL: constants.apiUrl,\n  crossDomain: true,\n  headers: {}\n});\nexport var ajaxCallMixin = {\n  response: {},\n  methods: {\n    ajaxCall: function () {\n      var _ajaxCall = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(url, data) {\n        var callBack,\n            extraFields,\n            form,\n            _i,\n            _Object$entries,\n            _Object$entries$_i,\n            key,\n            value,\n            _args = arguments;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                callBack = _args.length > 2 && _args[2] !== undefined ? _args[2] : null;\n                extraFields = _args.length > 3 && _args[3] !== undefined ? _args[3] : [];\n                form = new FormData(); // var params = JSON.stringify(data);\n                // form.append('body', params);\n\n                for (_i = 0, _Object$entries = Object.entries(data); _i < _Object$entries.length; _i++) {\n                  _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2), key = _Object$entries$_i[0], value = _Object$entries$_i[1];\n                  form.append(key, value);\n                }\n\n                _context.next = 6;\n                return HTTP.post(url, form);\n\n              case 6:\n                this.response = _context.sent;\n\n                if (!(callBack != null)) {\n                  _context.next = 9;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", callBack(this.response.data));\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function ajaxCall(_x, _x2) {\n        return _ajaxCall.apply(this, arguments);\n      }\n\n      return ajaxCall;\n    }(),\n    getRequest: function () {\n      var _getRequest = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(url) {\n        var callBack,\n            _args2 = arguments;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                callBack = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : null;\n                _context2.next = 3;\n                return HTTP.get(url);\n\n              case 3:\n                this.response = _context2.sent;\n\n                if (!(callBack != null)) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", callBack(this.response.data));\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getRequest(_x3) {\n        return _getRequest.apply(this, arguments);\n      }\n\n      return getRequest;\n    }()\n    /* downloadMedia: async function (url, callback = null) {\n      try {\n        this.response.data = await HTTP.get(url, { responseType: 'blob' });\n      } catch (err) {\n        this.response.error = true;\n      }\n      if (callback !== null) {\n        return callback(this.response);\n      }\n    } */\n\n  }\n};",{"version":3,"sources":["/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/src/http/HttpCommon.js"],"names":["axios","constants","HTTP","create","baseURL","apiUrl","crossDomain","headers","ajaxCallMixin","response","methods","ajaxCall","url","data","callBack","extraFields","form","FormData","Object","entries","key","value","append","post","getRequest","get"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP;AAEA,IAAMC,IAAI,GAAGF,KAAK,CAACG,MAAN,CAAa;AACxBC,EAAAA,OAAO,EAAEH,SAAS,CAACI,MADK;AAExBC,EAAAA,WAAW,EAAE,IAFW;AAGxBC,EAAAA,OAAO,EAAE;AAHe,CAAb,CAAb;AAMA,OAAO,IAAMC,aAAa,GAAG;AAC3BC,EAAAA,QAAQ,EAAE,EADiB;AAE3BC,EAAAA,OAAO,EAAE;AACPC,IAAAA,QAAQ;AAAA,8EAAE,iBAAeC,GAAf,EAAoBC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAA0BC,gBAAAA,QAA1B,2DAAqC,IAArC;AAA2CC,gBAAAA,WAA3C,2DAAyD,EAAzD;AACJC,gBAAAA,IADI,GACG,IAAIC,QAAJ,EADH,EAER;AACA;;AACA,+CAA2BC,MAAM,CAACC,OAAP,CAAeN,IAAf,CAA3B,qCAAiD;AAAA,+EAArCO,GAAqC,0BAAhCC,KAAgC;AAC/CL,kBAAAA,IAAI,CAACM,MAAL,CAAYF,GAAZ,EAAiBC,KAAjB;AACD;;AANO;AAAA,uBAQcnB,IAAI,CAACqB,IAAL,CAAUX,GAAV,EAAeI,IAAf,CARd;;AAAA;AAQR,qBAAKP,QARG;;AAAA,sBAUJK,QAAQ,IAAI,IAVR;AAAA;AAAA;AAAA;;AAAA,iDAWCA,QAAQ,CAAC,KAAKL,QAAL,CAAcI,IAAf,CAXT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,OADD;AAePW,IAAAA,UAAU;AAAA,gFAAE,kBAAeZ,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoBE,gBAAAA,QAApB,8DAA+B,IAA/B;AAAA;AAAA,uBACYZ,IAAI,CAACuB,GAAL,CAASb,GAAT,CADZ;;AAAA;AACV,qBAAKH,QADK;;AAAA,sBAENK,QAAQ,IAAI,IAFN;AAAA;AAAA;AAAA;;AAAA,kDAGDA,QAAQ,CAAC,KAAKL,QAAL,CAAcI,IAAf,CAHP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAMV;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA9BW;AAFkB,CAAtB","sourcesContent":["import axios from 'axios';\nimport constants from '../../constant';\n\nconst HTTP = axios.create({\n  baseURL: constants.apiUrl,\n  crossDomain: true,\n  headers: {}\n});\n\nexport const ajaxCallMixin = {\n  response: {},\n  methods: {\n    ajaxCall: async function(url, data, callBack = null, extraFields = []) {\n      var form = new FormData();\n      // var params = JSON.stringify(data);\n      // form.append('body', params);\n      for (const [key, value] of Object.entries(data)) {\n        form.append(key, value);\n      }\n\n      this.response = await HTTP.post(url, form);\n\n      if (callBack != null) {\n        return callBack(this.response.data);\n      }\n    },\n    getRequest: async function(url, callBack = null) {\n      this.response = await HTTP.get(url);\n      if (callBack != null) {\n        return callBack(this.response.data);\n      }\n    }\n    /* downloadMedia: async function (url, callback = null) {\n      try {\n        this.response.data = await HTTP.get(url, { responseType: 'blob' });\n      } catch (err) {\n        this.response.error = true;\n      }\n      if (callback !== null) {\n        return callback(this.response);\n      }\n    } */\n  }\n};\n"]}]}