{"remainingRequest":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/babel-loader/lib/index.js!/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/src/views/pages/components/DocumentUpload.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/src/views/pages/components/DocumentUpload.vue","mtime":1617441641275},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.values\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'DocumentUpload',\n  data: function data() {\n    return {\n      selectedFile: ''\n    };\n  },\n  computed: {\n    uploadedDocumentIsPPT: function uploadedDocumentIsPPT() {\n      return this.$store.state.studio.video.fromPPT;\n    }\n  },\n  methods: {\n    chooseFile: function chooseFile() {\n      document.getElementById('upload-doc').click();\n    },\n    uploadDocument: function uploadDocument(event) {\n      var _this = this;\n\n      var Files = event.target.files || event.dataTransfer.files;\n      var selectedFile = Files[0];\n      this.$Progress.start();\n      this.$vs.loading({\n        color: 'transparent'\n      });\n      this.$store.dispatch('studio/uploadDoc', selectedFile).then(function (data) {\n        _this.handleApiResponse(data);\n\n        _this.$Progress.finish();\n\n        _this.$vs.loading.close();\n      }).catch(function (err) {\n        console.log(err);\n\n        _this.$Progress.fail();\n\n        _this.$vs.loading.close();\n\n        _this.$vs.notify({\n          title: 'Error Occured',\n          text: 'Fail to parse document',\n          color: 'danger'\n        });\n      });\n    },\n    handleApiResponse: function handleApiResponse(data) {\n      var _this2 = this;\n\n      this.$store.commit('studio/setInitialState');\n\n      if (data.slides) {\n        var scenes = {};\n        var videos = {};\n        var images = {};\n        var keywords = {};\n        this.$store.commit('studio/SET_VIDEO_ATTR', {\n          key: 'fromPPT',\n          value: true\n        });\n        var script = '';\n        Object.values(data.slides).forEach(function (_ref, index) {\n          var img_path = _ref.img_path,\n              text = _ref.text;\n          scenes[index] = '*No notes found in this slide*';\n          videos[index] = '';\n          images[index] = {\n            0: [img_path, 'slide', 'slide']\n          };\n          keywords[index] = [];\n          script += text;\n\n          _this2.$store.commit('studio/setInitialVideo', {\n            indexs: index,\n            value: img_path\n          });\n        });\n        this.$store.commit('studio/setSentences', scenes);\n        this.$store.commit('studio/setVideos', videos);\n        this.$store.commit('studio/setKeywords', keywords);\n        this.$store.commit('studio/setImages', images);\n        this.$store.commit('studio/setScript', script);\n      }\n\n      if (data.title) {\n        this.$store.commit('studio/SET_VIDEO_ATTR', {\n          key: 'title',\n          value: data.title\n        });\n      }\n\n      if (data.text) {\n        this.$store.commit('studio/setScript', data.text);\n      }\n\n      if (!this.uploadedDocumentIsPPT) {\n        this.$store.commit('studio/SET_TAB_INDEX', 0);\n      } else setTimeout(function () {\n        return _this2.$store.commit('studio/toggleLibrary');\n      }, 1000);\n    }\n  }\n};",{"version":3,"sources":["DocumentUpload.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <vx-card title=\"Upload a PPT or PDF File\">\n    <div class=\"upload-box-wrapper\">\n      <div\n        class=\"upload-box\"\n        @click=\"chooseFile\"\n        @dragover.prevent\n        @drop.prevent=\"uploadDocument\"\n      >\n        <input\n          type=\"file\"\n          id=\"upload-doc\"\n          @change=\"uploadDocument\"\n          class=\"hidden\"\n          accept=\".docx,.pdf,.ppt,.pptx,.doc\"\n        />\n        <div class=\"upload-box-inner\">\n          <vs-icon\n            color=\"primary\"\n            rounded\n            icon=\"add_circle\"\n            :size=\"$store.state.windowWidth < 500 ? '52px' : '72px'\"\n            class=\"mb-4\"\n          ></vs-icon>\n          <p\n            class=\"font-semibold text-primary text-sm sm:text-xl\"\n            style=\"white-space: normal\"\n          >\n            Choose a file or drag it here\n          </p>\n          <!--p class=\"text-primary text-sm\" style=\"white-space: normal\">\n            Maximum file upload file size 500 MB\n          </p-->\n        </div>\n      </div>\n    </div>\n  </vx-card>\n</template>\n<script>\nexport default {\n  name: 'DocumentUpload',\n  data() {\n    return {\n      selectedFile: ''\n    };\n  },\n  computed: {\n    uploadedDocumentIsPPT() {\n      return this.$store.state.studio.video.fromPPT;\n    }\n  },\n  methods: {\n    chooseFile() {\n      document.getElementById('upload-doc').click();\n    },\n    uploadDocument(event) {\n      const Files = event.target.files || event.dataTransfer.files;\n      const selectedFile = Files[0];\n      this.$Progress.start();\n      this.$vs.loading({ color: 'transparent' });\n      this.$store\n        .dispatch('studio/uploadDoc', selectedFile)\n        .then(data => {\n          this.handleApiResponse(data);\n          this.$Progress.finish();\n          this.$vs.loading.close();\n        })\n        .catch(err => {\n          console.log(err);\n          this.$Progress.fail();\n          this.$vs.loading.close();\n          this.$vs.notify({\n            title: 'Error Occured',\n            text: 'Fail to parse document',\n            color: 'danger'\n          });\n        });\n    },\n    handleApiResponse(data) {\n      this.$store.commit('studio/setInitialState');\n      if (data.slides) {\n        const scenes = {};\n        const videos = {};\n        const images = {};\n        const keywords = {};\n        this.$store.commit('studio/SET_VIDEO_ATTR', {\n          key: 'fromPPT',\n          value: true\n        });\n        let script = '';\n        Object.values(data.slides).forEach(({ img_path, text }, index) => {\n          scenes[index] = '*No notes found in this slide*';\n          videos[index] = '';\n          images[index] = { 0: [img_path, 'slide', 'slide'] };\n          keywords[index] = [];\n          script += text;\n          this.$store.commit('studio/setInitialVideo', {\n            indexs: index,\n            value: img_path\n          });\n        });\n        this.$store.commit('studio/setSentences', scenes);\n        this.$store.commit('studio/setVideos', videos);\n        this.$store.commit('studio/setKeywords', keywords);\n        this.$store.commit('studio/setImages', images);\n        this.$store.commit('studio/setScript', script);\n      }\n      if (data.title) {\n        this.$store.commit('studio/SET_VIDEO_ATTR', {\n          key: 'title',\n          value: data.title\n        });\n      }\n      if (data.text) {\n        this.$store.commit('studio/setScript', data.text);\n      }\n      if (!this.uploadedDocumentIsPPT) {\n        this.$store.commit('studio/SET_TAB_INDEX', 0);\n      } else setTimeout(() => this.$store.commit('studio/toggleLibrary'), 1000);\n    }\n  }\n};\n</script>\n<style scoped>\n.upload-box-wrapper {\n  border: 1.4px dashed #7247c4;\n  border-radius: 6px;\n  padding: 10px;\n}\n.upload-box {\n  background: rgba(114, 71, 196, 0.06);\n  border-radius: 6px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 380px;\n  cursor: pointer;\n}\n</style>\n"],"sourceRoot":"src/views/pages/components"}]}