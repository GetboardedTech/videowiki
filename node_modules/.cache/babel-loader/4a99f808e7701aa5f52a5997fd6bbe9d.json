{"remainingRequest":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/babel-loader/lib/index.js!/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/src/views/pages/EditScript.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/src/views/pages/EditScript.vue","mtime":1617441641275},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.values\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport _toConsumableArray from \"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport LanguageSelect from \"./components/LanguageSelect.vue\";\nimport DocumentUpload from \"./components/DocumentUpload\";\nimport ExternalUrl from \"./components/ExternalUrl\";\nexport default {\n  components: {\n    LanguageSelect: LanguageSelect,\n    DocumentUpload: DocumentUpload,\n    ExternalUrl: ExternalUrl\n  },\n  data: function data() {\n    return {\n      form: {\n        title: '',\n        description: '',\n        videoScript: ''\n      },\n      options: [{\n        value: 'en',\n        label: 'English'\n      }, {\n        value: 'ru',\n        label: 'Russian'\n      }, {\n        value: 'pt',\n        label: 'Portugese'\n      }],\n      breakType: 'short',\n      breakTypeOptions: {\n        long: 'Long Scenes',\n        short: 'Short Scenes'\n      },\n      queryContent: {\n        links: []\n      },\n      contentUrl: '',\n      choiceModal: false,\n      task_id: null,\n      requestInterval: Function\n    };\n  },\n  computed: {\n    videoScript: {\n      get: function get() {\n        return this.$store.state.studio.videoScript;\n      },\n      set: function set(value) {\n        this.$store.commit('studio/setScript', value);\n      }\n    },\n    srcLang: {\n      get: function get() {\n        return this.$store.state.studio.video.srcLang;\n      },\n      set: function set(value) {\n        this.$store.commit('studio/SET_VIDEO_ATTR', {\n          key: 'srcLang',\n          value: value\n        });\n      }\n    },\n    title: {\n      get: function get() {\n        return this.$store.state.studio.video.title;\n      },\n      set: function set(value) {\n        this.$store.commit('studio/SET_VIDEO_ATTR', {\n          key: 'title',\n          value: value\n        });\n      }\n    },\n    description: {\n      get: function get() {\n        return this.$store.state.studio.video.description;\n      },\n      set: function set(value) {\n        this.$store.commit('studio/SET_VIDEO_ATTR', {\n          key: 'description',\n          value: value\n        });\n      }\n    },\n    uploadedDocumentIsPPT: function uploadedDocumentIsPPT() {\n      return this.$store.state.studio.video.fromPPT;\n    },\n    currentTabIndex: function currentTabIndex() {\n      return this.$store.state.studio.tabIndex;\n    }\n  },\n  created: function created() {\n    if (!this.$route.params.videoId && Object.keys(this.$route.query).length === 0 && this.title === '' && this.videoScript === '') {\n      var storedForm = JSON.parse(localStorage.getItem('form'));\n\n      if (storedForm) {\n        this.title = storedForm.title;\n        this.videoScript = storedForm.videoScript;\n      }\n    }\n\n    window.addEventListener('beforeunload', this.saveForm);\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.$refs.custom_teams_modal.$el.childNodes[1].childNodes[0].style.display = 'none';\n\n    if (this.$route.query.contentUrl) {\n      var _this$$route$query = this.$route.query,\n          contentUrl = _this$$route$query.contentUrl,\n          tempauth = _this$$route$query.tempauth,\n          Translate = _this$$route$query.Translate,\n          ApiVersion = _this$$route$query.ApiVersion;\n      var downloadUrl = tempauth ? \"\".concat(contentUrl, \"&Translate=\").concat(Translate, \"&tempauth=\").concat(tempauth, \"&ApiVersion=\").concat(ApiVersion) : contentUrl;\n      this.handleUrlSubmit(downloadUrl, this.$route.query.ext);\n    }\n\n    if (this.$route.query.attachments) {\n      var _this$queryContent$li;\n\n      var attachmentList = this.$route.query.attachments.split(',');\n\n      (_this$queryContent$li = this.queryContent.links).splice.apply(_this$queryContent$li, [0, 0].concat(_toConsumableArray(attachmentList)));\n    }\n\n    if (this.$route.query.html) {\n      // console.log(this.$route.query.html);\n      var parser = new DOMParser();\n      var parsedHtml = parser.parseFromString(this.$route.query.html, 'text/html'); // console.log(parsedHtml);\n\n      var anchorTagArray = parsedHtml.querySelectorAll('a');\n\n      if (anchorTagArray) {\n        anchorTagArray.forEach(function (a) {\n          _this.queryContent.links.push(a.href);\n        });\n\n        if (this.queryContent.links.length > 1) {\n          this.choiceModal = true;\n        } else if (this.queryContent.links.length === 1) {\n          this.onSelectLink(0);\n        } else {\n          this.$vs.dialog({\n            type: 'alert',\n            color: 'primary',\n            title: \"Text too Long!\",\n            acceptText: 'Okay',\n            text: 'The length of text in the message was too long. Kindly copy the text and paste it in the video script box.'\n          });\n        }\n      }\n    } else if (this.$route.query.text) {\n      this.videoScript = this.$route.query.text;\n    }\n\n    if (Object.keys(this.$route.query).length !== 0) {\n      this.$router.replace({\n        query: null\n      });\n    }\n  },\n  methods: {\n    saveForm: function saveForm() {\n      var form = {\n        title: this.title,\n        videoScript: this.videoScript\n      };\n      localStorage.setItem('form', JSON.stringify(form));\n    },\n    summarizeScript: function summarizeScript() {\n      var _this2 = this;\n\n      this.$Progress.start();\n      this.$store.dispatch('studio/summarizeScript').then(function (res) {\n        console.log('summarized script', res);\n        document.getElementById('video-script').innerText = res;\n\n        _this2.$forceUpdate();\n\n        _this2.$Progress.finish();\n      }).catch(function (err) {\n        console.log('error in summarization', err);\n\n        _this2.$Progress.fail();\n      });\n    },\n    scriptInput: function scriptInput(e) {\n      this.$store.commit('studio/setScript', e.target.innerText);\n    },\n    handleSubmit: function handleSubmit() {\n      var _this3 = this;\n\n      this.$validator.validateAll().then(function (result) {\n        if (result) {\n          _this3.createScenes();\n        } else {\n          _this3.$vs.notify({\n            title: 'Invalid Input',\n            text: _this3.errors.has('title') ? 'Enter Video title' : 'Enter Video script',\n            color: 'danger'\n          });\n        }\n      });\n    },\n    createScenes: function createScenes() {\n      var _this4 = this;\n\n      this.$Progress.start();\n      this.$vs.loading({\n        color: 'transparent'\n      });\n      this.$store.commit('studio/SET_VIDEO_ATTR', {\n        key: 'scrLang',\n        value: this.srcLang\n      });\n      this.$store.dispatch('studio/sentenceDetection', this.breakType).then(function (res) {\n        console.log('sentences', res.data.sentences);\n        console.log('keywords', res.data.keywords);\n        /* this.$store\n          .dispatch('studio/keywordExtraction')\n          .then(resKeywords => {\n            console.log('keywords', resKeywords); */\n\n        _this4.$store.dispatch('studio/videoSuggestions').then(function (resVideos) {\n          console.log('videos', resVideos);\n\n          _this4.$Progress.finish();\n\n          _this4.$vs.loading.close();\n\n          _this4.$store.commit('studio/resetState');\n          /* this.$store\n                .dispatch('studio/audioSuggestions')\n                .then(res => {\n                  this.$Progress.finish();\n                  this.$vs.loading.close();\n                  this.$store.commit('studio/resetState');\n                })\n                .catch(err => {\n                  this.$Progress.fail();\n                  this.$vs.loading.close();\n                  console.log(err);\n                  this.$vs.notify({\n                    title: 'Error Occured',\n                    text: 'Audio Suggestions',\n                    color: 'danger'\n                  });\n                }); */\n\n        }).catch(function (err) {\n          console.log(err);\n\n          _this4.$Progress.fail();\n\n          _this4.$vs.loading.close();\n\n          _this4.$vs.notify({\n            title: 'Error Occured',\n            text: 'Video Suggestions',\n            color: 'danger'\n          });\n        });\n      })\n      /* .catch(err => {\n            console.log(err);\n            this.$Progress.fail();\n            this.$vs.loading.close();\n            this.$vs.notify({\n              title: 'Error Occured',\n              text: 'keyword Extraction',\n              color: 'danger'\n            });\n          });\n      }) */\n      .catch(function (err) {\n        console.log(err);\n\n        _this4.$Progress.fail();\n\n        _this4.$vs.loading.close();\n\n        _this4.$vs.notify({\n          title: 'Error Occured',\n          text: 'Sentence Detection',\n          color: 'danger'\n        });\n      });\n    },\n    handleUrlSubmit: function handleUrlSubmit(contentUrl, ext) {\n      if (ext === 'mp4') {\n        this.contentUrl = contentUrl;\n        this.$validator.reset();\n        this.$Progress.start();\n        this.$vs.loading({\n          color: 'transparent'\n        });\n        this.splitIntoChunks();\n      } else {\n        this.fetchContent(contentUrl, ext);\n      }\n    },\n    splitIntoChunks: function () {\n      var _splitIntoChunks = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _this5 = this;\n\n        var requestBody, apiResponse, scenes, videos, images, keywords;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                requestBody = {\n                  video_url: this.contentUrl,\n                  option: 'small',\n                  task_id: this.task_id\n                }; // console.log({ requestBody });\n\n                _context.prev = 1;\n                _context.next = 4;\n                return this.$store.dispatch('studio/breakVideoIntoScenes', requestBody);\n\n              case 4:\n                apiResponse = _context.sent;\n                // console.log({ chunksAPIResponse: apiResponse });\n                if (!this.task_id) this.task_id = apiResponse.task_id;\n\n                if (apiResponse.status) {\n                  scenes = {};\n                  videos = {};\n                  images = {};\n                  keywords = {};\n                  apiResponse.data.forEach(function (chunkUrl, index) {\n                    scenes[index] = '';\n                    videos[index] = '';\n                    images[index] = '';\n                    keywords[index] = [];\n\n                    _this5.$store.commit('studio/setInitialVideo', {\n                      indexs: index,\n                      value: chunkUrl\n                    });\n\n                    _this5.$store.commit('studio/setSentences', scenes);\n\n                    _this5.$store.commit('studio/setVideos', videos);\n\n                    _this5.$store.commit('studio/setKeywords', keywords);\n\n                    _this5.$store.commit('studio/setImages', images);\n\n                    _this5.$Progress.finish();\n\n                    _this5.$vs.loading.close();\n\n                    setTimeout(function () {\n                      return _this5.$store.commit('studio/toggleLibrary');\n                    }, 1000);\n                  });\n                } else {\n                  this.requestInterval = setTimeout(function () {\n                    return _this5.splitIntoChunks();\n                  }, 10000);\n                }\n\n                _context.next = 15;\n                break;\n\n              case 9:\n                _context.prev = 9;\n                _context.t0 = _context[\"catch\"](1);\n                console.log({\n                  chunksAPIError: _context.t0\n                });\n                this.$vs.notify({\n                  title: 'Error',\n                  text: 'Fail to split video',\n                  color: 'danger'\n                });\n                this.$Progress.fail();\n                this.$vs.loading.close();\n\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[1, 9]]);\n      }));\n\n      function splitIntoChunks() {\n        return _splitIntoChunks.apply(this, arguments);\n      }\n\n      return splitIntoChunks;\n    }(),\n    fetchContent: function fetchContent(url, ext) {\n      var _this6 = this;\n\n      this.$Progress.start();\n      this.$vs.loading({\n        color: 'transparent'\n      });\n      this.$store.dispatch('studio/extractInfoFromUrl', {\n        url: url,\n        ext: ext\n      }).then(function (data) {\n        if (data.slides) {\n          var scenes = {};\n          var videos = {};\n          var images = {};\n          var keywords = {};\n\n          _this6.$store.commit('studio/SET_VIDEO_ATTR', {\n            key: 'fromPPT',\n            value: true\n          });\n\n          var script = '';\n          Object.values(data.slides).forEach(function (_ref, index) {\n            var img_path = _ref.img_path,\n                text = _ref.text;\n            scenes[index] = '*No notes found in this slide*';\n            videos[index] = '';\n            images[index] = {\n              0: [img_path, 'slide', 'slide']\n            };\n            keywords[index] = [];\n            script += text;\n\n            _this6.$store.commit('studio/setInitialVideo', {\n              indexs: index,\n              value: img_path\n            });\n          });\n\n          _this6.$store.commit('studio/setSentences', scenes);\n\n          _this6.$store.commit('studio/setVideos', videos);\n\n          _this6.$store.commit('studio/setKeywords', keywords);\n\n          _this6.$store.commit('studio/setImages', images);\n\n          _this6.$store.commit('studio/setScript', script);\n        }\n\n        if (data.title) {\n          _this6.$store.commit('studio/SET_VIDEO_ATTR', {\n            key: 'title',\n            value: data.title\n          });\n        }\n\n        if (data.text) {\n          _this6.$store.commit('studio/setScript', data.text);\n        }\n\n        if (!_this6.uploadedDocumentIsPPT) _this6.tabIndex = 0;else setTimeout(function () {\n          return _this6.$store.commit('studio/toggleLibrary');\n        }, 1000);\n\n        _this6.$Progress.finish();\n\n        _this6.$vs.loading.close();\n      }).catch(function () {\n        _this6.$Progress.fail();\n\n        _this6.$vs.loading.close();\n\n        _this6.$vs.notify({\n          title: 'Invalid URL',\n          text: 'No text found',\n          color: 'danger'\n        });\n      });\n    },\n    onSelectText: function onSelectText() {\n      this.videoScript = this.queryContent.text;\n      this.choiceModal = false;\n    },\n    onSelectLink: function onSelectLink(idx) {\n      this.choiceModal = false;\n      this.fetchContent(this.queryContent.links[idx]);\n    }\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.saveForm();\n    window.removeEventListener('beforeunload', this.saveForm);\n  }\n};",{"version":3,"sources":["EditScript.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <form v-if=\"currentTabIndex === 0\">\n      <vx-card :title=\"$t('studio.text.t1')\" class=\"text-window\">\n        <div class=\"text-left\">\n          <h6>{{ $t('studio.text.t2') }}</h6>\n          <span class=\"text-danger text-sm\" v-show=\"errors.has('title')\">{{\n            errors.first('title')\n          }}</span>\n          <input\n            type=\"text\"\n            id=\"title\"\n            name=\"title\"\n            size=\"large\"\n            :placeholder=\"$t('studio.text.t2')\"\n            v-model=\"title\"\n            class=\"w-full mt-3 mb-3 title2\"\n            v-validate=\"'required'\"\n            autocomplete=\"off\"\n          />\n          <div class=\"flex items-start -mx-2\">\n            <h6 class=\"px-2\">{{ $t('studio.text.t4') }}</h6>\n            <div class=\"px-2\">\n              <LanguageSelect v-model=\"srcLang\" />\n            </div>\n          </div>\n          <span class=\"text-danger text-sm\" v-show=\"errors.has('script')\">{{\n            errors.first('script')\n          }}</span>\n          <textarea\n            type=\"text\"\n            id=\"videoScript\"\n            name=\"script\"\n            :placeholder=\"$t('studio.text.t5')\"\n            v-model=\"videoScript\"\n            v-validate=\"'required'\"\n            class=\"w-full mt-3 mb-3 video-script2\"\n          >\n          </textarea>\n        </div>\n        <div class=\"items-center\">\n          <div class=\"w-full items-center relative\">\n            <vs-button class=\"bg-cutsom-purple\" @click.prevent=\"handleSubmit\">{{\n              $t('studio.text.t6')\n            }}</vs-button>\n            <div class=\"absolute\" style=\"right: 8px; bottom: 6px\">\n              <vs-dropdown\n                vs-custom-content\n                vs-trigger-click\n                class=\"cursor-pointer\"\n              >\n                <span\n                  class=\"cursor-pointer flex items-center\"\n                  style=\"transform: translate(0px, -2px)\"\n                >\n                  <span class=\"font-bold\">{{\n                    breakTypeOptions[breakType]\n                  }}</span>\n                  <vs-icon icon-pack=\"feather\" icon=\"icon icon-chevron-down\" />\n                </span>\n                <vs-dropdown-menu class=\"w-48 i18n-dropdown vx-navbar-dropdown\">\n                  <vs-dropdown-item @click=\"breakType = 'short'\">\n                    &nbsp;Short Scenes</vs-dropdown-item\n                  >\n                  <vs-dropdown-item @click=\"breakType = 'long'\">\n                    &nbsp;Long Scenes</vs-dropdown-item\n                  >\n                </vs-dropdown-menu>\n              </vs-dropdown>\n            </div>\n          </div>\n        </div>\n      </vx-card>\n      <!--<div style=\"margin-bottom: 150px\"></div>-->\n    </form>\n    <DocumentUpload v-else-if=\"currentTabIndex === 1\" />\n    <ExternalUrl v-else />\n    <vs-popup ref=\"custom_teams_modal\" :active.sync=\"choiceModal\">\n      <div class=\"p-2\">\n        <h2 class=\"font-extrabold mb-4\">Select from following links</h2>\n        <template v-for=\"(link, idx) in queryContent.links\">\n          <vx-card\n            :key=\"idx\"\n            @click=\"onSelectLink(idx)\"\n            class=\"cursor-pointer mt-3\"\n            style=\"background: #f3f4f6\"\n            noShadow\n          >\n            <div class=\"flex items-center -m-2\">\n              <vs-icon icon=\"language\" size=\"24px\" class=\"mr-2\"></vs-icon>\n              <p :title=\"link\" class=\"truncate ellipsis font-medium\">\n                {{ link }}\n              </p>\n            </div></vx-card\n          >\n        </template>\n        <vs-divider>Or</vs-divider>\n        <p class=\"font-semibold\">\n          Copy paste your script into the video script box alongwith a suitable\n          title in the video title\n        </p>\n      </div>\n    </vs-popup>\n  </div>\n</template>\n\n<script>\nimport LanguageSelect from './components/LanguageSelect.vue';\nimport DocumentUpload from './components/DocumentUpload';\nimport ExternalUrl from './components/ExternalUrl';\n\nexport default {\n  components: {\n    LanguageSelect,\n    DocumentUpload,\n    ExternalUrl\n  },\n  data() {\n    return {\n      form: {\n        title: '',\n        description: '',\n        videoScript: ''\n      },\n\n      options: [\n        { value: 'en', label: 'English' },\n        { value: 'ru', label: 'Russian' },\n        { value: 'pt', label: 'Portugese' }\n      ],\n      breakType: 'short',\n      breakTypeOptions: {\n        long: 'Long Scenes',\n        short: 'Short Scenes'\n      },\n      queryContent: {\n        links: []\n      },\n      contentUrl: '',\n      choiceModal: false,\n      task_id: null,\n      requestInterval: Function\n    };\n  },\n  computed: {\n    videoScript: {\n      get() {\n        return this.$store.state.studio.videoScript;\n      },\n      set(value) {\n        this.$store.commit('studio/setScript', value);\n      }\n    },\n    srcLang: {\n      get() {\n        return this.$store.state.studio.video.srcLang;\n      },\n      set(value) {\n        this.$store.commit('studio/SET_VIDEO_ATTR', {\n          key: 'srcLang',\n          value: value\n        });\n      }\n    },\n    title: {\n      get() {\n        return this.$store.state.studio.video.title;\n      },\n      set(value) {\n        this.$store.commit('studio/SET_VIDEO_ATTR', {\n          key: 'title',\n          value: value\n        });\n      }\n    },\n    description: {\n      get() {\n        return this.$store.state.studio.video.description;\n      },\n      set(value) {\n        this.$store.commit('studio/SET_VIDEO_ATTR', {\n          key: 'description',\n          value: value\n        });\n      }\n    },\n    uploadedDocumentIsPPT() {\n      return this.$store.state.studio.video.fromPPT;\n    },\n    currentTabIndex() {\n      return this.$store.state.studio.tabIndex;\n    }\n  },\n  created() {\n    if (\n      !this.$route.params.videoId &&\n      Object.keys(this.$route.query).length === 0 &&\n      this.title === '' &&\n      this.videoScript === ''\n    ) {\n      const storedForm = JSON.parse(localStorage.getItem('form'));\n      if (storedForm) {\n        this.title = storedForm.title;\n        this.videoScript = storedForm.videoScript;\n      }\n    }\n    window.addEventListener('beforeunload', this.saveForm);\n  },\n  mounted() {\n    this.$refs.custom_teams_modal.$el.childNodes[1].childNodes[0].style.display =\n      'none';\n    if (this.$route.query.contentUrl) {\n      const { contentUrl, tempauth, Translate, ApiVersion } = this.$route.query;\n      const downloadUrl = tempauth\n        ? `${contentUrl}&Translate=${Translate}&tempauth=${tempauth}&ApiVersion=${ApiVersion}`\n        : contentUrl;\n      this.handleUrlSubmit(downloadUrl, this.$route.query.ext);\n    }\n    if (this.$route.query.attachments) {\n      const attachmentList = this.$route.query.attachments.split(',');\n      this.queryContent.links.splice(0, 0, ...attachmentList);\n    }\n    if (this.$route.query.html) {\n      // console.log(this.$route.query.html);\n      const parser = new DOMParser();\n      const parsedHtml = parser.parseFromString(\n        this.$route.query.html,\n        'text/html'\n      );\n      // console.log(parsedHtml);\n      const anchorTagArray = parsedHtml.querySelectorAll('a');\n      if (anchorTagArray) {\n        anchorTagArray.forEach(a => {\n          this.queryContent.links.push(a.href);\n        });\n        if (this.queryContent.links.length > 1) {\n          this.choiceModal = true;\n        } else if (this.queryContent.links.length === 1) {\n          this.onSelectLink(0);\n        } else {\n          this.$vs.dialog({\n            type: 'alert',\n            color: 'primary',\n            title: `Text too Long!`,\n            acceptText: 'Okay',\n            text:\n              'The length of text in the message was too long. Kindly copy the text and paste it in the video script box.'\n          });\n        }\n      }\n    } else if (this.$route.query.text) {\n      this.videoScript = this.$route.query.text;\n    }\n    if (Object.keys(this.$route.query).length !== 0) {\n      this.$router.replace({ query: null });\n    }\n  },\n  methods: {\n    saveForm() {\n      const form = {\n        title: this.title,\n        videoScript: this.videoScript\n      };\n      localStorage.setItem('form', JSON.stringify(form));\n    },\n    summarizeScript() {\n      this.$Progress.start();\n      this.$store\n        .dispatch('studio/summarizeScript')\n        .then(res => {\n          console.log('summarized script', res);\n          document.getElementById('video-script').innerText = res;\n          this.$forceUpdate();\n          this.$Progress.finish();\n        })\n        .catch(err => {\n          console.log('error in summarization', err);\n          this.$Progress.fail();\n        });\n    },\n    scriptInput(e) {\n      this.$store.commit('studio/setScript', e.target.innerText);\n    },\n    handleSubmit() {\n      this.$validator.validateAll().then(result => {\n        if (result) {\n          this.createScenes();\n        } else {\n          this.$vs.notify({\n            title: 'Invalid Input',\n            text: this.errors.has('title')\n              ? 'Enter Video title'\n              : 'Enter Video script',\n            color: 'danger'\n          });\n        }\n      });\n    },\n    createScenes() {\n      this.$Progress.start();\n      this.$vs.loading({ color: 'transparent' });\n      this.$store.commit('studio/SET_VIDEO_ATTR', {\n        key: 'scrLang',\n        value: this.srcLang\n      });\n      this.$store\n        .dispatch('studio/sentenceDetection', this.breakType)\n        .then(res => {\n          console.log('sentences', res.data.sentences);\n          console.log('keywords', res.data.keywords);\n          /* this.$store\n            .dispatch('studio/keywordExtraction')\n            .then(resKeywords => {\n              console.log('keywords', resKeywords); */\n          this.$store\n            .dispatch('studio/videoSuggestions')\n            .then(resVideos => {\n              console.log('videos', resVideos);\n              this.$Progress.finish();\n              this.$vs.loading.close();\n              this.$store.commit('studio/resetState');\n              /* this.$store\n                    .dispatch('studio/audioSuggestions')\n                    .then(res => {\n                      this.$Progress.finish();\n                      this.$vs.loading.close();\n                      this.$store.commit('studio/resetState');\n                    })\n                    .catch(err => {\n                      this.$Progress.fail();\n                      this.$vs.loading.close();\n                      console.log(err);\n                      this.$vs.notify({\n                        title: 'Error Occured',\n                        text: 'Audio Suggestions',\n                        color: 'danger'\n                      });\n                    }); */\n            })\n            .catch(err => {\n              console.log(err);\n              this.$Progress.fail();\n              this.$vs.loading.close();\n              this.$vs.notify({\n                title: 'Error Occured',\n                text: 'Video Suggestions',\n                color: 'danger'\n              });\n            });\n        })\n        /* .catch(err => {\n              console.log(err);\n              this.$Progress.fail();\n              this.$vs.loading.close();\n              this.$vs.notify({\n                title: 'Error Occured',\n                text: 'keyword Extraction',\n                color: 'danger'\n              });\n            });\n        }) */\n        .catch(err => {\n          console.log(err);\n          this.$Progress.fail();\n          this.$vs.loading.close();\n          this.$vs.notify({\n            title: 'Error Occured',\n            text: 'Sentence Detection',\n            color: 'danger'\n          });\n        });\n    },\n    handleUrlSubmit(contentUrl, ext) {\n      if (ext === 'mp4') {\n        this.contentUrl = contentUrl;\n        this.$validator.reset();\n        this.$Progress.start();\n        this.$vs.loading({ color: 'transparent' });\n        this.splitIntoChunks();\n      } else {\n        this.fetchContent(contentUrl, ext);\n      }\n    },\n    async splitIntoChunks() {\n      const requestBody = {\n        video_url: this.contentUrl,\n        option: 'small',\n        task_id: this.task_id\n      };\n      // console.log({ requestBody });\n      try {\n        const apiResponse = await this.$store.dispatch(\n          'studio/breakVideoIntoScenes',\n          requestBody\n        );\n        // console.log({ chunksAPIResponse: apiResponse });\n        if (!this.task_id) this.task_id = apiResponse.task_id;\n        if (apiResponse.status) {\n          const scenes = {};\n          const videos = {};\n          const images = {};\n          const keywords = {};\n          apiResponse.data.forEach((chunkUrl, index) => {\n            scenes[index] = '';\n            videos[index] = '';\n            images[index] = '';\n            keywords[index] = [];\n            this.$store.commit('studio/setInitialVideo', {\n              indexs: index,\n              value: chunkUrl\n            });\n            this.$store.commit('studio/setSentences', scenes);\n            this.$store.commit('studio/setVideos', videos);\n            this.$store.commit('studio/setKeywords', keywords);\n            this.$store.commit('studio/setImages', images);\n            this.$Progress.finish();\n            this.$vs.loading.close();\n            setTimeout(() => this.$store.commit('studio/toggleLibrary'), 1000);\n          });\n        } else {\n          this.requestInterval = setTimeout(\n            () => this.splitIntoChunks(),\n            10000\n          );\n        }\n      } catch (err) {\n        console.log({ chunksAPIError: err });\n        this.$vs.notify({\n          title: 'Error',\n          text: 'Fail to split video',\n          color: 'danger'\n        });\n        this.$Progress.fail();\n        this.$vs.loading.close();\n      }\n    },\n    fetchContent(url, ext) {\n      this.$Progress.start();\n      this.$vs.loading({ color: 'transparent' });\n      this.$store\n        .dispatch('studio/extractInfoFromUrl', { url, ext })\n        .then(data => {\n          if (data.slides) {\n            const scenes = {};\n            const videos = {};\n            const images = {};\n            const keywords = {};\n            this.$store.commit('studio/SET_VIDEO_ATTR', {\n              key: 'fromPPT',\n              value: true\n            });\n            let script = '';\n            Object.values(data.slides).forEach(({ img_path, text }, index) => {\n              scenes[index] = '*No notes found in this slide*';\n              videos[index] = '';\n              images[index] = { 0: [img_path, 'slide', 'slide'] };\n              keywords[index] = [];\n              script += text;\n              this.$store.commit('studio/setInitialVideo', {\n                indexs: index,\n                value: img_path\n              });\n            });\n            this.$store.commit('studio/setSentences', scenes);\n            this.$store.commit('studio/setVideos', videos);\n            this.$store.commit('studio/setKeywords', keywords);\n            this.$store.commit('studio/setImages', images);\n            this.$store.commit('studio/setScript', script);\n          }\n          if (data.title) {\n            this.$store.commit('studio/SET_VIDEO_ATTR', {\n              key: 'title',\n              value: data.title\n            });\n          }\n          if (data.text) {\n            this.$store.commit('studio/setScript', data.text);\n          }\n          if (!this.uploadedDocumentIsPPT) this.tabIndex = 0;\n          else\n            setTimeout(() => this.$store.commit('studio/toggleLibrary'), 1000);\n\n          this.$Progress.finish();\n          this.$vs.loading.close();\n        })\n        .catch(() => {\n          this.$Progress.fail();\n          this.$vs.loading.close();\n          this.$vs.notify({\n            title: 'Invalid URL',\n            text: 'No text found',\n            color: 'danger'\n          });\n        });\n    },\n    onSelectText() {\n      this.videoScript = this.queryContent.text;\n      this.choiceModal = false;\n    },\n    onSelectLink(idx) {\n      this.choiceModal = false;\n      this.fetchContent(this.queryContent.links[idx]);\n    }\n  },\n  beforeDestroy() {\n    this.saveForm();\n    window.removeEventListener('beforeunload', this.saveForm);\n  }\n};\n</script>\n\n<style scoped>\n[contentEditable='true']:empty:not(:focus):before {\n  content: attr(data-text);\n}\n::placeholder {\n  color: #626262;\n  opacity: 0.7;\n}\n.title2 {\n  height: 40px !important;\n  border: 0.5px solid lightgray;\n  font-size: 14px;\n  overflow-y: auto;\n  border-radius: 5px;\n  color: #626262;\n  opacity: 1; /* Firefox */\n  text-indent: 0.01%;\n  font-family: Montserrat, Helvetica, Arial, sans-serif;\n  font-weight: 400;\n  font-style: normal;\n  font-variant: normal;\n  text-decoration: none solid rgb(98, 98, 98);\n  text-align: start;\n  line-height: 22.4px;\n  vertical-align: baseline;\n  padding: 9px;\n}\n.description2 {\n  height: 60px !important;\n  border-radius: 5px;\n  border: 0.5px solid lightgray;\n  font-size: 14px;\n  overflow-y: auto;\n  color: #626262;\n  opacity: 1;\n  text-indent: 0.01%;\n  font-family: Montserrat, Helvetica, Arial, sans-serif;\n  font-weight: 400;\n  font-style: normal;\n  font-variant: normal;\n  text-decoration: none solid rgb(98, 98, 98);\n  text-align: start;\n  line-height: 22.4px;\n  vertical-align: baseline;\n  padding: 9px;\n}\n.video-script2 {\n  height: 250px !important;\n  border: 0.5px solid lightgray;\n  font-size: 14px;\n  overflow-y: auto;\n  border-radius: 5px;\n  color: #626262;\n  opacity: 1;\n  text-indent: 0.01%;\n  font-family: Montserrat, Helvetica, Arial, sans-serif;\n  font-weight: 400;\n  font-style: normal;\n  font-variant: normal;\n  text-decoration: none solid rgb(98, 98, 98);\n  text-align: start;\n  line-height: 22.4px;\n  vertical-align: baseline;\n  padding: 9px;\n}\n.video-script.vs-con-textarea >>> .vs-textarea {\n  height: 250px !important;\n}\n\n.items-center {\n  text-align: center;\n  text-align: -moz-center;\n  text-align: -webkit-center;\n}\n\n.items-left {\n  text-align: left;\n  text-align: -moz-left;\n  text-align: -webkit-left;\n}\n\n.items-right {\n  text-align: right;\n  text-align: -moz-right;\n  text-align: -webkit-right;\n}\n\n/*.text-window {\n  height: 33rem;\n  margin-top: calc(100% - 33rem);\n} */\n\n.text-window .vx-card {\n  /*height: 20rem;*/\n  border: 0.5px solid gray;\n}\n\n.text-window .vx-card div {\n  padding: 0.2rem;\n  height: 15rem;\n  overflow-y: auto;\n}\n.text-window .vx-card {\n  border: 1px solid rgba(0, 0, 0, 0.2);\n}\n</style>\n"],"sourceRoot":"src/views/pages"}]}