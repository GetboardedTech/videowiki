{"remainingRequest":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/babel-loader/lib/index.js!/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/eslint-loader/index.js??ref--13-0!/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/src/store/studio/moduleStudioActions.js","dependencies":[{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/src/store/studio/moduleStudioActions.js","mtime":1617441641271},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _slicedToArray from \"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport \"core-js/modules/es7.object.entries\";\nimport _toConsumableArray from \"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/es7.object.values\";\nimport \"core-js/modules/web.dom.iterable\";\n\n/* =========================================================================================\n  File Name: moduleAuthActions.js\n  Description: Auth Module Actions\n  ----------------------------------------------------------------------------------------\n  Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\n  Author: Pixinvent\n  Author URL: http://www.themeforest.net/user/pixinvent\n========================================================================================== */\nimport store from \"../store\";\nimport axios from \"../../axios\";\nimport constants from \"../../../constant\";\nexport default {\n  // /////////////////////////////////////////////\n  // VideoWiki\n  // /////////////////////////////////////////////\n  breakVideoIntoScenes: function breakVideoIntoScenes(_ref, reuqestBody) {\n    var commit = _ref.commit;\n    return new Promise(function (resolve, reject) {\n      axios.post(constants.apiUrl + '/api/video-chunks/', reuqestBody).then(function (res) {\n        resolve(res.data);\n      }).catch(function (err) {\n        reject(err);\n      });\n    });\n  },\n  extractInfoFromUrl: function extractInfoFromUrl(_ref2, requestBody) {\n    var commit = _ref2.commit;\n    return new Promise(function (resolve, reject) {\n      axios.post(constants.apiUrl + '/api/extract_info_url', requestBody).then(function (res) {\n        resolve(res.data.data);\n      }).catch(function (err) {\n        reject(err);\n      });\n    });\n  },\n  uploadDoc: function uploadDoc(_ref3, documentFile) {\n    var commit = _ref3.commit;\n    var form = new FormData();\n    form.append('file', documentFile);\n    return new Promise(function (resolve, reject) {\n      axios.post(constants.apiUrl + '/api/extract_info_file', form).then(function (res) {\n        // commit('selectVideo', res.data.video_url);\n        resolve(res.data.data);\n      }).catch(function (err) {\n        reject(err);\n      });\n    });\n  },\n  summarizeScript: function summarizeScript(_ref4) {\n    var commit = _ref4.commit;\n    return new Promise(function (resolve, reject) {\n      var dataObj = {\n        text: store.state.studio.videoScript,\n        srcLang: store.state.studio.video.srcLang\n      };\n      axios.post(constants.apiUrl + '/smz/new', dataObj).then(function (res) {\n        /* let script = '';\n        for (const s in res.data) {\n          script = script + res.data[s] + ' ';\n        }\n        commit('setScript', script); */\n        commit('SET_VIDEO_ATTR', {\n          key: 'description',\n          value: res.data.summary\n        });\n        resolve(res);\n      }).catch(function (err) {\n        reject(err);\n      });\n    });\n  },\n  generateTags: function generateTags(_ref5) {\n    var commit = _ref5.commit;\n    return new Promise(function (resolve, reject) {\n      var dataObj = {\n        title: store.state.studio.video.title,\n        keywords: []\n      };\n      Object.values(store.state.studio.keywords).forEach(function (arr) {\n        var _dataObj$keywords;\n\n        (_dataObj$keywords = dataObj.keywords).push.apply(_dataObj$keywords, _toConsumableArray(arr));\n      });\n      axios.post(constants.apiUrl + '/ke/tags', dataObj).then(function (res) {\n        /* let script = '';\n        for (const s in res.data) {\n          script = script + res.data[s] + ' ';\n        } \n        commit('setScript', script); */\n        commit('setTags', res.data.tags);\n        resolve(res);\n      }).catch(function (err) {\n        reject(err);\n      });\n    });\n  },\n  sentenceDetection: function sentenceDetection(_ref6, value) {\n    var commit = _ref6.commit;\n    return new Promise(function (resolve, reject) {\n      var dataObj = {\n        text: store.state.studio.videoScript,\n\n        /* srcLang: store.state.studio.video.srcLang, */\n        break_type: value\n      };\n      axios.post(constants.apiUrl + '/sd/', dataObj).then(function (res) {\n        commit('setSentences', res.data.sentences);\n        commit('setKeywords', res.data.keywords);\n        commit('setSourceLanguage', res.data.srcLang);\n        resolve(res);\n      }).catch(function (err) {\n        reject(err);\n      });\n    });\n  },\n\n  /* keywordExtraction({ commit }) {\n    return new Promise((resolve, reject) => {\n      const dataObj = {\n        text: store.state.studio.videoScript,\n        srcLang: store.state.studio.video.srcLang\n      };\n      axios\n        .post(constants.apiUrl + '/ke/', dataObj)\n        .then(res => {\n          commit('setKeywords', res.data);\n          resolve(res);\n        })\n        .catch(err => {\n          reject(err);\n        });\n    });\n  }, */\n  audioSuggestions: function audioSuggestions(_ref7) {\n    var commit = _ref7.commit;\n    return new Promise(function (resolve, reject) {\n      var dataObj = {\n        keywords: store.state.studio.keywords,\n        srcLang: store.state.studio.video.srcLang\n      };\n      axios.post(constants.apiUrl + '/al/', dataObj).then(function (res) {\n        // console.log('audio suggestions', res);\n        commit('setAudios', res.data);\n        resolve(res);\n      }).catch(function (err) {\n        console.log('error in audio suggestion', err);\n        reject(err);\n      });\n    });\n  },\n  audioVideoMerge: function audioVideoMerge(_ref8, dataObj) {\n    var commit = _ref8.commit;\n    return new Promise(function (resolve, reject) {\n      /* const headers = {\n        'Content-Type': 'multipart/form-data'\n      }; */\n      axios.post(constants.apiUrl + '/avm/', dataObj).then(function (res) {\n        // commit('setVideoWithAudio', res.data.url);\n        resolve(res);\n      }).catch(function (err) {\n        reject(err);\n      });\n    });\n  },\n  videoSuggestions: function videoSuggestions(_ref9) {\n    var commit = _ref9.commit;\n    return new Promise(function (resolve, reject) {\n      var dataObj = {\n        keywords: store.state.studio.keywords,\n        srcLang: store.state.studio.video.srcLang\n      };\n      axios.post(constants.apiUrl + '/vl/', dataObj).then(function (res) {\n        commit('setVideos', res.data.videos);\n        commit('setImages', res.data.images);\n        resolve(res);\n      }).catch(function (err) {\n        reject(err);\n      });\n    });\n  },\n  searchMedia: function searchMedia(_ref10, dataObj) {\n    var commit = _ref10.commit;\n    return new Promise(function (resolve, reject) {\n      axios.post(constants.apiUrl + '/vs/', dataObj).then(function (res) {\n        // commit('setSearchedVideos', res.data);\n        resolve(res);\n      }).catch(function (err) {\n        reject(err);\n      });\n    });\n  },\n  addMotionToImage: function addMotionToImage(_ref11, dataObj) {\n    var commit = _ref11.commit;\n    return new Promise(function (resolve, reject) {\n      axios.post(constants.apiUrl + '/image/zoom', dataObj).then(function (res) {\n        resolve(res.data);\n      }).catch(function (err) {\n        reject(err);\n      });\n    });\n  },\n  editSceneScript: function editSceneScript(_ref12, sceneScriptData) {\n    var commit = _ref12.commit;\n    return new Promise(function (resolve, reject) {\n      axios.post(constants.apiUrl + '/vsrt/', sceneScriptData).then(function (res) {\n        // commit(\"setVideos\", res.data)\n        resolve(res);\n      }).catch(function (err) {\n        reject(err);\n      });\n    });\n  },\n  concatenateVideos: function concatenateVideos(_ref13, videoWikiData) {\n    var commit = _ref13.commit;\n    return new Promise(function (resolve, reject) {\n      /* const dataObj = {\n        videos\n      } */\n      axios.post(constants.apiUrl + '/vc/', videoWikiData).then(function (res) {\n        // commit(\"setVideos\", res.data)\n        resolve(res.data);\n      }).catch(function (err) {\n        reject(err);\n      });\n    });\n  },\n  uploadMedia: function uploadMedia(_ref14, mediaFile) {\n    var commit = _ref14.commit;\n    var form = new FormData();\n    form.append('media', mediaFile);\n    return new Promise(function (resolve, reject) {\n      axios.post(constants.apiUrl + '/videoapi/upload_media', form).then(function (res) {\n        // commit('selectVideo', res.data.video_url);\n        resolve(res.data.media_url);\n      }).catch(function (err) {\n        reject(err);\n      });\n    });\n  },\n  publishVideo: function publishVideo(_ref15, videoUploadData) {\n    var commit = _ref15.commit;\n    return new Promise(function (resolve, reject) {\n      /* const dataObj = {\n        videos\n      } */\n      axios.post(constants.apiUrl + '/videoapi/publish_video', videoUploadData).then(function (res) {\n        // commit(\"setVideos\", res.data)\n        // commit('setPublishStatus', true);\n        resolve(res);\n      }).catch(function (err) {\n        reject(err);\n      });\n    });\n  },\n  getVideoData: function getVideoData(_ref16, videoId) {\n    var commit = _ref16.commit;\n    return new Promise(function (resolve, reject) {\n      axios.get(constants.apiUrl + '/videoapi/get_saved_video?id=' + videoId).then(function (res) {\n        commit('setInitialState');\n        var apiResponse = res.data;\n        commit('SET_VIDEO_ATTR', {\n          key: 'title',\n          value: apiResponse.info.title\n        });\n        commit('setScript', apiResponse.info.script);\n        commit('SET_VIDEO_ATTR', {\n          key: 'srcLang',\n          value: apiResponse.info.language\n        });\n        commit('setTags', apiResponse.tags);\n        commit('SET_VIDEO_ATTR', {\n          key: 'description',\n          value: apiResponse.info.description\n        });\n        commit('SET_VIDEO_ATTR', {\n          key: 'published_id',\n          value: apiResponse.published_id\n        });\n        var sentences = {};\n        var keywords = {};\n        Object.entries(apiResponse.scenes).forEach(function (_ref17) {\n          var _ref18 = _slicedToArray(_ref17, 2),\n              key = _ref18[0],\n              value = _ref18[1];\n\n          var sceneNum = parseInt(key);\n          var sceneUrl = value.online_url ? value.online_url : value.uploaded_video;\n          sentences[key] = value.text;\n          keywords[key] = value.keywords;\n          commit('setInitialVideo', {\n            indexs: sceneNum,\n            value: sceneUrl\n          });\n          commit('setStyles', {\n            prop: 'sceneScriptColor',\n            value: value.font_color,\n            sceneNum: sceneNum\n          });\n          commit('setStyles', {\n            prop: 'sceneScriptPosition',\n            value: parseInt(value.position),\n            sceneNum: sceneNum\n          });\n          commit('setStyles', {\n            prop: 'sceneBackgroundColor',\n            value: value.background_color,\n            sceneNum: sceneNum\n          });\n          /* commit('setScriptSceneVideo', {\n            sceneNum: sceneNum + 1,\n            value: sceneUrl\n          }); */\n\n          commit('setRecordedAudio', {\n            sceneNum: sceneNum,\n            value: value.audio\n          });\n        });\n        commit('setSentences', sentences);\n        commit('setKeywords', keywords);\n        commit('skipSubtitles');\n        commit('skipMusic');\n        resolve(res);\n      }).catch(function (err) {\n        reject(err);\n      });\n    });\n  },\n  resetState: function resetState(_ref19) {\n    var commit = _ref19.commit;\n    commit('setInitialState');\n  },\n  postTxData: function postTxData(_ref20, payload) {\n    var commit = _ref20.commit;\n    return new Promise(function (resolve, reject) {\n      axios.post(constants.apiUrl + '/transaction/oceanbuy', payload).then(function (res) {\n        console.log(res);\n        resolve(res);\n      }).catch(function (err) {\n        reject(err);\n      });\n    });\n  }\n};",{"version":3,"sources":["/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/src/store/studio/moduleStudioActions.js"],"names":["store","axios","constants","breakVideoIntoScenes","reuqestBody","commit","Promise","resolve","reject","post","apiUrl","then","res","data","catch","err","extractInfoFromUrl","requestBody","uploadDoc","documentFile","form","FormData","append","summarizeScript","dataObj","text","state","studio","videoScript","srcLang","video","key","value","summary","generateTags","title","keywords","Object","values","forEach","arr","push","tags","sentenceDetection","break_type","sentences","audioSuggestions","console","log","audioVideoMerge","videoSuggestions","videos","images","searchMedia","addMotionToImage","editSceneScript","sceneScriptData","concatenateVideos","videoWikiData","uploadMedia","mediaFile","media_url","publishVideo","videoUploadData","getVideoData","videoId","get","apiResponse","info","script","language","description","published_id","entries","scenes","sceneNum","parseInt","sceneUrl","online_url","uploaded_video","indexs","prop","font_color","position","background_color","audio","resetState","postTxData","payload"],"mappings":"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","sourcesContent":["/* =========================================================================================\n  File Name: moduleAuthActions.js\n  Description: Auth Module Actions\n  ----------------------------------------------------------------------------------------\n  Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\n  Author: Pixinvent\n  Author URL: http://www.themeforest.net/user/pixinvent\n========================================================================================== */\n\nimport store from '../store';\nimport axios from '../../axios';\nimport constants from '../../../constant';\n\nexport default {\n  // /////////////////////////////////////////////\n  // VideoWiki\n  // /////////////////////////////////////////////\n\n  breakVideoIntoScenes({ commit }, reuqestBody) {\n    return new Promise((resolve, reject) => {\n      axios\n        .post(constants.apiUrl + '/api/video-chunks/', reuqestBody)\n        .then(res => {\n          resolve(res.data);\n        })\n        .catch(err => {\n          reject(err);\n        });\n    });\n  },\n\n  extractInfoFromUrl({ commit }, requestBody) {\n    return new Promise((resolve, reject) => {\n      axios\n        .post(constants.apiUrl + '/api/extract_info_url', requestBody)\n        .then(res => {\n          resolve(res.data.data);\n        })\n        .catch(err => {\n          reject(err);\n        });\n    });\n  },\n  uploadDoc({ commit }, documentFile) {\n    var form = new FormData();\n    form.append('file', documentFile);\n    return new Promise((resolve, reject) => {\n      axios\n        .post(constants.apiUrl + '/api/extract_info_file', form)\n        .then(res => {\n          // commit('selectVideo', res.data.video_url);\n          resolve(res.data.data);\n        })\n        .catch(err => {\n          reject(err);\n        });\n    });\n  },\n  summarizeScript({ commit }) {\n    return new Promise((resolve, reject) => {\n      const dataObj = {\n        text: store.state.studio.videoScript,\n        srcLang: store.state.studio.video.srcLang\n      };\n      axios\n        .post(constants.apiUrl + '/smz/new', dataObj)\n        .then(res => {\n          /* let script = '';\n          for (const s in res.data) {\n            script = script + res.data[s] + ' ';\n          }\n          commit('setScript', script); */\n          commit('SET_VIDEO_ATTR', {\n            key: 'description',\n            value: res.data.summary\n          });\n          resolve(res);\n        })\n        .catch(err => {\n          reject(err);\n        });\n    });\n  },\n  generateTags({ commit }) {\n    return new Promise((resolve, reject) => {\n      const dataObj = {\n        title: store.state.studio.video.title,\n        keywords: []\n      };\n      Object.values(store.state.studio.keywords).forEach(arr => {\n        dataObj.keywords.push(...arr);\n      });\n      axios\n        .post(constants.apiUrl + '/ke/tags', dataObj)\n        .then(res => {\n          /* let script = '';\n          for (const s in res.data) {\n            script = script + res.data[s] + ' ';\n          } \n          commit('setScript', script); */\n          commit('setTags', res.data.tags);\n          resolve(res);\n        })\n        .catch(err => {\n          reject(err);\n        });\n    });\n  },\n  sentenceDetection({ commit }, value) {\n    return new Promise((resolve, reject) => {\n      const dataObj = {\n        text: store.state.studio.videoScript,\n        /* srcLang: store.state.studio.video.srcLang, */\n        break_type: value\n      };\n      axios\n        .post(constants.apiUrl + '/sd/', dataObj)\n        .then(res => {\n          commit('setSentences', res.data.sentences);\n          commit('setKeywords', res.data.keywords);\n          commit('setSourceLanguage', res.data.srcLang);\n          resolve(res);\n        })\n        .catch(err => {\n          reject(err);\n        });\n    });\n  },\n  /* keywordExtraction({ commit }) {\n    return new Promise((resolve, reject) => {\n      const dataObj = {\n        text: store.state.studio.videoScript,\n        srcLang: store.state.studio.video.srcLang\n      };\n      axios\n        .post(constants.apiUrl + '/ke/', dataObj)\n        .then(res => {\n          commit('setKeywords', res.data);\n          resolve(res);\n        })\n        .catch(err => {\n          reject(err);\n        });\n    });\n  }, */\n  audioSuggestions({ commit }) {\n    return new Promise((resolve, reject) => {\n      const dataObj = {\n        keywords: store.state.studio.keywords,\n        srcLang: store.state.studio.video.srcLang\n      };\n      axios\n        .post(constants.apiUrl + '/al/', dataObj)\n        .then(res => {\n          // console.log('audio suggestions', res);\n          commit('setAudios', res.data);\n          resolve(res);\n        })\n        .catch(err => {\n          console.log('error in audio suggestion', err);\n          reject(err);\n        });\n    });\n  },\n  audioVideoMerge({ commit }, dataObj) {\n    return new Promise((resolve, reject) => {\n      /* const headers = {\n        'Content-Type': 'multipart/form-data'\n      }; */\n      axios\n        .post(constants.apiUrl + '/avm/', dataObj)\n        .then(res => {\n          // commit('setVideoWithAudio', res.data.url);\n          resolve(res);\n        })\n        .catch(err => {\n          reject(err);\n        });\n    });\n  },\n  videoSuggestions({ commit }) {\n    return new Promise((resolve, reject) => {\n      const dataObj = {\n        keywords: store.state.studio.keywords,\n        srcLang: store.state.studio.video.srcLang\n      };\n      axios\n        .post(constants.apiUrl + '/vl/', dataObj)\n        .then(res => {\n          commit('setVideos', res.data.videos);\n          commit('setImages', res.data.images);\n          resolve(res);\n        })\n        .catch(err => {\n          reject(err);\n        });\n    });\n  },\n  searchMedia({ commit }, dataObj) {\n    return new Promise((resolve, reject) => {\n      axios\n        .post(constants.apiUrl + '/vs/', dataObj)\n        .then(res => {\n          // commit('setSearchedVideos', res.data);\n          resolve(res);\n        })\n        .catch(err => {\n          reject(err);\n        });\n    });\n  },\n  addMotionToImage({ commit }, dataObj) {\n    return new Promise((resolve, reject) => {\n      axios\n        .post(constants.apiUrl + '/image/zoom', dataObj)\n        .then(res => {\n          resolve(res.data);\n        })\n        .catch(err => {\n          reject(err);\n        });\n    });\n  },\n  editSceneScript({ commit }, sceneScriptData) {\n    return new Promise((resolve, reject) => {\n      axios\n        .post(constants.apiUrl + '/vsrt/', sceneScriptData)\n        .then(res => {\n          // commit(\"setVideos\", res.data)\n          resolve(res);\n        })\n        .catch(err => {\n          reject(err);\n        });\n    });\n  },\n  concatenateVideos({ commit }, videoWikiData) {\n    return new Promise((resolve, reject) => {\n      /* const dataObj = {\n        videos\n      } */\n      axios\n        .post(constants.apiUrl + '/vc/', videoWikiData)\n        .then(res => {\n          // commit(\"setVideos\", res.data)\n          resolve(res.data);\n        })\n        .catch(err => {\n          reject(err);\n        });\n    });\n  },\n  uploadMedia({ commit }, mediaFile) {\n    var form = new FormData();\n    form.append('media', mediaFile);\n    return new Promise((resolve, reject) => {\n      axios\n        .post(constants.apiUrl + '/videoapi/upload_media', form)\n        .then(res => {\n          // commit('selectVideo', res.data.video_url);\n          resolve(res.data.media_url);\n        })\n        .catch(err => {\n          reject(err);\n        });\n    });\n  },\n  publishVideo({ commit }, videoUploadData) {\n    return new Promise((resolve, reject) => {\n      /* const dataObj = {\n        videos\n      } */\n      axios\n        .post(constants.apiUrl + '/videoapi/publish_video', videoUploadData)\n        .then(res => {\n          // commit(\"setVideos\", res.data)\n          // commit('setPublishStatus', true);\n          resolve(res);\n        })\n        .catch(err => {\n          reject(err);\n        });\n    });\n  },\n  getVideoData({ commit }, videoId) {\n    return new Promise((resolve, reject) => {\n      axios\n        .get(constants.apiUrl + '/videoapi/get_saved_video?id=' + videoId)\n        .then(res => {\n          commit('setInitialState');\n          const apiResponse = res.data;\n          commit('SET_VIDEO_ATTR', {\n            key: 'title',\n            value: apiResponse.info.title\n          });\n          commit('setScript', apiResponse.info.script);\n          commit('SET_VIDEO_ATTR', {\n            key: 'srcLang',\n            value: apiResponse.info.language\n          });\n          commit('setTags', apiResponse.tags);\n          commit('SET_VIDEO_ATTR', {\n            key: 'description',\n            value: apiResponse.info.description\n          });\n          commit('SET_VIDEO_ATTR', {\n            key: 'published_id',\n            value: apiResponse.published_id\n          });\n          const sentences = {};\n          const keywords = {};\n          Object.entries(apiResponse.scenes).forEach(([key, value]) => {\n            const sceneNum = parseInt(key);\n            const sceneUrl = value.online_url\n              ? value.online_url\n              : value.uploaded_video;\n            sentences[key] = value.text;\n            keywords[key] = value.keywords;\n            commit('setInitialVideo', {\n              indexs: sceneNum,\n              value: sceneUrl\n            });\n            commit('setStyles', {\n              prop: 'sceneScriptColor',\n              value: value.font_color,\n              sceneNum\n            });\n            commit('setStyles', {\n              prop: 'sceneScriptPosition',\n              value: parseInt(value.position),\n              sceneNum\n            });\n            commit('setStyles', {\n              prop: 'sceneBackgroundColor',\n              value: value.background_color,\n              sceneNum\n            });\n            /* commit('setScriptSceneVideo', {\n              sceneNum: sceneNum + 1,\n              value: sceneUrl\n            }); */\n            commit('setRecordedAudio', {\n              sceneNum,\n              value: value.audio\n            });\n          });\n          commit('setSentences', sentences);\n          commit('setKeywords', keywords);\n          commit('skipSubtitles');\n          commit('skipMusic');\n          resolve(res);\n        })\n        .catch(err => {\n          reject(err);\n        });\n    });\n  },\n  resetState({ commit }) {\n    commit('setInitialState');\n  },\n  postTxData({ commit }, payload) {\n    return new Promise((resolve, reject) => {\n      axios\n        .post(constants.apiUrl + '/transaction/oceanbuy', payload)\n        .then(res => {\n          console.log(res);\n          resolve(res);\n        })\n        .catch(err => {\n          reject(err);\n        });\n    });\n  }\n};\n"]}]}