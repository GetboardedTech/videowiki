{"remainingRequest":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/babel-loader/lib/index.js!/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/src/views/MyVideos.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/src/views/MyVideos.vue","mtime":1617441641271},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport TheHeader from '@/layouts/components/navbar/NavbarDashboard';\nimport VideoCard from \"./dashboard/components/VideoCard\";\nimport axios from \"../axios\";\nimport constants from \"../../constant\";\nexport default {\n  name: 'MyVideos',\n  components: {\n    TheHeader: TheHeader,\n    VideoCard: VideoCard\n  },\n  data: function data() {\n    return {\n      videoList: [],\n      isLoading: false\n    };\n  },\n  computed: {\n    savedVideoList: function savedVideoList() {\n      return this.videoList.filter(function (video) {\n        return video.is_save_later;\n      }).slice().reverse();\n    },\n    publishedVideoList: function publishedVideoList() {\n      return this.videoList.filter(function (video) {\n        return !video.is_save_later;\n      }).slice().reverse();\n    }\n  },\n  mounted: function mounted() {\n    this.getUserVideos();\n  },\n  methods: {\n    getUserVideos: function getUserVideos() {\n      var _this = this;\n\n      /* this.$vs.loading({\n        background: 'transparent',\n        container: '#div-with-loading',\n      }); */\n      axios.get(constants.apiUrl + '/videoapi/user_videos').then(function (res) {\n        _this.videoList = res.data.data;\n      }).catch(function () {\n        _this.$vs.notify({\n          title: 'Error',\n          text: 'Cannot fetch videos',\n          color: 'danger'\n        });\n      }).finally(function () {\n        /* this.$vs.loading.close('#div-with-loading > .con-vs-loading');\n        this.isLoading = false; */\n      });\n    }\n  }\n};",{"version":3,"sources":["MyVideos.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA,OAAA,SAAA,MAAA,6CAAA;AACA,OAAA,SAAA;AACA,OAAA,KAAA;AACA,OAAA,SAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,UADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,SAAA,EAAA,SADA;AAEA,IAAA,SAAA,EAAA;AAFA,GAFA;AAMA,EAAA,IANA,kBAMA;AACA,WAAA;AACA,MAAA,SAAA,EAAA,EADA;AAEA,MAAA,SAAA,EAAA;AAFA,KAAA;AAIA,GAXA;AAYA,EAAA,QAAA,EAAA;AACA,IAAA,cADA,4BACA;AACA,aAAA,KAAA,SAAA,CACA,MADA,CACA,UAAA,KAAA;AAAA,eAAA,KAAA,CAAA,aAAA;AAAA,OADA,EAEA,KAFA,GAGA,OAHA,EAAA;AAIA,KANA;AAOA,IAAA,kBAPA,gCAOA;AACA,aAAA,KAAA,SAAA,CACA,MADA,CACA,UAAA,KAAA;AAAA,eAAA,CAAA,KAAA,CAAA,aAAA;AAAA,OADA,EAEA,KAFA,GAGA,OAHA,EAAA;AAIA;AAZA,GAZA;AA0BA,EAAA,OA1BA,qBA0BA;AACA,SAAA,aAAA;AACA,GA5BA;AA6BA,EAAA,OAAA,EAAA;AACA,IAAA,aADA,2BACA;AAAA;;AACA;AACA;AACA;AACA;AACA,MAAA,KAAA,CACA,GADA,CACA,SAAA,CAAA,MAAA,GAAA,uBADA,EAEA,IAFA,CAEA,UAAA,GAAA,EAAA;AACA,QAAA,KAAA,CAAA,SAAA,GAAA,GAAA,CAAA,IAAA,CAAA,IAAA;AACA,OAJA,EAKA,KALA,CAKA,YAAA;AACA,QAAA,KAAA,CAAA,GAAA,CAAA,MAAA,CAAA;AACA,UAAA,KAAA,EAAA,OADA;AAEA,UAAA,IAAA,EAAA,qBAFA;AAGA,UAAA,KAAA,EAAA;AAHA,SAAA;AAKA,OAXA,EAYA,OAZA,CAYA,YAAA;AACA;AACA;AACA,OAfA;AAgBA;AAtBA;AA7BA,CAAA","sourcesContent":["<template>\n  <div>\n    <TheHeader />\n    <vs-tabs>\n      <vs-tab\n        label=\"Published Videos\"\n        class=\"p-8 vs-con-loading__container\"\n        id=\"div-with-loading\"\n      >\n        <div v-if=\"publishedVideoList.length > 0\" class=\"vx-row\">\n          <VideoCard\n            v-for=\"video in publishedVideoList\"\n            :key=\"video.id\"\n            :prop=\"video\"\n            :user=\"true\"\n          />\n        </div>\n        <div v-else class=\"flex h-72 justify-center items-center flex-wrap\">\n          <h4 class=\"text-danger\">No Published videos</h4>\n        </div>\n      </vs-tab>\n      <vs-tab label=\"Saved Videos\" class=\"p-8\">\n        <div class=\"vx-row\" v-if=\"savedVideoList.length > 0\">\n          <VideoCard\n            v-for=\"video in savedVideoList\"\n            :key=\"video.id\"\n            :prop=\"video\"\n            :user=\"true\"\n          />\n        </div>\n        <div v-else class=\"flex h-72 justify-center items-center flex-wrap\">\n          <h4 class=\"text-danger\">No Saved Videos</h4>\n        </div>\n      </vs-tab>\n    </vs-tabs>\n  </div>\n</template>\n<script>\nimport TheHeader from '@/layouts/components/navbar/NavbarDashboard';\nimport VideoCard from './dashboard/components/VideoCard';\nimport axios from '../axios';\nimport constants from '../../constant';\nexport default {\n  name: 'MyVideos',\n  components: {\n    TheHeader,\n    VideoCard\n  },\n  data() {\n    return {\n      videoList: [],\n      isLoading: false\n    };\n  },\n  computed: {\n    savedVideoList() {\n      return this.videoList\n        .filter(video => video.is_save_later)\n        .slice()\n        .reverse();\n    },\n    publishedVideoList() {\n      return this.videoList\n        .filter(video => !video.is_save_later)\n        .slice()\n        .reverse();\n    }\n  },\n  mounted() {\n    this.getUserVideos();\n  },\n  methods: {\n    getUserVideos() {\n      /* this.$vs.loading({\n        background: 'transparent',\n        container: '#div-with-loading',\n      }); */\n      axios\n        .get(constants.apiUrl + '/videoapi/user_videos')\n        .then(res => {\n          this.videoList = res.data.data;\n        })\n        .catch(() => {\n          this.$vs.notify({\n            title: 'Error',\n            text: 'Cannot fetch videos',\n            color: 'danger'\n          });\n        })\n        .finally(() => {\n          /* this.$vs.loading.close('#div-with-loading > .con-vs-loading');\n          this.isLoading = false; */\n        });\n    }\n  }\n};\n</script>\n<style scoped>\n/*.content {\n  padding-top: 3rem;\n  padding-left: 1.75rem;\n  padding-right: 1.75rem;\n  background: #e5e5e5;\n}*/\n</style>\n"],"sourceRoot":"src/views"}]}