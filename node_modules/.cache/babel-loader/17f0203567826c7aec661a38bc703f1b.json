{"remainingRequest":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/babel-loader/lib/index.js!/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/eslint-loader/index.js??ref--13-0!/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/src/blockchain/OceanMarket.js","dependencies":[{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/src/blockchain/OceanMarket.js","mtime":1617441641267},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n// import { Ocean, DataTokens } from '@oceanprotocol/lib';\n// import { OceanFixedRateExchange } from '@oceanprotocol/lib/dist/node/exchange/FixedRateExchange';\n// import { LoggerInstance, LogLevel } from '@oceanprotocol/lib/dist/node/utils';\nimport store from \"../store/store\";\nvar Ocean = '';\nvar DataTokens = '';\nvar OceanFixedRateExchange = '';\nvar LoggerInstance = '';\nvar LogLevel = '';\nvar Web3 = '';\nvar factory = '';\nvar datatokensTemplate = '';\nvar fixedRateExchangeJSON = '';\nvar fixedRateExchangeAddress = '0xeD1DfC5F3a589CfC4E8B91C1fbfC18FC6699Fbde';\nvar fixedRateExchangeAbi = fixedRateExchangeJSON.abi;\nvar oceanAddress = '0x8967BCF84170c91B0d24D4302C2376283b0B3a07';\n\nfunction loadLibrary() {\n  return _loadLibrary.apply(this, arguments);\n}\n\nfunction _loadLibrary() {\n  _loadLibrary = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n    var obj, logObj;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return import('@oceanprotocol/lib').then(function (module) {\n              var Ocean = module.Ocean,\n                  DataTokens = module.DataTokens;\n              return {\n                Ocean: Ocean,\n                DataTokens: DataTokens\n              };\n            });\n\n          case 2:\n            obj = _context.sent;\n            console.log(obj);\n            Ocean = obj.Ocean;\n            DataTokens = obj.DataTokens;\n            _context.next = 8;\n            return import('@oceanprotocol/lib/dist/node/exchange/FixedRateExchange').then(function (module) {\n              var OceanFixedRateExchange = module.OceanFixedRateExchange;\n              return OceanFixedRateExchange;\n            });\n\n          case 8:\n            OceanFixedRateExchange = _context.sent;\n            _context.next = 11;\n            return import('@oceanprotocol/lib/dist/node/utils').then(function (module) {\n              var LoggerInstance = module.LoggerInstance,\n                  LogLevel = module.LogLevel;\n              return {\n                LoggerInstance: LoggerInstance,\n                LogLevel: LogLevel\n              };\n            });\n\n          case 11:\n            logObj = _context.sent;\n            LoggerInstance = logObj.LoggerInstance;\n            LogLevel = logObj.LogLevel;\n            Web3 = require('web3');\n            factory = require('@oceanprotocol/contracts/artifacts/DTFactory.json');\n            datatokensTemplate = require('@oceanprotocol/contracts/artifacts/DataTokenTemplate.json');\n            fixedRateExchangeJSON = require('@oceanprotocol/contracts/artifacts/FixedRateExchange.json');\n            fixedRateExchangeAbi = fixedRateExchangeJSON.abi;\n\n          case 19:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _loadLibrary.apply(this, arguments);\n}\n\nvar ocean;\nvar web3;\nvar fixedRateExchange;\nvar datatoken;\nvar rate;\nvar did;\n\nfunction connectToOceanMarketPlace(_x) {\n  return _connectToOceanMarketPlace.apply(this, arguments);\n}\n\nfunction _connectToOceanMarketPlace() {\n  _connectToOceanMarketPlace = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(provider) {\n    var config;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return loadLibrary();\n\n          case 2:\n            web3 = new Web3(provider);\n            config = {\n              network: 'rinkeby',\n              metadataCacheUri: 'https://aquarius.rinkeby.oceanprotocol.com',\n              providerUri: 'https://provider.rinkeby.oceanprotocol.com',\n              nodeUri: 'https://rinkeby.infura.io/v3/c5a798dfd7184a27990ed8744003cc61',\n              verbose: LogLevel.Error,\n              web3Provider: web3,\n              factoryAddress: '0x3fd7A00106038Fb5c802c6d63fa7147Fe429E83a',\n              metadataContractAddress: '0xFD8a7b6297153397B7eb4356C47dbd381d58bFF4'\n            };\n            _context2.next = 6;\n            return Ocean.getInstance(config);\n\n          case 6:\n            ocean = _context2.sent;\n\n          case 7:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _connectToOceanMarketPlace.apply(this, arguments);\n}\n\nfunction publishContent(_x2, _x3) {\n  return _publishContent.apply(this, arguments);\n}\n\nfunction _publishContent() {\n  _publishContent = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(author, metadata) {\n    var stepNumber, alice, data, blob, dataTokenAddress, asset, service1, ddo, tx, exchangeId;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            stepNumber = 1;\n            _context3.next = 4;\n            return ocean.accounts.list();\n\n          case 4:\n            alice = _context3.sent[0];\n            console.log({\n              alice: alice,\n              address: alice.getId()\n            });\n            datatoken = new DataTokens(ocean.config.factoryAddress, factory.abi, datatokensTemplate.abi, web3);\n            data = {\n              t: 1,\n              url: ocean.config.metadataCacheUri\n            };\n            blob = JSON.stringify(data);\n            console.log('creating datatoken address');\n            _context3.next = 12;\n            return datatoken.create(blob, alice.getId());\n\n          case 12:\n            dataTokenAddress = _context3.sent;\n            // const dataTokenAddress = \"0x751d4EE1D7C18eE3F74D65f57B9C6110c61F1f40\"\n            console.log(dataTokenAddress); // move to next step\n\n            stepNumber++;\n            store.commit('SET_CURRENT_TRANSACTION_STEP', stepNumber);\n            console.log('created datatoken');\n            asset = {\n              main: {\n                type: 'dataset',\n                name: metadata.title,\n                dateCreated: new Date(Date.now()).toISOString().split('.')[0] + 'Z',\n                author: author,\n                license: 'MIT',\n                files: [{\n                  url: metadata.url,\n                  checksum: 'efb2c764274b745f5fc37f97c6b0e761',\n                  contentLength: '4535431',\n                  contentType: 'text/csv',\n                  encoding: 'UTF-8',\n                  compression: 'zip'\n                }]\n              }\n            };\n            _context3.next = 20;\n            return ocean.assets.createAccessServiceAttributes(alice, 1, new Date(Date.now()).toISOString().split('.')[0] + 'Z', 0);\n\n          case 20:\n            service1 = _context3.sent;\n            _context3.prev = 21;\n            _context3.next = 24;\n            return ocean.assets.create(asset, alice, [service1], dataTokenAddress);\n\n          case 24:\n            ddo = _context3.sent;\n            console.log({\n              DDO: ddo,\n              DID: ddo.id\n            });\n            did = ddo.id;\n            _context3.next = 33;\n            break;\n\n          case 29:\n            _context3.prev = 29;\n            _context3.t0 = _context3[\"catch\"](21);\n            console.log('error at create assets');\n            throw _context3.t0;\n\n          case 33:\n            // move to next step\n            stepNumber++;\n            store.commit('SET_CURRENT_TRANSACTION_STEP', stepNumber);\n            fixedRateExchange = new OceanFixedRateExchange(web3, LoggerInstance, fixedRateExchangeAddress, fixedRateExchangeAbi, oceanAddress, datatoken); // minting\n\n            _context3.next = 38;\n            return datatoken.mint(dataTokenAddress, alice.getId(), '100');\n\n          case 38:\n            // move to next step\n            stepNumber++;\n            store.commit('SET_CURRENT_TRANSACTION_STEP', stepNumber); // Alice allow market place to sell her datatokens\n\n            _context3.next = 42;\n            return datatoken.approve(dataTokenAddress, fixedRateExchangeAddress, // FixedRateExchangeAddress,\n            '50', // marketplaceAllowance\n            alice.getId());\n\n          case 42:\n            // move to next step\n            stepNumber++;\n            store.commit('SET_CURRENT_TRANSACTION_STEP', stepNumber); // await datatoken.allowance(\n            //   dataTokenAddress,\n            //   alice,\n            //   fixedRateExchangeAddress,\n            // )\n\n            rate = '10';\n            _context3.next = 47;\n            return fixedRateExchange.create(dataTokenAddress, rate, alice.getId());\n\n          case 47:\n            tx = _context3.sent;\n            exchangeId = tx.events.ExchangeCreated.returnValues[0];\n            console.log('exchange id: ', exchangeId); // move to next step\n\n            stepNumber++;\n            store.commit('SET_CURRENT_TRANSACTION_STEP', stepNumber);\n            return _context3.abrupt(\"return\", {\n              did: did,\n              exchangeId: exchangeId,\n              dataTokenAddress: dataTokenAddress\n            });\n\n          case 55:\n            _context3.prev = 55;\n            _context3.t1 = _context3[\"catch\"](0);\n            console.log('error catched at OceanMarket.js');\n            throw _context3.t1;\n\n          case 59:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[0, 55], [21, 29]]);\n  }));\n  return _publishContent.apply(this, arguments);\n}\n\nfunction isDownloadable(_x4, _x5) {\n  return _isDownloadable.apply(this, arguments);\n}\n\nfunction _isDownloadable() {\n  _isDownloadable = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(datatokenAddress, accountAddress) {\n    var tokenInstance, res;\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            tokenInstance = new web3.eth.Contract(datatokensTemplate.abi, datatokenAddress);\n            _context4.next = 3;\n            return tokenInstance.methods.balanceOf(accountAddress).call();\n\n          case 3:\n            res = _context4.sent;\n            return _context4.abrupt(\"return\", parseInt(res) > 0);\n\n          case 5:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _isDownloadable.apply(this, arguments);\n}\n\nfunction loadMetadata() {\n  datatoken = new DataTokens(ocean.config.factoryAddress, factory.abi, datatokensTemplate.abi, web3);\n  fixedRateExchange = new OceanFixedRateExchange(web3, LoggerInstance, fixedRateExchangeAddress, fixedRateExchangeAbi, oceanAddress, datatoken);\n}\n\nfunction getPrice(_x6) {\n  return _getPrice.apply(this, arguments);\n}\n\nfunction _getPrice() {\n  _getPrice = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(exchangeId) {\n    var oceanNeeded;\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            loadMetadata();\n            console.log('getPrice function working');\n            _context5.next = 4;\n            return fixedRateExchange.getRate(exchangeId);\n\n          case 4:\n            oceanNeeded = _context5.sent;\n            console.log('ocean Needed: ', oceanNeeded);\n            return _context5.abrupt(\"return\", oceanNeeded);\n\n          case 7:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n  return _getPrice.apply(this, arguments);\n}\n\nfunction buyContent(_x7) {\n  return _buyContent.apply(this, arguments);\n}\n\nfunction _buyContent() {\n  _buyContent = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(exchangeId) {\n    var bob, stepNumber, txId, swapResult;\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            loadMetadata();\n            console.log({\n              Buying: exchangeId\n            });\n            _context6.next = 4;\n            return ocean.accounts.list();\n\n          case 4:\n            bob = _context6.sent[0];\n            stepNumber = 1;\n            _context6.prev = 6;\n            _context6.next = 9;\n            return datatoken.approve(oceanAddress, fixedRateExchangeAddress, '10', bob.getId());\n\n          case 9:\n            txId = _context6.sent;\n            console.log('txId: ', txId); // move to next step\n\n            stepNumber++;\n            store.commit('SET_CURRENT_TRANSACTION_STEP', stepNumber);\n            _context6.next = 15;\n            return fixedRateExchange.buyDT(exchangeId, '1', bob.getId());\n\n          case 15:\n            swapResult = _context6.sent;\n\n            if (!swapResult) {\n              _context6.next = 21;\n              break;\n            }\n\n            // move to next step\n            stepNumber++;\n            store.commit('SET_CURRENT_TRANSACTION_STEP', stepNumber);\n            _context6.next = 22;\n            break;\n\n          case 21:\n            throw new Error({\n              code: -3206,\n              message: 'Null value'\n            });\n\n          case 22:\n            _context6.next = 28;\n            break;\n\n          case 24:\n            _context6.prev = 24;\n            _context6.t0 = _context6[\"catch\"](6);\n            console.log('error catched at OceanMarket.js');\n            throw _context6.t0;\n\n          case 28:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6, null, [[6, 24]]);\n  }));\n  return _buyContent.apply(this, arguments);\n}\n\nfunction downloadContent(_x8, _x9) {\n  return _downloadContent.apply(this, arguments);\n}\n\nfunction _downloadContent() {\n  _downloadContent = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(DID, dta) {\n    var bob, stepNumber, accessService;\n    return regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            _context8.next = 2;\n            return ocean.accounts.list();\n\n          case 2:\n            bob = _context8.sent[0];\n            stepNumber = 1;\n            _context8.prev = 4;\n            _context8.next = 7;\n            return ocean.assets.getServiceByType(DID, 'access');\n\n          case 7:\n            accessService = _context8.sent;\n            console.log(accessService);\n            _context8.next = 11;\n            return ocean.assets.order(DID, accessService.type, bob.getId()).then( /*#__PURE__*/function () {\n              var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(tx) {\n                return regeneratorRuntime.wrap(function _callee7$(_context7) {\n                  while (1) {\n                    switch (_context7.prev = _context7.next) {\n                      case 0:\n                        console.log('tx=>', tx);\n\n                        if (!tx) {\n                          _context7.next = 4;\n                          break;\n                        }\n\n                        _context7.next = 4;\n                        return ocean.assets.download(DID, tx, dta, bob, '');\n\n                      case 4:\n                      case \"end\":\n                        return _context7.stop();\n                    }\n                  }\n                }, _callee7);\n              }));\n\n              return function (_x10) {\n                return _ref.apply(this, arguments);\n              };\n            }());\n\n          case 11:\n            stepNumber++;\n            store.commit('SET_CURRENT_TRANSACTION_STEP', stepNumber);\n            _context8.next = 19;\n            break;\n\n          case 15:\n            _context8.prev = 15;\n            _context8.t0 = _context8[\"catch\"](4);\n            console.log('error in download OceanMarket.js');\n            throw _context8.t0;\n\n          case 19:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8, null, [[4, 15]]);\n  }));\n  return _downloadContent.apply(this, arguments);\n}\n\nexport { connectToOceanMarketPlace, publishContent, buyContent, downloadContent, isDownloadable, getPrice };",{"version":3,"sources":["/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/src/blockchain/OceanMarket.js"],"names":["store","Ocean","DataTokens","OceanFixedRateExchange","LoggerInstance","LogLevel","Web3","factory","datatokensTemplate","fixedRateExchangeJSON","fixedRateExchangeAddress","fixedRateExchangeAbi","abi","oceanAddress","loadLibrary","then","module","obj","console","log","logObj","require","ocean","web3","fixedRateExchange","datatoken","rate","did","connectToOceanMarketPlace","provider","config","network","metadataCacheUri","providerUri","nodeUri","verbose","Error","web3Provider","factoryAddress","metadataContractAddress","getInstance","publishContent","author","metadata","stepNumber","accounts","list","alice","address","getId","data","t","url","blob","JSON","stringify","create","dataTokenAddress","commit","asset","main","type","name","title","dateCreated","Date","now","toISOString","split","license","files","checksum","contentLength","contentType","encoding","compression","assets","createAccessServiceAttributes","service1","ddo","DDO","DID","id","mint","approve","tx","exchangeId","events","ExchangeCreated","returnValues","isDownloadable","datatokenAddress","accountAddress","tokenInstance","eth","Contract","methods","balanceOf","call","res","parseInt","loadMetadata","getPrice","getRate","oceanNeeded","buyContent","Buying","bob","txId","buyDT","swapResult","code","message","downloadContent","dta","getServiceByType","accessService","order","download"],"mappings":"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","sourcesContent":["// import { Ocean, DataTokens } from '@oceanprotocol/lib';\n// import { OceanFixedRateExchange } from '@oceanprotocol/lib/dist/node/exchange/FixedRateExchange';\n// import { LoggerInstance, LogLevel } from '@oceanprotocol/lib/dist/node/utils';\nimport store from '../store/store';\nlet Ocean = '';\nlet DataTokens = '';\nlet OceanFixedRateExchange = '';\nlet LoggerInstance = '';\nlet LogLevel = '';\nlet Web3 = '';\nlet factory = '';\nlet datatokensTemplate = '';\nlet fixedRateExchangeJSON = '';\nconst fixedRateExchangeAddress = '0xeD1DfC5F3a589CfC4E8B91C1fbfC18FC6699Fbde';\nlet fixedRateExchangeAbi = fixedRateExchangeJSON.abi;\nconst oceanAddress = '0x8967BCF84170c91B0d24D4302C2376283b0B3a07';\n\nasync function loadLibrary() {\n  const obj = await import('@oceanprotocol/lib').then(module => {\n    const { Ocean, DataTokens } = module;\n    return { Ocean, DataTokens };\n  });\n  console.log(obj);\n  Ocean = obj.Ocean;\n  DataTokens = obj.DataTokens;\n  OceanFixedRateExchange = await import(\n    '@oceanprotocol/lib/dist/node/exchange/FixedRateExchange'\n  ).then(module => {\n    const { OceanFixedRateExchange } = module;\n    return OceanFixedRateExchange;\n  });\n  const logObj = await import('@oceanprotocol/lib/dist/node/utils').then(\n    module => {\n      const { LoggerInstance, LogLevel } = module;\n      return { LoggerInstance, LogLevel };\n    }\n  );\n  LoggerInstance = logObj.LoggerInstance;\n  LogLevel = logObj.LogLevel;\n  Web3 = require('web3');\n  factory = require('@oceanprotocol/contracts/artifacts/DTFactory.json');\n  datatokensTemplate = require('@oceanprotocol/contracts/artifacts/DataTokenTemplate.json');\n  fixedRateExchangeJSON = require('@oceanprotocol/contracts/artifacts/FixedRateExchange.json');\n  fixedRateExchangeAbi = fixedRateExchangeJSON.abi;\n}\n\nlet ocean;\nlet web3;\nlet fixedRateExchange;\nlet datatoken;\nlet rate;\nlet did;\n\nasync function connectToOceanMarketPlace(provider) {\n  // console.log(DataTokens)\n  await loadLibrary();\n  web3 = new Web3(provider);\n  const config = {\n    network: 'rinkeby',\n    metadataCacheUri: 'https://aquarius.rinkeby.oceanprotocol.com',\n    providerUri: 'https://provider.rinkeby.oceanprotocol.com',\n    nodeUri: 'https://rinkeby.infura.io/v3/c5a798dfd7184a27990ed8744003cc61',\n    verbose: LogLevel.Error,\n    web3Provider: web3,\n    factoryAddress: '0x3fd7A00106038Fb5c802c6d63fa7147Fe429E83a',\n    metadataContractAddress: '0xFD8a7b6297153397B7eb4356C47dbd381d58bFF4'\n  };\n  ocean = await Ocean.getInstance(config);\n}\n\nasync function publishContent(author, metadata) {\n  // await connectToOceanMarketPlace(provider);\n  try {\n    let stepNumber = 1;\n    var alice = (await ocean.accounts.list())[0];\n    console.log({ alice, address: alice.getId() });\n    datatoken = new DataTokens(\n      ocean.config.factoryAddress,\n      factory.abi,\n      datatokensTemplate.abi,\n      web3\n    );\n    const data = { t: 1, url: ocean.config.metadataCacheUri };\n    const blob = JSON.stringify(data);\n    console.log('creating datatoken address');\n    const dataTokenAddress = await datatoken.create(blob, alice.getId());\n    // const dataTokenAddress = \"0x751d4EE1D7C18eE3F74D65f57B9C6110c61F1f40\"\n    console.log(dataTokenAddress);\n    // move to next step\n    stepNumber++;\n    store.commit('SET_CURRENT_TRANSACTION_STEP', stepNumber);\n\n    console.log('created datatoken');\n\n    var asset = {\n      main: {\n        type: 'dataset',\n        name: metadata.title,\n        dateCreated: new Date(Date.now()).toISOString().split('.')[0] + 'Z',\n        author: author,\n        license: 'MIT',\n        files: [\n          {\n            url: metadata.url,\n            checksum: 'efb2c764274b745f5fc37f97c6b0e761',\n            contentLength: '4535431',\n            contentType: 'text/csv',\n            encoding: 'UTF-8',\n            compression: 'zip'\n          }\n        ]\n      }\n    };\n    const service1 = await ocean.assets.createAccessServiceAttributes(\n      alice,\n      1,\n      new Date(Date.now()).toISOString().split('.')[0] + 'Z',\n      0\n    );\n    let ddo;\n    try {\n      ddo = await ocean.assets.create(\n        asset,\n        alice,\n        [service1],\n        dataTokenAddress\n      );\n      console.log({ DDO: ddo, DID: ddo.id });\n      did = ddo.id;\n    } catch (err) {\n      console.log('error at create assets');\n      throw err;\n    }\n    // move to next step\n    stepNumber++;\n    store.commit('SET_CURRENT_TRANSACTION_STEP', stepNumber);\n\n    fixedRateExchange = new OceanFixedRateExchange(\n      web3,\n      LoggerInstance,\n      fixedRateExchangeAddress,\n      fixedRateExchangeAbi,\n      oceanAddress,\n      datatoken\n    );\n    // minting\n    await datatoken.mint(dataTokenAddress, alice.getId(), '100');\n\n    // move to next step\n    stepNumber++;\n    store.commit('SET_CURRENT_TRANSACTION_STEP', stepNumber);\n\n    // Alice allow market place to sell her datatokens\n    await datatoken.approve(\n      dataTokenAddress,\n      fixedRateExchangeAddress, // FixedRateExchangeAddress,\n      '50', // marketplaceAllowance\n      alice.getId()\n    );\n\n    // move to next step\n    stepNumber++;\n    store.commit('SET_CURRENT_TRANSACTION_STEP', stepNumber);\n\n    // await datatoken.allowance(\n    //   dataTokenAddress,\n    //   alice,\n    //   fixedRateExchangeAddress,\n    // )\n\n    rate = '10';\n\n    const tx = await fixedRateExchange.create(\n      dataTokenAddress,\n      rate,\n      alice.getId()\n    );\n    const exchangeId = tx.events.ExchangeCreated.returnValues[0];\n    console.log('exchange id: ', exchangeId);\n    // move to next step\n    stepNumber++;\n    store.commit('SET_CURRENT_TRANSACTION_STEP', stepNumber);\n\n    return { did, exchangeId, dataTokenAddress };\n  } catch (err) {\n    console.log('error catched at OceanMarket.js');\n    throw err;\n  }\n}\nasync function isDownloadable(datatokenAddress, accountAddress) {\n  var tokenInstance = new web3.eth.Contract(\n    datatokensTemplate.abi,\n    datatokenAddress\n  );\n  const res = await tokenInstance.methods.balanceOf(accountAddress).call();\n  return parseInt(res) > 0;\n}\nfunction loadMetadata() {\n  datatoken = new DataTokens(\n    ocean.config.factoryAddress,\n    factory.abi,\n    datatokensTemplate.abi,\n    web3\n  );\n  fixedRateExchange = new OceanFixedRateExchange(\n    web3,\n    LoggerInstance,\n    fixedRateExchangeAddress,\n    fixedRateExchangeAbi,\n    oceanAddress,\n    datatoken\n  );\n}\nasync function getPrice(exchangeId) {\n  loadMetadata();\n  console.log('getPrice function working');\n  var oceanNeeded = await fixedRateExchange.getRate(exchangeId);\n  console.log('ocean Needed: ', oceanNeeded);\n  return oceanNeeded;\n}\nasync function buyContent(exchangeId) {\n  loadMetadata();\n  console.log({ Buying: exchangeId });\n  var bob = (await ocean.accounts.list())[0];\n  let stepNumber = 1;\n  try {\n    const txId = await datatoken.approve(\n      oceanAddress,\n      fixedRateExchangeAddress,\n      '10',\n      bob.getId()\n    );\n    console.log('txId: ', txId);\n    // move to next step\n    stepNumber++;\n    store.commit('SET_CURRENT_TRANSACTION_STEP', stepNumber);\n\n    const swapResult = await fixedRateExchange.buyDT(\n      exchangeId,\n      '1',\n      bob.getId()\n    );\n    if (swapResult) {\n      // move to next step\n      stepNumber++;\n      store.commit('SET_CURRENT_TRANSACTION_STEP', stepNumber);\n    } else {\n      throw new Error({ code: -3206, message: 'Null value' });\n    }\n  } catch (err) {\n    console.log('error catched at OceanMarket.js');\n    throw err;\n  }\n}\nasync function downloadContent(DID, dta) {\n  var bob = (await ocean.accounts.list())[0];\n  let stepNumber = 1;\n  try {\n    const accessService = await ocean.assets.getServiceByType(DID, 'access');\n    console.log(accessService);\n\n    await ocean.assets\n      .order(DID, accessService.type, bob.getId())\n      .then(async tx => {\n        console.log('tx=>', tx);\n        if (tx) {\n          await ocean.assets.download(DID, tx, dta, bob, '');\n        }\n      });\n    stepNumber++;\n    store.commit('SET_CURRENT_TRANSACTION_STEP', stepNumber);\n  } catch (err) {\n    console.log('error in download OceanMarket.js');\n    throw err;\n  }\n}\n\nexport {\n  connectToOceanMarketPlace,\n  publishContent,\n  buyContent,\n  downloadContent,\n  isDownloadable,\n  getPrice\n};\n"]}]}