{"remainingRequest":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/babel-loader/lib/index.js!/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/src/layouts/components/vertical-nav-menu/PanelItems/MusicPanel.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/src/layouts/components/vertical-nav-menu/PanelItems/MusicPanel.vue","mtime":1617441641267},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport VuePerfectScrollbar from 'vue-perfect-scrollbar';\nimport vSelect from 'vue-select';\nimport { ajaxCallMixin } from \"../../../../http/HttpCommon\";\nexport default {\n  name: 'MusicPanel',\n  mixins: [ajaxCallMixin],\n  components: {\n    VuePerfectScrollbar: VuePerfectScrollbar,\n    vSelect: vSelect\n  },\n  data: function data() {\n    return {\n      uploadInProgress: false,\n      settings: {\n        // perfectScrollbar settings\n        maxScrollbarLength: 60,\n        wheelSpeed: 1,\n        swipeEasing: true\n      },\n      selectedGenre: '',\n      options: [{\n        value: 'all',\n        label: 'All'\n      }, {\n        value: 'ambient',\n        label: 'Ambient'\n      }, {\n        value: 'blues',\n        label: 'Blues'\n      }, {\n        value: 'bumpers & stingers',\n        label: 'Bumpers & Stingers'\n      }, {\n        value: 'chill out',\n        label: 'Chill Out'\n      }, {\n        value: 'cinematic',\n        label: 'Cinematic'\n      }, {\n        value: 'classical',\n        label: 'Classical'\n      }, {\n        value: 'corporate',\n        label: 'Corporate'\n      }, {\n        value: 'country',\n        label: 'Country'\n      }, {\n        value: 'electronic',\n        label: 'Electronic'\n      }, {\n        value: 'folk',\n        label: 'Folk'\n      }, {\n        value: 'hip hop',\n        label: 'Hip Hop'\n      }, {\n        value: 'holidays & special events',\n        label: 'Holidays & Special Events'\n      }, {\n        value: 'horror',\n        label: 'Horror'\n      }, {\n        value: 'jazz',\n        label: 'Jazz'\n      }, {\n        value: 'kids and family',\n        label: 'Kids & Family'\n      }, {\n        value: 'pop',\n        label: 'Pop'\n      }, {\n        value: 'religious',\n        label: 'Religious'\n      }, {\n        value: 'rhythm & blues',\n        label: 'Rhythm & Blues'\n      }, {\n        value: 'rock',\n        label: 'Rock'\n      }, {\n        value: 'world',\n        label: 'World'\n      }]\n    };\n  },\n  computed: {\n    audioList: function audioList() {\n      return this.$store.state.studio.audioList;\n    },\n    recordedAudios: function recordedAudios() {\n      return this.$store.state.studio.recordedAudios;\n    },\n    uploadedAudioList: function uploadedAudioList() {\n      return this.$store.state.studio.uploadedAudios;\n    },\n    backgroundMusic: function backgroundMusic() {\n      return this.$store.state.studio.backgroundMusic;\n    },\n    scrollbarTag: function scrollbarTag() {\n      return this.$store.getters.scrollbarTag;\n    }\n  },\n  mounted: function mounted() {\n    this.getMusicList('all');\n  },\n  methods: {\n    getMusicList: function getMusicList(genre) {\n      this.selectedGenre = genre;\n      var url = \"/api/music?genre=\".concat(genre);\n      /* this.$vs.loading({\n        container: `#buy-download`,\n        background: '#fff',\n        color: 'primary',\n        scale: 0.8\n      }); */\n      // this.isLoading = true;\n\n      this.getRequest(url, this.loadAudioList);\n    },\n    loadAudioList: function loadAudioList(apiResponse) {\n      this.$store.commit('studio/setAudios', apiResponse.data);\n    },\n    scrollToScene: function scrollToScene(sceneNumber) {\n      var element = document.getElementById(\"scene_card_\".concat(sceneNumber));\n      var headerOffset = 80;\n      var elementPosition = element.getBoundingClientRect().top;\n      var offsetPosition = elementPosition - headerOffset + window.pageYOffset;\n      window.scrollTo({\n        top: offsetPosition,\n        behavior: 'smooth'\n      });\n    },\n    playAudio: function playAudio(trackId, loaderId) {\n      var audioElement = document.getElementById(trackId);\n      audioElement.currentTime = 0;\n      audioElement.play();\n      this.$vs.loading({\n        container: \"#\".concat(loaderId),\n        type: 'sound',\n        color: '#fff',\n        background: 'transparent',\n        scale: 0.5\n      });\n    },\n    pauseAudio: function pauseAudio(trackId, loaderId) {\n      var audioElement = document.getElementById(trackId);\n      audioElement.pause();\n      this.$vs.loading.close(\"#\".concat(loaderId, \" > .con-vs-loading\"));\n    },\n    callback: function callback(msg) {\n      console.debug('Event: ', msg);\n    },\n    chooseFile: function chooseFile() {\n      document.getElementById(\"audio_file\").click();\n    },\n    uploadFile: function uploadFile(event) {\n      var _this = this;\n\n      var selectedFile = event.target.files[0];\n      this.uploadInProgress = true;\n      this.$vs.loading({\n        background: 'primary',\n        color: '#fff',\n        container: '#upload-with-loading',\n        scale: 0.45\n      });\n      this.$store.dispatch('studio/uploadMedia', selectedFile).then(function (url) {\n        var dataObj = {\n          title: selectedFile.name,\n          url: url\n        };\n\n        _this.$store.commit('studio/setUploadedAudio', dataObj);\n      }).catch(function () {\n        _this.$vs.notify({\n          title: 'Error Occured',\n          text: 'video upload failed',\n          color: 'danger'\n        });\n      }).finally(function () {\n        document.getElementById(\"audio_file\").value = '';\n        _this.uploadInProgress = false;\n\n        _this.$vs.loading.close('#upload-with-loading > .con-vs-loading');\n      });\n    },\n    selectAudio: function selectAudio(a) {\n      this.$store.commit('studio/selectAudio', a);\n    },\n    removeAudio: function removeAudio() {\n      this.$store.commit('studio/clearAudio');\n    },\n    updateComponent: function updateComponent() {\n      this.$forceUpdate();\n    },\n    prepareAllAudios: function prepareAllAudios() {\n      /* this.$store.commit(\n        'studio/setPrepareAllAudios',\n        this.$store.state.studio.preparedScenesVideos\n      ); */\n      this.$store.commit('studio/skipMusic');\n      this.$store.commit('studio/togglePublish');\n    }\n  }\n};",{"version":3,"sources":["MusicPanel.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8NA,OAAA,mBAAA,MAAA,uBAAA;AACA,OAAA,OAAA,MAAA,YAAA;AACA,SAAA,aAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,YADA;AAEA,EAAA,MAAA,EAAA,CAAA,aAAA,CAFA;AAGA,EAAA,UAAA,EAAA;AACA,IAAA,mBAAA,EAAA,mBADA;AAEA,IAAA,OAAA,EAAA;AAFA,GAHA;AAOA,EAAA,IAPA,kBAOA;AACA,WAAA;AACA,MAAA,gBAAA,EAAA,KADA;AAEA,MAAA,QAAA,EAAA;AACA;AACA,QAAA,kBAAA,EAAA,EAFA;AAGA,QAAA,UAAA,EAAA,CAHA;AAIA,QAAA,WAAA,EAAA;AAJA,OAFA;AAQA,MAAA,aAAA,EAAA,EARA;AASA,MAAA,OAAA,EAAA,CACA;AAAA,QAAA,KAAA,EAAA,KAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OADA,EAEA;AAAA,QAAA,KAAA,EAAA,SAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OAFA,EAGA;AAAA,QAAA,KAAA,EAAA,OAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OAHA,EAIA;AAAA,QAAA,KAAA,EAAA,oBAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OAJA,EAKA;AAAA,QAAA,KAAA,EAAA,WAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OALA,EAMA;AAAA,QAAA,KAAA,EAAA,WAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OANA,EAOA;AAAA,QAAA,KAAA,EAAA,WAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OAPA,EAQA;AAAA,QAAA,KAAA,EAAA,WAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OARA,EASA;AAAA,QAAA,KAAA,EAAA,SAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OATA,EAUA;AAAA,QAAA,KAAA,EAAA,YAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OAVA,EAWA;AAAA,QAAA,KAAA,EAAA,MAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OAXA,EAYA;AAAA,QAAA,KAAA,EAAA,SAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OAZA,EAaA;AACA,QAAA,KAAA,EAAA,2BADA;AAEA,QAAA,KAAA,EAAA;AAFA,OAbA,EAiBA;AAAA,QAAA,KAAA,EAAA,QAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OAjBA,EAkBA;AAAA,QAAA,KAAA,EAAA,MAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OAlBA,EAmBA;AAAA,QAAA,KAAA,EAAA,iBAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OAnBA,EAoBA;AAAA,QAAA,KAAA,EAAA,KAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OApBA,EAqBA;AAAA,QAAA,KAAA,EAAA,WAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OArBA,EAsBA;AAAA,QAAA,KAAA,EAAA,gBAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OAtBA,EAuBA;AAAA,QAAA,KAAA,EAAA,MAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OAvBA,EAwBA;AAAA,QAAA,KAAA,EAAA,OAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OAxBA;AATA,KAAA;AAoCA,GA5CA;AA6CA,EAAA,QAAA,EAAA;AACA,IAAA,SADA,uBACA;AACA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,MAAA,CAAA,SAAA;AACA,KAHA;AAIA,IAAA,cAJA,4BAIA;AACA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,MAAA,CAAA,cAAA;AACA,KANA;AAOA,IAAA,iBAPA,+BAOA;AACA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,MAAA,CAAA,cAAA;AACA,KATA;AAUA,IAAA,eAVA,6BAUA;AACA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,MAAA,CAAA,eAAA;AACA,KAZA;AAaA,IAAA,YAbA,0BAaA;AACA,aAAA,KAAA,MAAA,CAAA,OAAA,CAAA,YAAA;AACA;AAfA,GA7CA;AA8DA,EAAA,OA9DA,qBA8DA;AACA,SAAA,YAAA,CAAA,KAAA;AACA,GAhEA;AAiEA,EAAA,OAAA,EAAA;AACA,IAAA,YADA,wBACA,KADA,EACA;AACA,WAAA,aAAA,GAAA,KAAA;AACA,UAAA,GAAA,8BAAA,KAAA,CAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,WAAA,UAAA,CAAA,GAAA,EAAA,KAAA,aAAA;AACA,KAZA;AAaA,IAAA,aAbA,yBAaA,WAbA,EAaA;AACA,WAAA,MAAA,CAAA,MAAA,CAAA,kBAAA,EAAA,WAAA,CAAA,IAAA;AACA,KAfA;AAgBA,IAAA,aAhBA,yBAgBA,WAhBA,EAgBA;AACA,UAAA,OAAA,GAAA,QAAA,CAAA,cAAA,sBAAA,WAAA,EAAA;AACA,UAAA,YAAA,GAAA,EAAA;AACA,UAAA,eAAA,GAAA,OAAA,CAAA,qBAAA,GAAA,GAAA;AACA,UAAA,cAAA,GAAA,eAAA,GAAA,YAAA,GAAA,MAAA,CAAA,WAAA;AACA,MAAA,MAAA,CAAA,QAAA,CAAA;AACA,QAAA,GAAA,EAAA,cADA;AAEA,QAAA,QAAA,EAAA;AAFA,OAAA;AAIA,KAzBA;AA0BA,IAAA,SA1BA,qBA0BA,OA1BA,EA0BA,QA1BA,EA0BA;AACA,UAAA,YAAA,GAAA,QAAA,CAAA,cAAA,CAAA,OAAA,CAAA;AACA,MAAA,YAAA,CAAA,WAAA,GAAA,CAAA;AACA,MAAA,YAAA,CAAA,IAAA;AACA,WAAA,GAAA,CAAA,OAAA,CAAA;AACA,QAAA,SAAA,aAAA,QAAA,CADA;AAEA,QAAA,IAAA,EAAA,OAFA;AAGA,QAAA,KAAA,EAAA,MAHA;AAIA,QAAA,UAAA,EAAA,aAJA;AAKA,QAAA,KAAA,EAAA;AALA,OAAA;AAOA,KArCA;AAsCA,IAAA,UAtCA,sBAsCA,OAtCA,EAsCA,QAtCA,EAsCA;AACA,UAAA,YAAA,GAAA,QAAA,CAAA,cAAA,CAAA,OAAA,CAAA;AACA,MAAA,YAAA,CAAA,KAAA;AACA,WAAA,GAAA,CAAA,OAAA,CAAA,KAAA,YAAA,QAAA;AACA,KA1CA;AA2CA,IAAA,QA3CA,oBA2CA,GA3CA,EA2CA;AACA,MAAA,OAAA,CAAA,KAAA,CAAA,SAAA,EAAA,GAAA;AACA,KA7CA;AA8CA,IAAA,UA9CA,wBA8CA;AACA,MAAA,QAAA,CAAA,cAAA,eAAA,KAAA;AACA,KAhDA;AAiDA,IAAA,UAjDA,sBAiDA,KAjDA,EAiDA;AAAA;;AACA,UAAA,YAAA,GAAA,KAAA,CAAA,MAAA,CAAA,KAAA,CAAA,CAAA,CAAA;AACA,WAAA,gBAAA,GAAA,IAAA;AACA,WAAA,GAAA,CAAA,OAAA,CAAA;AACA,QAAA,UAAA,EAAA,SADA;AAEA,QAAA,KAAA,EAAA,MAFA;AAGA,QAAA,SAAA,EAAA,sBAHA;AAIA,QAAA,KAAA,EAAA;AAJA,OAAA;AAMA,WAAA,MAAA,CACA,QADA,CACA,oBADA,EACA,YADA,EAEA,IAFA,CAEA,UAAA,GAAA,EAAA;AACA,YAAA,OAAA,GAAA;AACA,UAAA,KAAA,EAAA,YAAA,CAAA,IADA;AAEA,UAAA,GAAA,EAAA;AAFA,SAAA;;AAIA,QAAA,KAAA,CAAA,MAAA,CAAA,MAAA,CAAA,yBAAA,EAAA,OAAA;AACA,OARA,EASA,KATA,CASA,YAAA;AACA,QAAA,KAAA,CAAA,GAAA,CAAA,MAAA,CAAA;AACA,UAAA,KAAA,EAAA,eADA;AAEA,UAAA,IAAA,EAAA,qBAFA;AAGA,UAAA,KAAA,EAAA;AAHA,SAAA;AAKA,OAfA,EAgBA,OAhBA,CAgBA,YAAA;AACA,QAAA,QAAA,CAAA,cAAA,eAAA,KAAA,GAAA,EAAA;AACA,QAAA,KAAA,CAAA,gBAAA,GAAA,KAAA;;AACA,QAAA,KAAA,CAAA,GAAA,CAAA,OAAA,CAAA,KAAA,CAAA,wCAAA;AACA,OApBA;AAqBA,KA/EA;AAgFA,IAAA,WAhFA,uBAgFA,CAhFA,EAgFA;AACA,WAAA,MAAA,CAAA,MAAA,CAAA,oBAAA,EAAA,CAAA;AACA,KAlFA;AAmFA,IAAA,WAnFA,yBAmFA;AACA,WAAA,MAAA,CAAA,MAAA,CAAA,mBAAA;AACA,KArFA;AAsFA,IAAA,eAtFA,6BAsFA;AACA,WAAA,YAAA;AACA,KAxFA;AAyFA,IAAA,gBAzFA,8BAyFA;AACA;AACA;AACA;AACA;AACA,WAAA,MAAA,CAAA,MAAA,CAAA,kBAAA;AACA,WAAA,MAAA,CAAA,MAAA,CAAA,sBAAA;AACA;AAhGA;AAjEA,CAAA","sourcesContent":["<template>\n  <div class=\"items-center\" style=\"height: 100%; font-size: 12px\">\n    <div class=\"vx-card__collapsible-content vs-con-loading__container\">\n      <div class=\"vx-card__body\">\n        <div class=\"w-full items-center mb-base\">\n          <h6 class=\"font-semibold mb-base\" style=\"white-space: normal\">\n            You can add Sound to your <br />videos\n          </h6>\n          <vs-button @click=\"prepareAllAudios\">{{\n            $t('studio.sidebarPanel.voice.v1')\n          }}</vs-button>\n        </div>\n        <vs-tabs>\n          <vs-tab label=\"Narration\">\n            <component\n              :is=\"scrollbarTag\"\n              ref=\"verticalNavMenuPs\"\n              class=\"scroll-area scroll-cards\"\n              :settings=\"settings\"\n              :key=\"$vs.rtl\"\n            >\n              <div\n                v-for=\"(s, indexs) in $store.state.studio.scenes\"\n                :key=\"indexs\"\n              >\n                <vx-card\n                  :id=\"'scene_card_panel' + indexs\"\n                  class=\"scene-card items-left mb-2 custom-shadow\"\n                  @click=\"scrollToScene(indexs)\"\n                >\n                  <h5 class=\"mb-3\" style=\"margin-left: 0px\">\n                    Scene {{ parseInt(indexs) + 1 }}\n                  </h5>\n                  <p\n                    class=\"items-left\"\n                    style=\"white-space: normal; overflow: hidden\"\n                  >\n                    {{ s }}\n                  </p>\n                  <ul\n                    v-if=\"recordedAudios[indexs]\"\n                    :class=\"'playlist_' + indexs\"\n                    class=\"recordings mt-2\"\n                    style=\"margin-left: -5%\"\n                  >\n                    <li>\n                      <audio\n                        :src=\"recordedAudios[indexs]\"\n                        type=\"audio/mp3\"\n                        controls\n                        style=\"height:42px\"\n                      >\n                        Your browser does not support the audio element.\n                      </audio>\n                    </li>\n                  </ul>\n                </vx-card>\n              </div>\n            </component>\n          </vs-tab>\n          <vs-tab label=\"Music\">\n            <vx-card\n              class=\"text-white mb-4\"\n              :class=\"backgroundMusic.url ? 'bg-success' : 'bg-danger'\"\n            >\n              <div\n                v-if=\"backgroundMusic.url\"\n                class=\"flex justify-between items-center -m-4 cursor-pointer\"\n                @mouseenter=\"\n                  playAudio('selected_track', 'selected_track_loader')\n                \"\n                @mouseleave=\"\n                  pauseAudio('selected_track', 'selected_track_loader')\n                \"\n              >\n                <div class=\"text-left w-2/3 flex items-center\">\n                  <vs-icon icon=\"audiotrack\" class=\"mr-2\" />\n                  <p class=\"font-semibold truncate\" style=\"white-space: normal\">\n                    {{ backgroundMusic.title }}\n                  </p>\n                </div>\n                <div\n                  class=\"vs-con-loading__container audio-animation\"\n                  :id=\"`selected_track_loader`\"\n                ></div>\n                <vs-icon\n                  title=\"Remove this track\"\n                  icon=\"delete\"\n                  size=\"20px\"\n                  @click.stop=\"removeAudio\"\n                />\n                <audio\n                  class=\"audio-el hidden\"\n                  :id=\"`selected_track`\"\n                  :src=\"backgroundMusic.url\"\n                  type=\"audio/mp3\"\n                ></audio>\n              </div>\n              <div v-else class=\"font-semibold -m-3 flex items-center\">\n                <p>No track selected</p>\n              </div>\n            </vx-card>\n            <div class=\"genre_list_wrapper\">\n              <div class=\"text-left mb-4\">\n                <label for=\"genre_list\">Select Genre</label>\n                <v-select\n                  :options=\"options\"\n                  :reduce=\"label => label.value\"\n                  id=\"genre_list\"\n                  class=\"genre-list\"\n                  :clearable=\"false\"\n                  :value=\"selectedGenre\"\n                  @input=\"getMusicList\"\n                  label=\"label\"\n                ></v-select>\n              </div>\n              <!--div v-if=\"audioList.length === 0\">\n              <p style=\"white-space: normal\" class=\"font-semibold\">\n                Select genre to get music tracks\n              </p>\n            </div-->\n              <div\n                v-if=\"audioList.length > 0\"\n                class=\"scroll-area scroll-default overflow-auto\"\n              >\n                <!--p class=\"mb-3\">Click to add music to the Current Scene</p-->\n                <template v-for=\"(audio, indexa) in audioList\">\n                  <div\n                    title=\"Click to select\"\n                    class=\"flex justify-between mb-2 p-1 cursor-pointer hover:bg-primary hover:text-white\"\n                    @mouseenter=\"\n                      playAudio(`track_${indexa}`, `loader_${indexa}`)\n                    \"\n                    @mouseleave=\"\n                      pauseAudio(`track_${indexa}`, `loader_${indexa}`)\n                    \"\n                    @click=\"selectAudio(audio)\"\n                    :key=\"indexa\"\n                  >\n                    <div class=\"text-left w-2/3 flex items-center\">\n                      <vs-icon icon=\"audiotrack\" class=\"mr-2\" />\n                      <p\n                        class=\"font-semibold truncate\"\n                        style=\"white-space: normal\"\n                      >\n                        {{ audio.title }}\n                      </p>\n                    </div>\n                    <div\n                      class=\"vs-con-loading__container audio-animation\"\n                      :id=\"`loader_${indexa}`\"\n                    ></div>\n                    <audio class=\"audio-el hidden\" :id=\"`track_${indexa}`\">\n                      <source :src=\"audio.url\" type=\"audio/mp3\" />\n                      Your browser does not support the audio element.\n                    </audio>\n                  </div>\n                </template>\n              </div>\n            </div>\n          </vs-tab>\n          <vs-tab label=\"Uploads\">\n            <div class=\"text-center mb-base mt-3\">\n              <input\n                type=\"file\"\n                :id=\"`audio_file`\"\n                @change=\"uploadFile\"\n                class=\"hidden\"\n                accept=\"audio/*\"\n              />\n              <vs-button\n                size=\"medium\"\n                id=\"upload-with-loading\"\n                class=\"vs-con-loading__container\"\n                @click=\"chooseFile\"\n                :disabled=\"uploadInProgress\"\n              >\n                Upload Music Track\n              </vs-button>\n            </div>\n            <div class=\"scroll-area scroll-default overflow-auto\">\n              <template v-for=\"(audio, indexau) in uploadedAudioList\">\n                <div\n                  title=\"Click to select\"\n                  class=\"items-left flex justify-between items-center mb-2 p-1 cursor-pointer hover:bg-primary hover:text-white\"\n                  @mouseenter=\"\n                    playAudio(`u_track_${indexau}`, `u_loader_${indexau}`)\n                  \"\n                  @mouseleave=\"\n                    pauseAudio(`u_track_${indexau}`, `u_loader_${indexau}`)\n                  \"\n                  @click=\"selectAudio(audio)\"\n                  :key=\"indexau\"\n                >\n                  <div class=\"text-left w-2/3 flex items-center\">\n                    <vs-icon icon=\"audiotrack\" class=\"mr-2\" />\n                    <p\n                      class=\"font-semibold truncate\"\n                      style=\"white-space: normal\"\n                    >\n                      {{ audio.title }}\n                    </p>\n                  </div>\n                  <div\n                    class=\"vs-con-loading__container audio-animation\"\n                    :id=\"`u_loader_${indexau}`\"\n                  ></div>\n                  <audio class=\"audio-el hidden\" :id=\"`u_track_${indexau}`\">\n                    <source :src=\"audio.url\" type=\"audio/mp3\" />\n                    Your browser does not support the audio element.\n                  </audio>\n                </div>\n              </template>\n            </div>\n          </vs-tab>\n        </vs-tabs>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport VuePerfectScrollbar from 'vue-perfect-scrollbar';\nimport vSelect from 'vue-select';\nimport { ajaxCallMixin } from '../../../../http/HttpCommon';\nexport default {\n  name: 'MusicPanel',\n  mixins: [ajaxCallMixin],\n  components: {\n    VuePerfectScrollbar,\n    vSelect\n  },\n  data() {\n    return {\n      uploadInProgress: false,\n      settings: {\n        // perfectScrollbar settings\n        maxScrollbarLength: 60,\n        wheelSpeed: 1,\n        swipeEasing: true\n      },\n      selectedGenre: '',\n      options: [\n        { value: 'all', label: 'All' },\n        { value: 'ambient', label: 'Ambient' },\n        { value: 'blues', label: 'Blues' },\n        { value: 'bumpers & stingers', label: 'Bumpers & Stingers' },\n        { value: 'chill out', label: 'Chill Out' },\n        { value: 'cinematic', label: 'Cinematic' },\n        { value: 'classical', label: 'Classical' },\n        { value: 'corporate', label: 'Corporate' },\n        { value: 'country', label: 'Country' },\n        { value: 'electronic', label: 'Electronic' },\n        { value: 'folk', label: 'Folk' },\n        { value: 'hip hop', label: 'Hip Hop' },\n        {\n          value: 'holidays & special events',\n          label: 'Holidays & Special Events'\n        },\n        { value: 'horror', label: 'Horror' },\n        { value: 'jazz', label: 'Jazz' },\n        { value: 'kids and family', label: 'Kids & Family' },\n        { value: 'pop', label: 'Pop' },\n        { value: 'religious', label: 'Religious' },\n        { value: 'rhythm & blues', label: 'Rhythm & Blues' },\n        { value: 'rock', label: 'Rock' },\n        { value: 'world', label: 'World' }\n      ]\n    };\n  },\n  computed: {\n    audioList() {\n      return this.$store.state.studio.audioList;\n    },\n    recordedAudios() {\n      return this.$store.state.studio.recordedAudios;\n    },\n    uploadedAudioList() {\n      return this.$store.state.studio.uploadedAudios;\n    },\n    backgroundMusic() {\n      return this.$store.state.studio.backgroundMusic;\n    },\n    scrollbarTag() {\n      return this.$store.getters.scrollbarTag;\n    }\n  },\n  mounted() {\n    this.getMusicList('all');\n  },\n  methods: {\n    getMusicList(genre) {\n      this.selectedGenre = genre;\n      const url = `/api/music?genre=${genre}`;\n      /* this.$vs.loading({\n        container: `#buy-download`,\n        background: '#fff',\n        color: 'primary',\n        scale: 0.8\n      }); */\n      // this.isLoading = true;\n      this.getRequest(url, this.loadAudioList);\n    },\n    loadAudioList(apiResponse) {\n      this.$store.commit('studio/setAudios', apiResponse.data);\n    },\n    scrollToScene(sceneNumber) {\n      var element = document.getElementById(`scene_card_${sceneNumber}`);\n      const headerOffset = 80;\n      var elementPosition = element.getBoundingClientRect().top;\n      var offsetPosition = elementPosition - headerOffset + window.pageYOffset;\n      window.scrollTo({\n        top: offsetPosition,\n        behavior: 'smooth'\n      });\n    },\n    playAudio(trackId, loaderId) {\n      const audioElement = document.getElementById(trackId);\n      audioElement.currentTime = 0;\n      audioElement.play();\n      this.$vs.loading({\n        container: `#${loaderId}`,\n        type: 'sound',\n        color: '#fff',\n        background: 'transparent',\n        scale: 0.5\n      });\n    },\n    pauseAudio(trackId, loaderId) {\n      const audioElement = document.getElementById(trackId);\n      audioElement.pause();\n      this.$vs.loading.close(`#${loaderId} > .con-vs-loading`);\n    },\n    callback(msg) {\n      console.debug('Event: ', msg);\n    },\n    chooseFile() {\n      document.getElementById(`audio_file`).click();\n    },\n    uploadFile(event) {\n      const selectedFile = event.target.files[0];\n      this.uploadInProgress = true;\n      this.$vs.loading({\n        background: 'primary',\n        color: '#fff',\n        container: '#upload-with-loading',\n        scale: 0.45\n      });\n      this.$store\n        .dispatch('studio/uploadMedia', selectedFile)\n        .then(url => {\n          const dataObj = {\n            title: selectedFile.name,\n            url: url\n          };\n          this.$store.commit('studio/setUploadedAudio', dataObj);\n        })\n        .catch(() => {\n          this.$vs.notify({\n            title: 'Error Occured',\n            text: 'video upload failed',\n            color: 'danger'\n          });\n        })\n        .finally(() => {\n          document.getElementById(`audio_file`).value = '';\n          this.uploadInProgress = false;\n          this.$vs.loading.close('#upload-with-loading > .con-vs-loading');\n        });\n    },\n    selectAudio(a) {\n      this.$store.commit('studio/selectAudio', a);\n    },\n    removeAudio() {\n      this.$store.commit('studio/clearAudio');\n    },\n    updateComponent() {\n      this.$forceUpdate();\n    },\n    prepareAllAudios() {\n      /* this.$store.commit(\n        'studio/setPrepareAllAudios',\n        this.$store.state.studio.preparedScenesVideos\n      ); */\n      this.$store.commit('studio/skipMusic');\n      this.$store.commit('studio/togglePublish');\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.items-left {\n  text-align: left;\n  text-align: -moz-left;\n  text-align: -webkit-left;\n}\n.scroll-default {\n  height: 245px;\n}\nul.recordings {\n  li {\n    display: flex;\n  }\n}\n.items-center {\n  text-align: center;\n  text-align: -moz-center;\n  text-align: -webkit-center;\n}\n.custom-shadow {\n  box-shadow: 0px 4px 10px 0px rgba(0, 0, 0, 0.1) !important;\n}\n.audio-animation {\n  height: 30px;\n  width: 30px;\n}\n.scroll-area {\n  position: relative;\n  width: 100%;\n}\n.scroll-cards {\n  height: 60vh;\n}\n.scene-card {\n  cursor: pointer;\n}\n.genre_list_wrapper {\n  height: 330px;\n}\n</style>\n<style>\n.genre-list .vs__dropdown-menu {\n  max-height: 200px !important;\n}\n</style>\n"],"sourceRoot":"src/layouts/components/vertical-nav-menu/PanelItems"}]}