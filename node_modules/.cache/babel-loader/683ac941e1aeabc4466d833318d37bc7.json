{"remainingRequest":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/babel-loader/lib/index.js!/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/src/views/dashboard/Dashboard.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/src/views/dashboard/Dashboard.vue","mtime":1617441641275},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport TheHeader from '@/layouts/components/navbar/NavbarDashboard';\nimport Transaction from '@/views/components/Transaction/Transaction.vue';\nimport VideoCard from \"./components/VideoCard\";\nimport { ajaxCallMixin } from \"../../http/HttpCommon\";\nexport default {\n  name: 'Dashboard',\n  mixins: [ajaxCallMixin],\n  components: {\n    TheHeader: TheHeader,\n    VideoCard: VideoCard,\n    Transaction: Transaction\n  },\n  data: function data() {\n    return {\n      videoList: [],\n      isLoading: false,\n      selectedVideo: {},\n      oceanRequired: 0,\n      showAssetModal: false,\n      videoTxData: {},\n      isDownloadable: false,\n      showTransactionModal: false,\n      txType: 'Buy',\n      currentTxPhase: 'Processing'\n    };\n  },\n  computed: {\n    reversedVideoList: function reversedVideoList() {\n      return this.videoList.slice().reverse();\n    },\n    isWalletConnected: function isWalletConnected() {\n      return this.$store.state.isWalletConnected;\n    },\n    accountAddress: function accountAddress() {\n      return this.$store.state.accountAddress;\n    }\n  },\n  mounted: function mounted() {\n    this.getVideoList();\n    this.$refs.custom_modal.$el.childNodes[1].childNodes[0].style.display = 'none';\n    this.$refs.custom_modal.$el.childNodes[1].style.width = '400px';\n  },\n  methods: {\n    getVideoList: function getVideoList() {\n      var url = '/videoapi/home_videos';\n      this.$vs.loading({\n        background: 'transparent',\n        container: '#div-with-loading'\n      });\n      this.isLoading = true;\n      this.getRequest(url, this.handleResponse);\n    },\n    handleResponse: function handleResponse(apiResponse) {\n      this.$vs.loading.close('#div-with-loading > .con-vs-loading');\n      this.isLoading = false;\n      this.videoList = apiResponse.data;\n    },\n    detailView: function detailView(selectedVideo) {\n      if (selectedVideo.paid) {\n        this.showAssetModal = true;\n        this.selectedVideo = selectedVideo;\n\n        if (this.isWalletConnected) {\n          this.getVideoTxData();\n        }\n      } else {\n        var route = this.$router.resolve({\n          name: 'Video View',\n          params: {\n            slug: selectedVideo.id\n          },\n          query: {\n            url: selectedVideo.video\n          }\n        });\n        window.open(route.href, '_blank');\n      }\n    },\n    buyContent: function () {\n      var _buyContent = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.showAssetModal = false;\n                this.txType = 'Buy';\n                this.$store.commit('SET_CURRENT_TRANSACTION_STEP', 1);\n                this.showTransactionModal = true;\n                this.currentTxPhase = 'Processing';\n                _context.prev = 5;\n                _context.next = 8;\n                return this.$store.dispatch('initiateBuy', this.videoTxData.exchange_key);\n\n              case 8:\n                _context.next = 10;\n                return this.$store.dispatch('getDownloadStatus', {\n                  dataTokenAddress: this.videoTxData.dataToken,\n                  accountAddress: this.accountAddress\n                });\n\n              case 10:\n                this.isDownloadable = _context.sent;\n                this.showTransactionModal = false; // this.detailView(this.selectedVideo);\n\n                _context.next = 17;\n                break;\n\n              case 14:\n                _context.prev = 14;\n                _context.t0 = _context[\"catch\"](5);\n                if (_context.t0.code === 4001) this.currentTxPhase = 'Rejected';else this.currentTxPhase = 'Failed';\n\n              case 17:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[5, 14]]);\n      }));\n\n      function buyContent() {\n        return _buyContent.apply(this, arguments);\n      }\n\n      return buyContent;\n    }(),\n    downloadAsset: function () {\n      var _downloadAsset = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var _this = this;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.showAssetModal = false;\n                this.txType = 'Download';\n                this.$store.commit('SET_CURRENT_TRANSACTION_STEP', 1);\n                this.showTransactionModal = true;\n                this.currentTxPhase = 'Processing';\n                _context2.prev = 5;\n                _context2.next = 8;\n                return this.$store.dispatch('startDownload', {\n                  did: this.videoTxData.dod,\n                  dta: this.videoTxData.dataToken\n                });\n\n              case 8:\n                setTimeout(function () {\n                  return _this.showTransactionModal = false;\n                }, 2000);\n                _context2.next = 14;\n                break;\n\n              case 11:\n                _context2.prev = 11;\n                _context2.t0 = _context2[\"catch\"](5);\n                if (_context2.t0.code === 4001) this.currentTxPhase = 'Rejected';else this.currentTxPhase = 'Failed';\n\n              case 14:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[5, 11]]);\n      }));\n\n      function downloadAsset() {\n        return _downloadAsset.apply(this, arguments);\n      }\n\n      return downloadAsset;\n    }(),\n    getVideoTxData: function getVideoTxData() {\n      var url = \"/transaction/oceanbuy?video_id=\".concat(this.selectedVideo.id);\n      this.$vs.loading({\n        container: \"#buy-download\",\n        background: '#fff',\n        color: 'primary',\n        scale: 0.8\n      }); // this.isLoading = true;\n\n      this.getRequest(url, this.callBackVideoTxData);\n    },\n    callBackVideoTxData: function () {\n      var _callBackVideoTxData = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(apiResponse) {\n        var price;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                // this.isLoading = false;\n                this.videoTxData = apiResponse.data;\n                _context3.next = 3;\n                return this.$store.dispatch('getAssetPrice', this.videoTxData.exchange_key);\n\n              case 3:\n                price = _context3.sent;\n                _context3.next = 6;\n                return this.$store.dispatch('getDownloadStatus', {\n                  dataTokenAddress: this.videoTxData.dataToken,\n                  accountAddress: this.accountAddress\n                });\n\n              case 6:\n                this.isDownloadable = _context3.sent;\n                this.oceanRequired = price;\n                this.$vs.loading.close(\"#buy-download > .con-vs-loading\");\n\n              case 9:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function callBackVideoTxData(_x) {\n        return _callBackVideoTxData.apply(this, arguments);\n      }\n\n      return callBackVideoTxData;\n    }()\n  }\n};",{"version":3,"sources":["Dashboard.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <TheHeader />\n    <div\n      class=\"vs-con-loading__container\"\n      id=\"div-with-loading\"\n      :class=\"{ 'h-72': isLoading }\"\n    ></div>\n    <div v-if=\"!isLoading\">\n      <div class=\"vx-row p-8\" v-if=\"reversedVideoList.length > 0\">\n        <VideoCard\n          v-for=\"video in reversedVideoList\"\n          :key=\"video.id\"\n          :prop=\"video\"\n          :user=\"false\"\n          @click.native=\"detailView(video)\"\n        />\n      </div>\n      <div v-else class=\"flex h-72 justify-center items-center flex-wrap\">\n        <h4 class=\"text-danger\">No videos published yet</h4>\n      </div>\n    </div>\n    <vs-popup ref=\"custom_modal\" :active.sync=\"showAssetModal\">\n      <div class=\"flex items-start -m-5\">\n        <div class=\"p-5\">\n          <img src=\"@/assets/images/pages/mp4.svg\" />\n        </div>\n        <div class=\"p-5\">\n          <div class=\"mb-2\">\n            <h4>{{ selectedVideo.title }}</h4>\n          </div>\n          <div>\n            <div class=\"text-2xl\" v-if=\"!isWalletConnected\">\n              Connect Wallet !\n            </div>\n            <div v-else class=\"vs-con-loading__container\" id=\"buy-download\">\n              <div v-if=\"!isDownloadable\">\n                <div class=\"mb-2\">\n                  <b>{{ oceanRequired }}</b> OCEAN\n                </div>\n                <vs-button\n                  type=\"filled\"\n                  class=\"mb-2 font-semibold\"\n                  @click=\"buyContent\"\n                  >Buy</vs-button\n                >\n              </div>\n              <vs-button\n                v-else\n                type=\"filled\"\n                class=\"font-semibold\"\n                @click=\"downloadAsset\"\n                >Download</vs-button\n              >\n            </div>\n          </div>\n        </div>\n      </div>\n      <!--vs-divider /-->\n    </vs-popup>\n    <Transaction\n      :show=\"showTransactionModal\"\n      :transactionType=\"txType\"\n      :transactionPhase=\"currentTxPhase\"\n      @close=\"showTransactionModal = false\"\n      @retry=\"txType === 'Buy' ? buyContent() : downloadAsset()\"\n    />\n  </div>\n</template>\n<script>\nimport TheHeader from '@/layouts/components/navbar/NavbarDashboard';\nimport Transaction from '@/views/components/Transaction/Transaction.vue';\nimport VideoCard from './components/VideoCard';\nimport { ajaxCallMixin } from '../../http/HttpCommon';\nexport default {\n  name: 'Dashboard',\n  mixins: [ajaxCallMixin],\n  components: {\n    TheHeader,\n    VideoCard,\n    Transaction,\n  },\n  data() {\n    return {\n      videoList: [],\n      isLoading: false,\n      selectedVideo: {},\n      oceanRequired: 0,\n      showAssetModal: false,\n      videoTxData: {},\n      isDownloadable: false,\n      showTransactionModal: false,\n      txType: 'Buy',\n      currentTxPhase: 'Processing',\n    };\n  },\n  computed: {\n    reversedVideoList() {\n      return this.videoList.slice().reverse();\n    },\n    isWalletConnected() {\n      return this.$store.state.isWalletConnected;\n    },\n    accountAddress() {\n      return this.$store.state.accountAddress;\n    },\n  },\n  mounted() {\n    this.getVideoList();\n    this.$refs.custom_modal.$el.childNodes[1].childNodes[0].style.display =\n      'none';\n    this.$refs.custom_modal.$el.childNodes[1].style.width = '400px';\n  },\n  methods: {\n    getVideoList() {\n      const url = '/videoapi/home_videos';\n      this.$vs.loading({\n        background: 'transparent',\n        container: '#div-with-loading',\n      });\n      this.isLoading = true;\n      this.getRequest(url, this.handleResponse);\n    },\n    handleResponse(apiResponse) {\n      this.$vs.loading.close('#div-with-loading > .con-vs-loading');\n      this.isLoading = false;\n      this.videoList = apiResponse.data;\n    },\n    detailView(selectedVideo) {\n      if (selectedVideo.paid) {\n        this.showAssetModal = true;\n        this.selectedVideo = selectedVideo;\n        if (this.isWalletConnected) {\n          this.getVideoTxData();\n        }\n      } else {\n        const route = this.$router.resolve({\n          name: 'Video View',\n          params: { slug: selectedVideo.id },\n          query: { url: selectedVideo.video },\n        });\n        window.open(route.href, '_blank');\n      }\n    },\n    async buyContent() {\n      this.showAssetModal = false;\n      this.txType = 'Buy';\n      this.$store.commit('SET_CURRENT_TRANSACTION_STEP', 1);\n      this.showTransactionModal = true;\n      this.currentTxPhase = 'Processing';\n      try {\n        await this.$store.dispatch(\n          'initiateBuy',\n          this.videoTxData.exchange_key\n        );\n        this.isDownloadable = await this.$store.dispatch('getDownloadStatus', {\n          dataTokenAddress: this.videoTxData.dataToken,\n          accountAddress: this.accountAddress,\n        });\n        this.showTransactionModal = false;\n        // this.detailView(this.selectedVideo);\n      } catch (error) {\n        if (error.code === 4001) this.currentTxPhase = 'Rejected';\n        else this.currentTxPhase = 'Failed';\n      }\n    },\n    async downloadAsset() {\n      this.showAssetModal = false;\n      this.txType = 'Download';\n      this.$store.commit('SET_CURRENT_TRANSACTION_STEP', 1);\n      this.showTransactionModal = true;\n      this.currentTxPhase = 'Processing';\n      try {\n        await this.$store.dispatch('startDownload', {\n          did: this.videoTxData.dod,\n          dta: this.videoTxData.dataToken,\n        });\n        setTimeout(() => (this.showTransactionModal = false), 2000);\n      } catch (error) {\n        if (error.code === 4001) this.currentTxPhase = 'Rejected';\n        else this.currentTxPhase = 'Failed';\n      }\n    },\n    getVideoTxData() {\n      const url = `/transaction/oceanbuy?video_id=${this.selectedVideo.id}`;\n      this.$vs.loading({\n        container: `#buy-download`,\n        background: '#fff',\n        color: 'primary',\n        scale: 0.8,\n      });\n      // this.isLoading = true;\n      this.getRequest(url, this.callBackVideoTxData);\n    },\n    async callBackVideoTxData(apiResponse) {\n      // this.isLoading = false;\n      this.videoTxData = apiResponse.data;\n      const price = await this.$store.dispatch(\n        'getAssetPrice',\n        this.videoTxData.exchange_key\n      );\n      this.isDownloadable = await this.$store.dispatch('getDownloadStatus', {\n        dataTokenAddress: this.videoTxData.dataToken,\n        accountAddress: this.accountAddress,\n      });\n      this.oceanRequired = price;\n      this.$vs.loading.close(`#buy-download > .con-vs-loading`);\n    },\n  },\n};\n</script>\n<style scoped>\n/*.content {\n  padding-top: 3rem;\n  padding-left: 1.75rem;\n  padding-right: 1.75rem;\n  background: #e5e5e5;\n}*/\n</style>\n"],"sourceRoot":"src/views/dashboard"}]}