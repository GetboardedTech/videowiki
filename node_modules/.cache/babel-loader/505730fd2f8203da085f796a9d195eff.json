{"remainingRequest":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/babel-loader/lib/index.js!/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/src/components/vx-card/VxCard.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/src/components/vx-card/VxCard.vue","mtime":1617441534121},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Prism from 'vue-prism-component';\nimport _color from '@/assets/utils/color.js';\nexport default {\n  name: 'vx-card',\n  props: {\n    title: String,\n    subtitle: String,\n    actionButtons: {\n      type: Boolean,\n      default: false\n    },\n    actionButtonsColor: {\n      type: String,\n      default: 'success'\n    },\n    codeToggler: {\n      type: Boolean,\n      default: false\n    },\n    noShadow: {\n      default: false,\n      type: Boolean\n    },\n    noRadius: {\n      default: false,\n      type: Boolean\n    },\n    cardBorder: {\n      default: false,\n      type: Boolean\n    },\n    codeLanguage: {\n      default: 'markup',\n      type: String\n    },\n    collapseAction: {\n      default: false,\n      type: Boolean\n    },\n    refreshContentAction: {\n      default: false,\n      type: Boolean\n    },\n    removeCardAction: {\n      default: false,\n      type: Boolean\n    },\n    headerBackground: {\n      default: '',\n      type: String\n    },\n    // bodyBackground: {\n    //   default: '',\n    //   type: String\n    // },\n    // headerbackground: {\n    //   default: '',\n    //   type: String\n    // },\n    cardBackground: {\n      default: '',\n      type: String\n    },\n    contentColor: {\n      default: '',\n      type: String\n    },\n    titleColor: {\n      default: '',\n      type: String\n    },\n    subtitleColor: {\n      default: '#b8c2cc',\n      type: String\n    }\n  },\n  data: function data() {\n    return {\n      isContentCollapsed: false,\n      showCode: false,\n      maxHeight: null,\n      cardMaxHeight: null,\n      codeContainerMaxHeight: '0px',\n      tempHidden: false\n    };\n  },\n  computed: {\n    hasAction: function hasAction() {\n      return this.$slots.actions || this.actionButtons || this.collapseAction || this.refreshContentAction || this.removeCardAction || this.codeToggler;\n    },\n    hasHeader: function hasHeader() {\n      return this.hasAction || this.title || this.subtitle;\n    },\n    StyleItems: function StyleItems() {\n      return {\n        maxHeight: this.maxHeight\n      };\n    },\n    cardStyles: function cardStyles() {\n      var obj = {\n        maxHeight: this.cardMaxHeight\n      };\n      if (!_color.isColor(this.cardBackground)) obj.background = _color.getColor(this.cardBackground);\n      if (!_color.isColor(this.contentColor)) obj.color = _color.getColor(this.contentColor);\n      return obj;\n    },\n    codeContainerStyles: function codeContainerStyles() {\n      return {\n        maxHeight: this.codeContainerMaxHeight\n      };\n    },\n    cardClasses: function cardClasses() {\n      var str = ''; // Add bg class\n\n      if (_color.isColor(this.cardBackground)) {\n        str += \" bg-\".concat(this.cardBackground);\n      } // add content color\n\n\n      if (_color.isColor(this.contentColor)) {\n        str += \" text-\".concat(this.contentColor);\n      }\n\n      return str.trim();\n    },\n    titleStyles: function titleStyles() {\n      return {\n        color: _color.getColor(this.titleColor)\n      };\n    },\n    titleClasses: function titleClasses() {\n      var str = ''; // add content color\n\n      if (_color.isColor(this.titleColor)) {\n        str += \" text-\".concat(this.titleColor);\n      }\n\n      return str.trim();\n    },\n    subtitleStyles: function subtitleStyles() {\n      var obj = {};\n      if (!_color.isColor(this.subtitleColor)) obj.color = _color.getColor(this.subtitleColor);\n      return obj;\n    },\n    subtitleClasses: function subtitleClasses() {\n      var str = ''; // add content color\n\n      if (_color.isColor(this.subtitleColor)) {\n        str += \" text-\".concat(this.subtitleColor);\n      }\n\n      return str.trim();\n    }\n  },\n  methods: {\n    toggleContent: function toggleContent() {\n      var _this = this;\n\n      this.$refs.content.style.overflow = 'hidden';\n      var scrollHeight = this.$refs.content.scrollHeight;\n\n      if (this.maxHeight == '1.5rem') {\n        this.maxHeight = \"\".concat(scrollHeight, \"px\");\n        setTimeout(function () {\n          _this.maxHeight = 'none';\n          _this.$refs.content.style.overflow = null;\n        }, 300);\n      } else {\n        this.maxHeight = \"\".concat(scrollHeight, \"px\");\n        setTimeout(function () {\n          _this.maxHeight = '1.5rem';\n          _this.$refs.content.style.overflow = null;\n        }, 50);\n      }\n\n      this.isContentCollapsed = !this.isContentCollapsed;\n      this.$emit('toggleCollapse', this.isContentCollapsed);\n    },\n    refreshcard: function refreshcard() {\n      this.$vs.loading({\n        container: this.$refs.content,\n        scale: 0.5\n      });\n      this.tempHidden = true;\n      this.$emit('refresh', this);\n    },\n    removeRefreshAnimation: function removeRefreshAnimation() {\n      var _this2 = this;\n\n      var time = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 100;\n      setTimeout(function () {\n        _this2.$vs.loading.close(_this2.$refs.content);\n\n        _this2.tempHidden = false;\n      }, time);\n    },\n    removeCard: function removeCard() {\n      var _this3 = this;\n\n      var scrollHeight = this.$refs.card.scrollHeight;\n      this.cardMaxHeight = \"\".concat(scrollHeight, \"px\");\n      this.$el.style.overflow = 'hidden';\n      setTimeout(function () {\n        _this3.cardMaxHeight = '0px';\n      }, 50);\n      this.$emit('remove');\n    },\n    toggleCode: function toggleCode() {\n      var _this4 = this;\n\n      this.tempHidden = true;\n      this.showCode = !this.showCode;\n      var scrollHeight = this.$refs.codeContainer.scrollHeight;\n\n      if (this.codeContainerMaxHeight == '0px') {\n        this.codeContainerMaxHeight = \"\".concat(scrollHeight, \"px\");\n        setTimeout(function () {\n          _this4.codeContainerMaxHeight = 'none';\n          _this4.tempHidden = false;\n        }, 300);\n      } else {\n        this.codeContainerMaxHeight = \"\".concat(scrollHeight, \"px\");\n        setTimeout(function () {\n          _this4.codeContainerMaxHeight = '0px';\n          _this4.tempHidden = false;\n        }, 150);\n      }\n    }\n  },\n  components: {\n    Prism: Prism\n  }\n};",{"version":3,"sources":["VxCard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkIA,OAAA,KAAA,MAAA,qBAAA;AACA,OAAA,MAAA,MAAA,yBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,SADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,EAAA,MADA;AAEA,IAAA,QAAA,EAAA,MAFA;AAGA,IAAA,aAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAHA;AAOA,IAAA,kBAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAPA;AAWA,IAAA,WAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAXA;AAeA,IAAA,QAAA,EAAA;AACA,MAAA,OAAA,EAAA,KADA;AAEA,MAAA,IAAA,EAAA;AAFA,KAfA;AAmBA,IAAA,QAAA,EAAA;AACA,MAAA,OAAA,EAAA,KADA;AAEA,MAAA,IAAA,EAAA;AAFA,KAnBA;AAuBA,IAAA,UAAA,EAAA;AACA,MAAA,OAAA,EAAA,KADA;AAEA,MAAA,IAAA,EAAA;AAFA,KAvBA;AA2BA,IAAA,YAAA,EAAA;AACA,MAAA,OAAA,EAAA,QADA;AAEA,MAAA,IAAA,EAAA;AAFA,KA3BA;AA+BA,IAAA,cAAA,EAAA;AACA,MAAA,OAAA,EAAA,KADA;AAEA,MAAA,IAAA,EAAA;AAFA,KA/BA;AAmCA,IAAA,oBAAA,EAAA;AACA,MAAA,OAAA,EAAA,KADA;AAEA,MAAA,IAAA,EAAA;AAFA,KAnCA;AAuCA,IAAA,gBAAA,EAAA;AACA,MAAA,OAAA,EAAA,KADA;AAEA,MAAA,IAAA,EAAA;AAFA,KAvCA;AA2CA,IAAA,gBAAA,EAAA;AACA,MAAA,OAAA,EAAA,EADA;AAEA,MAAA,IAAA,EAAA;AAFA,KA3CA;AA+CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAA,cAAA,EAAA;AACA,MAAA,OAAA,EAAA,EADA;AAEA,MAAA,IAAA,EAAA;AAFA,KAvDA;AA2DA,IAAA,YAAA,EAAA;AACA,MAAA,OAAA,EAAA,EADA;AAEA,MAAA,IAAA,EAAA;AAFA,KA3DA;AA+DA,IAAA,UAAA,EAAA;AACA,MAAA,OAAA,EAAA,EADA;AAEA,MAAA,IAAA,EAAA;AAFA,KA/DA;AAmEA,IAAA,aAAA,EAAA;AACA,MAAA,OAAA,EAAA,SADA;AAEA,MAAA,IAAA,EAAA;AAFA;AAnEA,GAFA;AA0EA,EAAA,IA1EA,kBA0EA;AACA,WAAA;AACA,MAAA,kBAAA,EAAA,KADA;AAEA,MAAA,QAAA,EAAA,KAFA;AAGA,MAAA,SAAA,EAAA,IAHA;AAIA,MAAA,aAAA,EAAA,IAJA;AAKA,MAAA,sBAAA,EAAA,KALA;AAMA,MAAA,UAAA,EAAA;AANA,KAAA;AAQA,GAnFA;AAoFA,EAAA,QAAA,EAAA;AACA,IAAA,SADA,uBACA;AACA,aACA,KAAA,MAAA,CAAA,OAAA,IACA,KAAA,aADA,IAEA,KAAA,cAFA,IAGA,KAAA,oBAHA,IAIA,KAAA,gBAJA,IAKA,KAAA,WANA;AAQA,KAVA;AAWA,IAAA,SAXA,uBAWA;AACA,aAAA,KAAA,SAAA,IAAA,KAAA,KAAA,IAAA,KAAA,QAAA;AACA,KAbA;AAcA,IAAA,UAdA,wBAcA;AACA,aAAA;AAAA,QAAA,SAAA,EAAA,KAAA;AAAA,OAAA;AACA,KAhBA;AAiBA,IAAA,UAjBA,wBAiBA;AACA,UAAA,GAAA,GAAA;AAAA,QAAA,SAAA,EAAA,KAAA;AAAA,OAAA;AACA,UAAA,CAAA,MAAA,CAAA,OAAA,CAAA,KAAA,cAAA,CAAA,EACA,GAAA,CAAA,UAAA,GAAA,MAAA,CAAA,QAAA,CAAA,KAAA,cAAA,CAAA;AACA,UAAA,CAAA,MAAA,CAAA,OAAA,CAAA,KAAA,YAAA,CAAA,EACA,GAAA,CAAA,KAAA,GAAA,MAAA,CAAA,QAAA,CAAA,KAAA,YAAA,CAAA;AACA,aAAA,GAAA;AACA,KAxBA;AAyBA,IAAA,mBAzBA,iCAyBA;AACA,aAAA;AAAA,QAAA,SAAA,EAAA,KAAA;AAAA,OAAA;AACA,KA3BA;AA4BA,IAAA,WA5BA,yBA4BA;AACA,UAAA,GAAA,GAAA,EAAA,CADA,CAGA;;AACA,UAAA,MAAA,CAAA,OAAA,CAAA,KAAA,cAAA,CAAA,EAAA;AACA,QAAA,GAAA,kBAAA,KAAA,cAAA,CAAA;AACA,OANA,CAQA;;;AACA,UAAA,MAAA,CAAA,OAAA,CAAA,KAAA,YAAA,CAAA,EAAA;AACA,QAAA,GAAA,oBAAA,KAAA,YAAA,CAAA;AACA;;AAEA,aAAA,GAAA,CAAA,IAAA,EAAA;AACA,KA1CA;AA2CA,IAAA,WA3CA,yBA2CA;AACA,aAAA;AACA,QAAA,KAAA,EAAA,MAAA,CAAA,QAAA,CAAA,KAAA,UAAA;AADA,OAAA;AAGA,KA/CA;AAgDA,IAAA,YAhDA,0BAgDA;AACA,UAAA,GAAA,GAAA,EAAA,CADA,CAGA;;AACA,UAAA,MAAA,CAAA,OAAA,CAAA,KAAA,UAAA,CAAA,EAAA;AACA,QAAA,GAAA,oBAAA,KAAA,UAAA,CAAA;AACA;;AAEA,aAAA,GAAA,CAAA,IAAA,EAAA;AACA,KAzDA;AA0DA,IAAA,cA1DA,4BA0DA;AACA,UAAA,GAAA,GAAA,EAAA;AACA,UAAA,CAAA,MAAA,CAAA,OAAA,CAAA,KAAA,aAAA,CAAA,EACA,GAAA,CAAA,KAAA,GAAA,MAAA,CAAA,QAAA,CAAA,KAAA,aAAA,CAAA;AAEA,aAAA,GAAA;AACA,KAhEA;AAiEA,IAAA,eAjEA,6BAiEA;AACA,UAAA,GAAA,GAAA,EAAA,CADA,CAGA;;AACA,UAAA,MAAA,CAAA,OAAA,CAAA,KAAA,aAAA,CAAA,EAAA;AACA,QAAA,GAAA,oBAAA,KAAA,aAAA,CAAA;AACA;;AAEA,aAAA,GAAA,CAAA,IAAA,EAAA;AACA;AA1EA,GApFA;AAgKA,EAAA,OAAA,EAAA;AACA,IAAA,aADA,2BACA;AAAA;;AACA,WAAA,KAAA,CAAA,OAAA,CAAA,KAAA,CAAA,QAAA,GAAA,QAAA;AACA,UAAA,YAAA,GAAA,KAAA,KAAA,CAAA,OAAA,CAAA,YAAA;;AACA,UAAA,KAAA,SAAA,IAAA,QAAA,EAAA;AACA,aAAA,SAAA,aAAA,YAAA;AACA,QAAA,UAAA,CAAA,YAAA;AACA,UAAA,KAAA,CAAA,SAAA,GAAA,MAAA;AACA,UAAA,KAAA,CAAA,KAAA,CAAA,OAAA,CAAA,KAAA,CAAA,QAAA,GAAA,IAAA;AACA,SAHA,EAGA,GAHA,CAAA;AAIA,OANA,MAMA;AACA,aAAA,SAAA,aAAA,YAAA;AACA,QAAA,UAAA,CAAA,YAAA;AACA,UAAA,KAAA,CAAA,SAAA,GAAA,QAAA;AACA,UAAA,KAAA,CAAA,KAAA,CAAA,OAAA,CAAA,KAAA,CAAA,QAAA,GAAA,IAAA;AACA,SAHA,EAGA,EAHA,CAAA;AAIA;;AACA,WAAA,kBAAA,GAAA,CAAA,KAAA,kBAAA;AACA,WAAA,KAAA,CAAA,gBAAA,EAAA,KAAA,kBAAA;AACA,KAnBA;AAoBA,IAAA,WApBA,yBAoBA;AACA,WAAA,GAAA,CAAA,OAAA,CAAA;AACA,QAAA,SAAA,EAAA,KAAA,KAAA,CAAA,OADA;AAEA,QAAA,KAAA,EAAA;AAFA,OAAA;AAIA,WAAA,UAAA,GAAA,IAAA;AACA,WAAA,KAAA,CAAA,SAAA,EAAA,IAAA;AACA,KA3BA;AA4BA,IAAA,sBA5BA,oCA4BA;AAAA;;AAAA,UAAA,IAAA,uEAAA,GAAA;AACA,MAAA,UAAA,CAAA,YAAA;AACA,QAAA,MAAA,CAAA,GAAA,CAAA,OAAA,CAAA,KAAA,CAAA,MAAA,CAAA,KAAA,CAAA,OAAA;;AACA,QAAA,MAAA,CAAA,UAAA,GAAA,KAAA;AACA,OAHA,EAGA,IAHA,CAAA;AAIA,KAjCA;AAkCA,IAAA,UAlCA,wBAkCA;AAAA;;AACA,UAAA,YAAA,GAAA,KAAA,KAAA,CAAA,IAAA,CAAA,YAAA;AACA,WAAA,aAAA,aAAA,YAAA;AACA,WAAA,GAAA,CAAA,KAAA,CAAA,QAAA,GAAA,QAAA;AACA,MAAA,UAAA,CAAA,YAAA;AACA,QAAA,MAAA,CAAA,aAAA,GAAA,KAAA;AACA,OAFA,EAEA,EAFA,CAAA;AAGA,WAAA,KAAA,CAAA,QAAA;AACA,KA1CA;AA2CA,IAAA,UA3CA,wBA2CA;AAAA;;AACA,WAAA,UAAA,GAAA,IAAA;AACA,WAAA,QAAA,GAAA,CAAA,KAAA,QAAA;AACA,UAAA,YAAA,GAAA,KAAA,KAAA,CAAA,aAAA,CAAA,YAAA;;AACA,UAAA,KAAA,sBAAA,IAAA,KAAA,EAAA;AACA,aAAA,sBAAA,aAAA,YAAA;AACA,QAAA,UAAA,CAAA,YAAA;AACA,UAAA,MAAA,CAAA,sBAAA,GAAA,MAAA;AACA,UAAA,MAAA,CAAA,UAAA,GAAA,KAAA;AACA,SAHA,EAGA,GAHA,CAAA;AAIA,OANA,MAMA;AACA,aAAA,sBAAA,aAAA,YAAA;AACA,QAAA,UAAA,CAAA,YAAA;AACA,UAAA,MAAA,CAAA,sBAAA,GAAA,KAAA;AACA,UAAA,MAAA,CAAA,UAAA,GAAA,KAAA;AACA,SAHA,EAGA,GAHA,CAAA;AAIA;AACA;AA5DA,GAhKA;AA8NA,EAAA,UAAA,EAAA;AACA,IAAA,KAAA,EAAA;AADA;AA9NA,CAAA","sourcesContent":["<!-- =========================================================================================\n    File Name: VxCard.vue\n    Description: Card Component\n    Component Name: VxCard\n    ----------------------------------------------------------------------------------------\n    Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\n      Author: Pixinvent\n    Author URL: http://www.themeforest.net/user/pixinvent\n========================================================================================== -->\n\n<template>\n  <div\n    class=\"vx-card\"\n    ref=\"card\"\n    :class=\"[\n      { 'overflow-hidden': tempHidden },\n      { 'no-shadow': noShadow },\n      { 'rounded-none': noRadius },\n      { 'card-border': cardBorder },\n      cardClasses\n    ]\"\n    :style=\"cardStyles\"\n    v-on=\"$listeners\"\n  >\n    <div class=\"vx-card__header\" v-if=\"hasHeader\">\n      <!-- card title -->\n      <div class=\"vx-card__title\">\n        <h4 v-if=\"this.$props.title\" :style=\"titleStyles\" :class=\"titleClasses\">\n          {{ title }}\n        </h4>\n        <h6\n          v-if=\"this.$props.subtitle\"\n          :style=\"subtitleStyles\"\n          :class=\"subtitleClasses\"\n        >\n          {{ subtitle }}\n        </h6>\n      </div>\n\n      <!-- card actions -->\n      <div class=\"vx-card__actions\" v-if=\"hasAction\">\n        <slot name=\"actions\">\n          <div\n            class=\"vx-card__action-buttons\"\n            v-if=\"\n              (actionButtons ||\n                collapseAction ||\n                refreshContentAction ||\n                removeCardAction) &&\n                !codeToggler\n            \"\n          >\n            <feather-icon\n              @click=\"toggleContent\"\n              icon=\"ChevronUpIcon\"\n              :class=\"{ rotate180: !isContentCollapsed }\"\n              class=\"ml-4\"\n              v-if=\"actionButtons || collapseAction\"\n            />\n            <feather-icon\n              @click=\"refreshcard\"\n              icon=\"RotateCwIcon\"\n              class=\"ml-4\"\n              v-if=\"actionButtons || refreshContentAction\"\n            />\n            <feather-icon\n              @click=\"removeCard\"\n              icon=\"XIcon\"\n              class=\"ml-4\"\n              v-if=\"actionButtons || removeCardAction\"\n            />\n          </div>\n          <div\n            class=\"vx-card__code-toggler sm:block hidden\"\n            v-if=\"codeToggler && !actionButtons\"\n          >\n            <feather-icon\n              icon=\"CodeIcon\"\n              :class=\"{\n                'border border-solid border-primary border-t-0 border-r-0 border-l-0': showCode\n              }\"\n              @click=\"toggleCode\"\n            ></feather-icon>\n          </div>\n        </slot>\n      </div>\n    </div>\n\n    <div\n      class=\"vx-card__collapsible-content vs-con-loading__container\"\n      ref=\"content\"\n      :class=\"[\n        { collapsed: isContentCollapsed },\n        { 'overflow-hidden': tempHidden }\n      ]\"\n      :style=\"StyleItems\"\n    >\n      <!-- content with no body(no padding) -->\n      <slot name=\"no-body\"></slot>\n\n      <!-- content inside body(with padding) -->\n      <div class=\"vx-card__body\" v-if=\"this.$slots.default\">\n        <slot></slot>\n      </div>\n\n      <!-- content with no body(no padding) -->\n      <slot name=\"no-body-bottom\"></slot>\n\n      <div class=\"vx-card__footer\" v-if=\"this.$slots.footer\">\n        <slot name=\"footer\"></slot>\n      </div>\n    </div>\n\n    <div\n      class=\"vx-card__code-container\"\n      ref=\"codeContainer\"\n      v-show=\"this.$slots.codeContainer\"\n      :style=\"codeContainerStyles\"\n      :class=\"{ collapsed: !showCode }\"\n    >\n      <div class=\"code-content\">\n        <prism :language=\"codeLanguage\" :key=\"$vs.rtl\">\n          <slot name=\"codeContainer\"></slot>\n        </prism>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Prism from 'vue-prism-component';\nimport _color from '@/assets/utils/color.js';\n\nexport default {\n  name: 'vx-card',\n  props: {\n    title: String,\n    subtitle: String,\n    actionButtons: {\n      type: Boolean,\n      default: false\n    },\n    actionButtonsColor: {\n      type: String,\n      default: 'success'\n    },\n    codeToggler: {\n      type: Boolean,\n      default: false\n    },\n    noShadow: {\n      default: false,\n      type: Boolean\n    },\n    noRadius: {\n      default: false,\n      type: Boolean\n    },\n    cardBorder: {\n      default: false,\n      type: Boolean\n    },\n    codeLanguage: {\n      default: 'markup',\n      type: String\n    },\n    collapseAction: {\n      default: false,\n      type: Boolean\n    },\n    refreshContentAction: {\n      default: false,\n      type: Boolean\n    },\n    removeCardAction: {\n      default: false,\n      type: Boolean\n    },\n    headerBackground: {\n      default: '',\n      type: String\n    },\n    // bodyBackground: {\n    //   default: '',\n    //   type: String\n    // },\n    // headerbackground: {\n    //   default: '',\n    //   type: String\n    // },\n    cardBackground: {\n      default: '',\n      type: String\n    },\n    contentColor: {\n      default: '',\n      type: String\n    },\n    titleColor: {\n      default: '',\n      type: String\n    },\n    subtitleColor: {\n      default: '#b8c2cc',\n      type: String\n    }\n  },\n  data() {\n    return {\n      isContentCollapsed: false,\n      showCode: false,\n      maxHeight: null,\n      cardMaxHeight: null,\n      codeContainerMaxHeight: '0px',\n      tempHidden: false\n    };\n  },\n  computed: {\n    hasAction() {\n      return (\n        this.$slots.actions ||\n        this.actionButtons ||\n        this.collapseAction ||\n        this.refreshContentAction ||\n        this.removeCardAction ||\n        this.codeToggler\n      );\n    },\n    hasHeader() {\n      return this.hasAction || this.title || this.subtitle;\n    },\n    StyleItems() {\n      return { maxHeight: this.maxHeight };\n    },\n    cardStyles() {\n      const obj = { maxHeight: this.cardMaxHeight };\n      if (!_color.isColor(this.cardBackground))\n        obj.background = _color.getColor(this.cardBackground);\n      if (!_color.isColor(this.contentColor))\n        obj.color = _color.getColor(this.contentColor);\n      return obj;\n    },\n    codeContainerStyles() {\n      return { maxHeight: this.codeContainerMaxHeight };\n    },\n    cardClasses() {\n      let str = '';\n\n      // Add bg class\n      if (_color.isColor(this.cardBackground)) {\n        str += ` bg-${this.cardBackground}`;\n      }\n\n      // add content color\n      if (_color.isColor(this.contentColor)) {\n        str += ` text-${this.contentColor}`;\n      }\n\n      return str.trim();\n    },\n    titleStyles() {\n      return {\n        color: _color.getColor(this.titleColor)\n      };\n    },\n    titleClasses() {\n      let str = '';\n\n      // add content color\n      if (_color.isColor(this.titleColor)) {\n        str += ` text-${this.titleColor}`;\n      }\n\n      return str.trim();\n    },\n    subtitleStyles() {\n      const obj = {};\n      if (!_color.isColor(this.subtitleColor))\n        obj.color = _color.getColor(this.subtitleColor);\n\n      return obj;\n    },\n    subtitleClasses() {\n      let str = '';\n\n      // add content color\n      if (_color.isColor(this.subtitleColor)) {\n        str += ` text-${this.subtitleColor}`;\n      }\n\n      return str.trim();\n    }\n  },\n  methods: {\n    toggleContent() {\n      this.$refs.content.style.overflow = 'hidden';\n      const scrollHeight = this.$refs.content.scrollHeight;\n      if (this.maxHeight == '1.5rem') {\n        this.maxHeight = `${scrollHeight}px`;\n        setTimeout(() => {\n          this.maxHeight = 'none';\n          this.$refs.content.style.overflow = null;\n        }, 300);\n      } else {\n        this.maxHeight = `${scrollHeight}px`;\n        setTimeout(() => {\n          this.maxHeight = '1.5rem';\n          this.$refs.content.style.overflow = null;\n        }, 50);\n      }\n      this.isContentCollapsed = !this.isContentCollapsed;\n      this.$emit('toggleCollapse', this.isContentCollapsed);\n    },\n    refreshcard() {\n      this.$vs.loading({\n        container: this.$refs.content,\n        scale: 0.5\n      });\n      this.tempHidden = true;\n      this.$emit('refresh', this);\n    },\n    removeRefreshAnimation(time = 100) {\n      setTimeout(() => {\n        this.$vs.loading.close(this.$refs.content);\n        this.tempHidden = false;\n      }, time);\n    },\n    removeCard() {\n      const scrollHeight = this.$refs.card.scrollHeight;\n      this.cardMaxHeight = `${scrollHeight}px`;\n      this.$el.style.overflow = 'hidden';\n      setTimeout(() => {\n        this.cardMaxHeight = '0px';\n      }, 50);\n      this.$emit('remove');\n    },\n    toggleCode() {\n      this.tempHidden = true;\n      this.showCode = !this.showCode;\n      const scrollHeight = this.$refs.codeContainer.scrollHeight;\n      if (this.codeContainerMaxHeight == '0px') {\n        this.codeContainerMaxHeight = `${scrollHeight}px`;\n        setTimeout(() => {\n          this.codeContainerMaxHeight = 'none';\n          this.tempHidden = false;\n        }, 300);\n      } else {\n        this.codeContainerMaxHeight = `${scrollHeight}px`;\n        setTimeout(() => {\n          this.codeContainerMaxHeight = '0px';\n          this.tempHidden = false;\n        }, 150);\n      }\n    }\n  },\n  components: {\n    Prism\n  }\n};\n</script>\n\n<style lang=\"scss\">\n@import '@/assets/scss/vuexy/components/vxCard.scss';\n</style>\n"],"sourceRoot":"src/components/vx-card"}]}