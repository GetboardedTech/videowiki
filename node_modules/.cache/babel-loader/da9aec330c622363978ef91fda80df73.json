{"remainingRequest":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/babel-loader/lib/index.js!/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/src/layouts/components/navbar/TheNavbarHorizontal.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/src/layouts/components/navbar/TheNavbarHorizontal.vue","mtime":1617441534121},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Bookmarks from \"./components/Bookmarks.vue\";\nimport SearchBar from \"./components/SearchBar.vue\";\nimport NotificationDropDown from \"./components/NotificationDropDown.vue\";\nimport ProfileDropDown from \"./components/ProfileDropDown.vue\";\nimport Logo from \"../Logo.vue\";\nimport { mapState } from 'vuex';\nexport default {\n  name: 'the-navbar-horizontal',\n  props: {\n    logo: {\n      type: String\n    },\n    navbarType: {\n      type: String,\n      required: true\n    }\n  },\n  components: {\n    Logo: Logo,\n    Bookmarks: Bookmarks,\n    SearchBar: SearchBar,\n    NotificationDropDown: NotificationDropDown,\n    ProfileDropDown: ProfileDropDown\n  },\n  computed: _objectSpread(_objectSpread({}, mapState('auth', ['isUserLoggedIn'])), {}, {\n    navbarColor: function navbarColor() {\n      var color = '#fff';\n      if (this.navbarType === 'sticky') color = '#f7f7f7';else if (this.navbarType === 'static') {// if (this.scrollY < 50) {\n        //   color = \"#f7f7f7\"\n        // }\n      }\n      this.isThemedark === 'dark' ? color === '#fff' ? color = '#10163a' : color = '#262c49' : null;\n      return color;\n    },\n    isThemedark: function isThemedark() {\n      return this.$store.state.theme;\n    },\n    navbarStyle: function navbarStyle() {\n      return this.navbarType === 'static' ? {\n        transition: 'all .25s ease-in-out'\n      } : {};\n    },\n    navbarClasses: function navbarClasses() {\n      return this.scrollY > 5 && this.navbarType === 'static' ? null : 'd-theme-dark-light-bg shadow-none';\n    },\n    scrollY: function scrollY() {\n      return this.$store.state.scrollY;\n    },\n    verticalNavMenuWidth: function verticalNavMenuWidth() {\n      return this.$store.state.verticalNavMenuWidth;\n    },\n    windowWidth: function windowWidth() {\n      return this.$store.state.windowWidth;\n    }\n  })\n};",{"version":3,"sources":["TheNavbarHorizontal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA,OAAA,SAAA;AACA,OAAA,SAAA;AACA,OAAA,oBAAA;AACA,OAAA,eAAA;AACA,OAAA,IAAA;AACA,SAAA,QAAA,QAAA,MAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,uBADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,IAAA,EAAA;AAAA,MAAA,IAAA,EAAA;AAAA,KADA;AAEA,IAAA,UAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA;AAFA;AAFA,GAFA;AASA,EAAA,UAAA,EAAA;AACA,IAAA,IAAA,EAAA,IADA;AAEA,IAAA,SAAA,EAAA,SAFA;AAGA,IAAA,SAAA,EAAA,SAHA;AAIA,IAAA,oBAAA,EAAA,oBAJA;AAKA,IAAA,eAAA,EAAA;AALA,GATA;AAgBA,EAAA,QAAA,kCACA,QAAA,CAAA,MAAA,EAAA,CAAA,gBAAA,CAAA,CADA;AAEA,IAAA,WAFA,yBAEA;AACA,UAAA,KAAA,GAAA,MAAA;AACA,UAAA,KAAA,UAAA,KAAA,QAAA,EAAA,KAAA,GAAA,SAAA,CAAA,KACA,IAAA,KAAA,UAAA,KAAA,QAAA,EAAA,CACA;AACA;AACA;AACA;AAEA,WAAA,WAAA,KAAA,MAAA,GACA,KAAA,KAAA,MAAA,GACA,KAAA,GAAA,SADA,GAEA,KAAA,GAAA,SAHA,GAIA,IAJA;AAMA,aAAA,KAAA;AACA,KAlBA;AAmBA,IAAA,WAnBA,yBAmBA;AACA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,KAAA;AACA,KArBA;AAsBA,IAAA,WAtBA,yBAsBA;AACA,aAAA,KAAA,UAAA,KAAA,QAAA,GACA;AAAA,QAAA,UAAA,EAAA;AAAA,OADA,GAEA,EAFA;AAGA,KA1BA;AA2BA,IAAA,aA3BA,2BA2BA;AACA,aAAA,KAAA,OAAA,GAAA,CAAA,IAAA,KAAA,UAAA,KAAA,QAAA,GACA,IADA,GAEA,mCAFA;AAGA,KA/BA;AAgCA,IAAA,OAhCA,qBAgCA;AACA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,OAAA;AACA,KAlCA;AAmCA,IAAA,oBAnCA,kCAmCA;AACA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,oBAAA;AACA,KArCA;AAsCA,IAAA,WAtCA,yBAsCA;AACA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,WAAA;AACA;AAxCA;AAhBA,CAAA","sourcesContent":["<!-- =========================================================================================\n  File Name: TheNavbar.vue\n  Description: Navbar component\n  Component Name: TheNavbar\n  ----------------------------------------------------------------------------------------\n  Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\n  Author: Pixinvent\n  Author URL: http://www.themeforest.net/user/pixinvent\n========================================================================================== -->\n\n<template>\n  <div class=\"relative\">\n    <div class=\"vx-navbar-wrapper navbar-full p-0\" style=\"height: auto;\">\n      <vs-navbar\n        class=\"navbar-custom navbar-skelton\"\n        :class=\"navbarClasses\"\n        :style=\"navbarStyle\"\n        :color=\"navbarColor\"\n      >\n        <!--      <bookmarks :navbarColor=\"navbarColor\" v-if=\"windowWidth >= 992\" />-->\n\n        <router-link\n          tag=\"div\"\n          to=\"/\"\n          class=\"vx-logo cursor-pointer mr-auto flex items-center\"\n        >\n          <logo class=\"w-10 mr-4 fill-current text-primary\" />\n          <span class=\"vx-logo-text text-primary\">VideoWiki</span>\n        </router-link>\n\n        <!--      <search-bar />-->\n\n        <!--      <notification-drop-down />-->\n        <profile-drop-down v-if=\"isUserLoggedIn()\" />\n        <vs-button v-else color=\"primary\" href=\"/login\" type=\"filled\"\n          >Sign In</vs-button\n        >\n      </vs-navbar>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Bookmarks from './components/Bookmarks.vue';\nimport SearchBar from './components/SearchBar.vue';\nimport NotificationDropDown from './components/NotificationDropDown.vue';\nimport ProfileDropDown from './components/ProfileDropDown.vue';\nimport Logo from '../Logo.vue';\nimport { mapState } from 'vuex';\n\nexport default {\n  name: 'the-navbar-horizontal',\n  props: {\n    logo: { type: String },\n    navbarType: {\n      type: String,\n      required: true\n    }\n  },\n  components: {\n    Logo,\n    Bookmarks,\n    SearchBar,\n    NotificationDropDown,\n    ProfileDropDown\n  },\n  computed: {\n    ...mapState('auth', ['isUserLoggedIn']),\n    navbarColor() {\n      let color = '#fff';\n      if (this.navbarType === 'sticky') color = '#f7f7f7';\n      else if (this.navbarType === 'static') {\n        // if (this.scrollY < 50) {\n        //   color = \"#f7f7f7\"\n        // }\n      }\n\n      this.isThemedark === 'dark'\n        ? color === '#fff'\n          ? (color = '#10163a')\n          : (color = '#262c49')\n        : null;\n\n      return color;\n    },\n    isThemedark() {\n      return this.$store.state.theme;\n    },\n    navbarStyle() {\n      return this.navbarType === 'static'\n        ? { transition: 'all .25s ease-in-out' }\n        : {};\n    },\n    navbarClasses() {\n      return this.scrollY > 5 && this.navbarType === 'static'\n        ? null\n        : 'd-theme-dark-light-bg shadow-none';\n    },\n    scrollY() {\n      return this.$store.state.scrollY;\n    },\n    verticalNavMenuWidth() {\n      return this.$store.state.verticalNavMenuWidth;\n    },\n    windowWidth() {\n      return this.$store.state.windowWidth;\n    }\n  }\n};\n</script>\n"],"sourceRoot":"src/layouts/components/navbar"}]}