{"remainingRequest":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/babel-loader/lib/index.js!/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/eslint-loader/index.js??ref--13-0!/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/src/assets/utils/color.js","dependencies":[{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/src/assets/utils/color.js","mtime":1617441534117},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.regexp.search\";\nimport \"core-js/modules/es6.regexp.split\";\nexport default {\n  darken: function darken(color, percent) {\n    var f = color.split(','),\n        t = percent < 0 ? 0 : 255,\n        p = percent < 0 ? percent * -1 : percent,\n        R = parseInt(f[0].slice(4)),\n        G = parseInt(f[1]),\n        B = parseInt(f[2]);\n    return 'rgb(' + (Math.round((t - R) * p) + R) + ',' + (Math.round((t - G) * p) + G) + ',' + (Math.round((t - B) * p) + B) + ')';\n  },\n  getColor: function getColor(colorx) {\n    var alphax = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    var defaultx = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n    // change color hex to RGB\n    if (/^[#]/.test(colorx)) {\n      var c = this.hexToRgb(colorx);\n\n      if (alphax == 1) {\n        colorx = \"rgb(\".concat(c.r, \",\").concat(c.g, \",\").concat(c.b, \")\");\n      } else {\n        colorx = \"rgba(\".concat(c.r, \",\").concat(c.g, \",\").concat(c.b, \",\").concat(alphax, \")\");\n      }\n    } else if (/^rgba/.test(colorx)) {\n      if (colorx.search(/.([0-9]\\))$/) == -1 && !defaultx) {\n        colorx = colorx.replace(/.?([0-9]\\))$/, \"\".concat(alphax, \")\"));\n      }\n    } else if (/^(rgb)/.test(colorx)) {\n      // change rgb and rgba\n      if (alphax != 1) {\n        colorx = colorx.replace(/^(rgb)/, \"rgba\");\n        colorx = colorx.replace(/\\)$/, \",\".concat(alphax, \")\"));\n      }\n    }\n\n    return colorx;\n  },\n  isColor: function isColor(colorx) {\n    var vscolors = ['primary', 'secondary', 'success', 'danger', 'warning', 'dark', 'light'];\n    return vscolors.includes(colorx);\n  },\n  RandomColor: function RandomColor() {\n    function getRandomInt(min, max) {\n      return Math.floor(Math.random() * (max - min)) + min;\n    }\n\n    return \"rgb(\".concat(getRandomInt(0, 255), \",\").concat(getRandomInt(0, 255), \",\").concat(getRandomInt(0, 255), \")\");\n  },\n  rColor: function rColor(colorx) {\n    var opacity = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n    if (/^[#]/.test(colorx)) {\n      var c = this.hexToRgb(colorx);\n      colorx = \"rgba(\".concat(c.r, \",\").concat(c.g, \",\").concat(c.b, \",\").concat(opacity, \")\");\n    } else if (/^[rgb]/.test(colorx)) {\n      var colorSplit = colorx.split(')')[0];\n\n      if (!/^[rgba]/.test(colorx)) {\n        colorSplit.replace('rgb', 'rgba');\n        colorSplit += \",\".concat(opacity, \")\");\n      } else {\n        // colorSplit.replace('rgb','rgba')\n        colorSplit += \")\";\n      }\n\n      colorx = colorSplit;\n    }\n\n    var vscolors = ['primary', 'success', 'danger', 'warning', 'dark'];\n\n    if (colorx) {\n      if (/[#()]/.test(colorx)) {\n        return colorx;\n      } else {\n        if (vscolors.includes(colorx)) {\n          return \"rgba(var(--\".concat(colorx, \"),\").concat(opacity, \")\");\n        } else {\n          return \"rgba(var(--primary),\".concat(opacity, \")\");\n        }\n      }\n    } else {\n      return \"rgba(var(--primary),\".concat(opacity, \")\");\n    }\n  },\n  contrastColor: function contrastColor(elementx) {\n    var c = elementx;\n\n    if (/[#]/g.test(elementx)) {\n      var rgbx = this.hexToRgb(elementx);\n      c = \"rgb(\".concat(rgbx.r, \",\").concat(rgbx.g, \",\").concat(rgbx.b, \")\");\n    }\n\n    var rgb = c.replace(/^(rgb|rgba)\\(/, '').replace(/\\)$/, '').replace(/\\s/g, '').split(',');\n    var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n\n    if (yiq >= 128) {\n      return true;\n    } else {\n      return false;\n    }\n  },\n  setCssVariable: function setCssVariable(propertyName, value) {\n    if (typeof window !== 'undefined') {\n      document.documentElement.style.setProperty(propertyName, value);\n    }\n  },\n  hexToRgb: function hexToRgb(hex) {\n    // Expand shorthand form (e.g. \"03F\") to full form (e.g. \"0033FF\")\n    var shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n    hex = hex.replace(shorthandRegex, function (m, r, g, b) {\n      return r + r + g + g + b + b;\n    });\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? {\n      r: parseInt(result[1], 16),\n      g: parseInt(result[2], 16),\n      b: parseInt(result[3], 16)\n    } : null;\n  },\n  getVariable: function getVariable(styles, propertyName) {\n    return String(styles.getPropertyValue(propertyName)).trim();\n  },\n  changeColor: function changeColor(colorInicial) {\n    var colores = ['primary', 'success', 'danger', 'warning', 'dark'];\n    var colorx;\n\n    if (colores.includes(colorInicial)) {\n      var style = getComputedStyle(document.documentElement);\n      colorx = this.getVariable(style, '--' + colorInicial);\n    } else {\n      if (/[rgb()]/g.test(colorInicial)) {\n        colorx = colorInicial.replace(/[rgb()]/g, '');\n      } else if (/[#]/g.test(colorInicial)) {\n        var rgbx = this.hexToRgb(colorInicial);\n        colorx = \"\".concat(rgbx.r, \",\").concat(rgbx.g, \",\").concat(rgbx.b);\n      } else {\n        colorx = '--' + colorInicial;\n      }\n    }\n\n    return colorx; // this.setCssVariable('--'+clave,colorx)\n  }\n};",{"version":3,"sources":["/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/src/assets/utils/color.js"],"names":["darken","color","percent","f","split","t","p","R","parseInt","slice","G","B","Math","round","getColor","colorx","alphax","defaultx","test","c","hexToRgb","r","g","b","search","replace","isColor","vscolors","includes","RandomColor","getRandomInt","min","max","floor","random","rColor","opacity","colorSplit","contrastColor","elementx","rgbx","rgb","yiq","setCssVariable","propertyName","value","window","document","documentElement","style","setProperty","hex","shorthandRegex","m","result","exec","getVariable","styles","String","getPropertyValue","trim","changeColor","colorInicial","colores","getComputedStyle"],"mappings":"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","sourcesContent":["export default {\n  darken(color, percent) {\n    var f = color.split(','),\n      t = percent < 0 ? 0 : 255,\n      p = percent < 0 ? percent * -1 : percent,\n      R = parseInt(f[0].slice(4)),\n      G = parseInt(f[1]),\n      B = parseInt(f[2]);\n    return (\n      'rgb(' +\n      (Math.round((t - R) * p) + R) +\n      ',' +\n      (Math.round((t - G) * p) + G) +\n      ',' +\n      (Math.round((t - B) * p) + B) +\n      ')'\n    );\n  },\n  getColor(colorx, alphax = 1, defaultx = true) {\n    // change color hex to RGB\n    if (/^[#]/.test(colorx)) {\n      let c = this.hexToRgb(colorx);\n\n      if (alphax == 1) {\n        colorx = `rgb(${c.r},${c.g},${c.b})`;\n      } else {\n        colorx = `rgba(${c.r},${c.g},${c.b},${alphax})`;\n      }\n    } else if (/^rgba/.test(colorx)) {\n      if (colorx.search(/.([0-9]\\))$/) == -1 && !defaultx) {\n        colorx = colorx.replace(/.?([0-9]\\))$/, `${alphax})`);\n      }\n    } else if (/^(rgb)/.test(colorx)) {\n      // change rgb and rgba\n      if (alphax != 1) {\n        colorx = colorx.replace(/^(rgb)/, `rgba`);\n        colorx = colorx.replace(/\\)$/, `,${alphax})`);\n      }\n    }\n    return colorx;\n  },\n  isColor(colorx) {\n    let vscolors = [\n      'primary',\n      'secondary',\n      'success',\n      'danger',\n      'warning',\n      'dark',\n      'light'\n    ];\n    return vscolors.includes(colorx);\n  },\n  RandomColor() {\n    function getRandomInt(min, max) {\n      return Math.floor(Math.random() * (max - min)) + min;\n    }\n    return `rgb(${getRandomInt(0, 255)},${getRandomInt(0, 255)},${getRandomInt(\n      0,\n      255\n    )})`;\n  },\n  rColor(colorx, opacity = 1) {\n    if (/^[#]/.test(colorx)) {\n      let c = this.hexToRgb(colorx);\n      colorx = `rgba(${c.r},${c.g},${c.b},${opacity})`;\n    } else if (/^[rgb]/.test(colorx)) {\n      let colorSplit = colorx.split(')')[0];\n      if (!/^[rgba]/.test(colorx)) {\n        colorSplit.replace('rgb', 'rgba');\n        colorSplit += `,${opacity})`;\n      } else {\n        // colorSplit.replace('rgb','rgba')\n        colorSplit += `)`;\n      }\n      colorx = colorSplit;\n    }\n\n    let vscolors = ['primary', 'success', 'danger', 'warning', 'dark'];\n    if (colorx) {\n      if (/[#()]/.test(colorx)) {\n        return colorx;\n      } else {\n        if (vscolors.includes(colorx)) {\n          return `rgba(var(--${colorx}),${opacity})`;\n        } else {\n          return `rgba(var(--primary),${opacity})`;\n        }\n      }\n    } else {\n      return `rgba(var(--primary),${opacity})`;\n    }\n  },\n  contrastColor(elementx) {\n    let c = elementx;\n    if (/[#]/g.test(elementx)) {\n      let rgbx = this.hexToRgb(elementx);\n      c = `rgb(${rgbx.r},${rgbx.g},${rgbx.b})`;\n    }\n    var rgb = c\n      .replace(/^(rgb|rgba)\\(/, '')\n      .replace(/\\)$/, '')\n      .replace(/\\s/g, '')\n      .split(',');\n    var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n    if (yiq >= 128) {\n      return true;\n    } else {\n      return false;\n    }\n  },\n  setCssVariable(propertyName, value) {\n    if (typeof window !== 'undefined') {\n      document.documentElement.style.setProperty(propertyName, value);\n    }\n  },\n  hexToRgb(hex) {\n    // Expand shorthand form (e.g. \"03F\") to full form (e.g. \"0033FF\")\n    var shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n    hex = hex.replace(shorthandRegex, function(m, r, g, b) {\n      return r + r + g + g + b + b;\n    });\n\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result\n      ? {\n          r: parseInt(result[1], 16),\n          g: parseInt(result[2], 16),\n          b: parseInt(result[3], 16)\n        }\n      : null;\n  },\n  getVariable(styles, propertyName) {\n    return String(styles.getPropertyValue(propertyName)).trim();\n  },\n  changeColor(colorInicial) {\n    let colores = ['primary', 'success', 'danger', 'warning', 'dark'];\n    let colorx;\n\n    if (colores.includes(colorInicial)) {\n      let style = getComputedStyle(document.documentElement);\n      colorx = this.getVariable(style, '--' + colorInicial);\n    } else {\n      if (/[rgb()]/g.test(colorInicial)) {\n        colorx = colorInicial.replace(/[rgb()]/g, '');\n      } else if (/[#]/g.test(colorInicial)) {\n        let rgbx = this.hexToRgb(colorInicial);\n        colorx = `${rgbx.r},${rgbx.g},${rgbx.b}`;\n      } else {\n        colorx = '--' + colorInicial;\n      }\n    }\n    return colorx;\n    // this.setCssVariable('--'+clave,colorx)\n  }\n};\n"]}]}