{"remainingRequest":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/src/layouts/components/vertical-nav-menu/PanelItems/PublishPanel.vue?vue&type=template&id=23b7dfdf&scoped=true&","dependencies":[{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/src/layouts/components/vertical-nav-menu/PanelItems/PublishPanel.vue","mtime":1617441641267},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"vx-card items-center\" }, [\n    _c(\"div\", { staticClass: \"vx-card__collapsible-content\" }, [\n      _c(\"div\", { staticClass: \"vx-card__body\" }, [\n        _vm._v(\n          \"\\n      \" +\n            _vm._s(/*$t('studio.sidebarPanel.publish.p1')*/) +\n            \"\\n      \"\n        ),\n        _c(\n          \"div\",\n          _vm._l(_vm.actionList, function(status, action, idx) {\n            return _c(\n              \"div\",\n              {\n                key: idx,\n                staticClass:\n                  \"no-border relative font-medium flex items-center timeline-view\"\n              },\n              [\n                _c(\"vs-icon\", {\n                  staticClass: \"text-white\",\n                  attrs: {\n                    icon: status ? \"done\" : \"clear\",\n                    bg: status ? \"success\" : \"danger\",\n                    round: \"\",\n                    size: \"20px\"\n                  }\n                }),\n                _c(\"span\", [_vm._v(_vm._s(action))])\n              ],\n              1\n            )\n          }),\n          0\n        ),\n        _c(\"div\", { staticClass: \"text-left mb-2 mt-6\" }, [\n          _c(\"div\", [\n            _c(\"h6\", { staticClass: \"mb-2\" }, [_vm._v(\"Title\")]),\n            _c(\n              \"span\",\n              {\n                directives: [\n                  {\n                    name: \"show\",\n                    rawName: \"v-show\",\n                    value: _vm.errors.has(\"title2\"),\n                    expression: \"errors.has('title2')\"\n                  }\n                ],\n                staticClass: \"text-danger text-sm\"\n              },\n              [_vm._v(\"This field is required\")]\n            )\n          ]),\n          _c(\"input\", {\n            directives: [\n              {\n                name: \"model\",\n                rawName: \"v-model\",\n                value: _vm.title,\n                expression: \"title\"\n              },\n              {\n                name: \"validate\",\n                rawName: \"v-validate\",\n                value: \"required\",\n                expression: \"'required'\"\n              }\n            ],\n            staticClass: \"title2\",\n            attrs: { type: \"text\", name: \"title2\" },\n            domProps: { value: _vm.title },\n            on: {\n              input: function($event) {\n                if ($event.target.composing) {\n                  return\n                }\n                _vm.title = $event.target.value\n              }\n            }\n          })\n        ]),\n        _c(\"div\", { staticClass: \"text-left mb-2\" }, [\n          _c(\"div\", [\n            _c(\"h6\", { staticClass: \"mb-2\" }, [_vm._v(\"Description\")]),\n            _c(\n              \"span\",\n              {\n                directives: [\n                  {\n                    name: \"show\",\n                    rawName: \"v-show\",\n                    value: _vm.errors.has(\"desc\"),\n                    expression: \"errors.has('desc')\"\n                  }\n                ],\n                staticClass: \"text-danger text-sm\"\n              },\n              [_vm._v(\"This field is required\")]\n            )\n          ]),\n          _c(\"textarea\", {\n            directives: [\n              {\n                name: \"model\",\n                rawName: \"v-model\",\n                value: _vm.description,\n                expression: \"description\"\n              },\n              {\n                name: \"validate\",\n                rawName: \"v-validate\",\n                value: \"required\",\n                expression: \"'required'\"\n              }\n            ],\n            staticClass: \"w-full description2 desc\",\n            attrs: { name: \"desc\", placeholder: \"Enter video description\" },\n            domProps: { value: _vm.description },\n            on: {\n              input: function($event) {\n                if ($event.target.composing) {\n                  return\n                }\n                _vm.description = $event.target.value\n              }\n            }\n          })\n        ]),\n        !_vm.insideIframe\n          ? _c(\n              \"div\",\n              { staticClass: \"flex items-center mt-4\" },\n              [\n                _vm._m(0),\n                _c(\n                  \"vs-switch\",\n                  {\n                    attrs: { id: \"paid-status\" },\n                    model: {\n                      value: _vm.isPaid,\n                      callback: function($$v) {\n                        _vm.isPaid = $$v\n                      },\n                      expression: \"isPaid\"\n                    }\n                  },\n                  [\n                    _c(\"span\", { attrs: { slot: \"on\" }, slot: \"on\" }, [\n                      _vm._v(\"Paid\")\n                    ]),\n                    _c(\"span\", { attrs: { slot: \"off\" }, slot: \"off\" }, [\n                      _vm._v(\"Free\")\n                    ])\n                  ]\n                )\n              ],\n              1\n            )\n          : _vm._e(),\n        _c(\n          \"div\",\n          { staticClass: \"mt-4 text-left mb-4 flex items-center\" },\n          [\n            _c(\"h6\", { staticClass: \"mr-2\" }, [_vm._v(\"Tags\")]),\n            _c(\n              \"vx-tooltip\",\n              { attrs: { text: \"Delete all\" } },\n              [\n                _c(\"vs-icon\", {\n                  attrs: { icon: \"delete\", size: \"20px\" },\n                  on: { click: _vm.deleteAll }\n                })\n              ],\n              1\n            )\n          ],\n          1\n        ),\n        _c(\"div\", { staticClass: \"total w-full\" }, [\n          _c(\n            \"div\",\n            { staticClass: \"vx-card p-3 flex flex-wrap\" },\n            [\n              _vm._l(_vm.getTags, function(chip, idx) {\n                return _c(\n                  \"vs-chip\",\n                  {\n                    key: idx,\n                    attrs: { closable: \"\", color: \"grey\" },\n                    on: {\n                      click: function($event) {\n                        return _vm.$store.commit(\"studio/removeTag\", chip)\n                      }\n                    }\n                  },\n                  [_vm._v(\"\\n            \" + _vm._s(chip) + \"\\n          \")]\n                )\n              }),\n              _c(\"input\", {\n                ref: \"tag\",\n                staticClass: \"m-2 h-8 border-0\",\n                attrs: { type: \"text\", placeholder: \"Enter Tags\" },\n                on: {\n                  keyup: function($event) {\n                    if (\n                      !$event.type.indexOf(\"key\") &&\n                      _vm._k($event.keyCode, \"enter\", 13, $event.key, \"Enter\")\n                    ) {\n                      return null\n                    }\n                    return _vm.addTag($event)\n                  }\n                }\n              })\n            ],\n            2\n          )\n        ])\n      ])\n    ])\n  ])\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"label\", { staticClass: \"mr-2\", attrs: { for: \"paid-status\" } }, [\n      _c(\"h6\", [_vm._v(\"Video Access\")])\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}