{"remainingRequest":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/src/components/VideoNotFound.vue?vue&type=style&index=0&id=10f1850a&scoped=true&lang=css&","dependencies":[{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/src/components/VideoNotFound.vue","mtime":1617441641267},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.effect-card {\n  display: flex;\n  justify-content: center;\n}\n.effect-card:hover {\n  cursor: pointer;\n  transform: translateY(-5px);\n  box-shadow: 0px 4px 25px 0px rgba(0, 0, 0, 0.25);\n}\n",{"version":3,"sources":["VideoNotFound.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"VideoNotFound.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"flex items-center justify-center\">\n    <!--vue-progress-bar class=\"absolute\"></vue-progress-bar-->\n    <div class=\"flex items-center justify-center\">\n      <vs-button\n        type=\"filled\"\n        class=\"mr-2\"\n        :size=\"$store.state.windowWidth < 400 ? 'small' : 'default'\"\n        @click=\"$emit('search', sceneNum)\"\n        >Search</vs-button\n      >\n      <input\n        type=\"file\"\n        :id=\"`add_scene_${sceneNum}`\"\n        @change=\"uploadFile($event)\"\n        class=\"hidden\"\n        accept=\"video/*,image/*\"\n      />\n      <vs-button\n        type=\"filled\"\n        @click=\"chooseFile\"\n        :size=\"$store.state.windowWidth < 400 ? 'small' : 'default'\"\n        >Upload</vs-button\n      >\n    </div>\n    <vs-popup title=\"Select Motion\" :active.sync=\"showEffectModal\">\n      <div class=\"flex flex-wrap -m-3\">\n        <div class=\"w-1/5 p-3\">\n          <vx-card\n            class=\"effect-card bg-primary text-white\"\n            @click=\"selectImage('None')\"\n          >\n            <div class=\"-m-3 text-center\">\n              <vs-icon icon=\"not_interested\" size=\"45px\" />\n              <p>None</p>\n            </div>\n          </vx-card>\n        </div>\n        <div class=\"w-1/5 p-3\">\n          <vx-card\n            class=\"effect-card bg-primary text-white\"\n            @click=\"selectImage('in')\"\n          >\n            <div class=\"-m-3 text-center\">\n              <vs-icon icon=\"zoom_in\" size=\"45px\" />\n              <p>Zoom In</p>\n            </div>\n          </vx-card>\n        </div>\n        <div class=\"w-1/5 p-3\">\n          <vx-card\n            class=\"effect-card bg-primary text-white\"\n            @click=\"selectImage('out')\"\n          >\n            <div class=\"-m-3 text-center\">\n              <vs-icon icon=\"zoom_out\" size=\"45px\" />\n              <p>Zoom out</p>\n            </div>\n          </vx-card>\n        </div>\n      </div>\n    </vs-popup>\n  </div>\n</template>\n<script>\nexport default {\n  name: 'VideoNotFound',\n  props: ['sceneNum'],\n  data() {\n    return {\n      showEffectModal: false,\n      currentUploadedImage: null\n    };\n  },\n  methods: {\n    selectImage(zoomType) {\n      this.showEffectModal = false;\n      const dataObj = {\n        image_url: this.currentUploadedImage,\n        zoom: zoomType\n      };\n      this.$vs.loading({\n        container: `#upload_scene_${this.sceneNum}`\n      });\n      // this.$Progress.start();\n      this.$store\n        .dispatch('studio/addMotionToImage', dataObj)\n        .then(data => {\n          this.$store.commit('studio/selectVideo', {\n            value: data.url,\n            sceneNum: this.sceneNum\n          });\n        })\n        .catch(() => {\n          // this.$Progress.fail();\n          // this.$vs.loading.close();\n        })\n        .finally(() => {\n          this.$vs.loading.close(\n            `#upload_scene_${this.sceneNum} > .con-vs-loading`\n          );\n        });\n    },\n    chooseFile() {\n      document.getElementById(`add_scene_${this.sceneNum}`).click();\n    },\n    uploadFile(event) {\n      const selectedFile = event.target.files[0];\n      this.$vs.loading({\n        container: `#upload_scene_${this.sceneNum}`\n      });\n      this.$store\n        .dispatch('studio/uploadMedia', selectedFile)\n        .then(url => {\n          if (selectedFile.type.split('/')[0] === 'video') {\n            this.$store.commit('studio/selectVideo', {\n              sceneNum: this.sceneNum,\n              value: url\n            });\n          } else {\n            this.showEffectModal = true;\n          }\n          this.currentUploadedImage = url;\n          const dataObj = {\n            fileName: selectedFile.name,\n            url\n          };\n          this.$store.commit('studio/setUploadedMedia', dataObj);\n        })\n        .catch(() => {\n          this.$vs.notify({\n            title: 'Error Occured',\n            text: 'Media upload failed',\n            color: 'danger'\n          });\n        })\n        .finally(() => {\n          this.$vs.loading.close(\n            `#upload_scene_${this.sceneNum} > .con-vs-loading`\n          );\n        });\n    }\n  }\n};\n</script>\n<style scoped>\n.effect-card {\n  display: flex;\n  justify-content: center;\n}\n.effect-card:hover {\n  cursor: pointer;\n  transform: translateY(-5px);\n  box-shadow: 0px 4px 25px 0px rgba(0, 0, 0, 0.25);\n}\n</style>\n"]}]}