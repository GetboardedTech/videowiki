{"remainingRequest":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/src/views/login/LoginJWT.vue?vue&type=template&id=5289cb3e&scoped=true&","dependencies":[{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/src/views/login/LoginJWT.vue","mtime":1617441641275},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", [\n    _c(\"form\", [\n      _c(\"div\", { staticClass: \"vx-row mb-6\" }, [\n        _c(\"div\", { staticClass: \"vx-col w-full\" }, [\n          _c(\"div\", { staticClass: \"mb-4\" }, [\n            _vm._m(0),\n            _c(\"div\", { staticClass: \"h-2\" }, [\n              _c(\n                \"span\",\n                {\n                  directives: [\n                    {\n                      name: \"show\",\n                      rawName: \"v-show\",\n                      value: _vm.errors.has(\"email\"),\n                      expression: \"errors.has('email')\"\n                    }\n                  ],\n                  staticClass: \"text-danger text-sm\"\n                },\n                [_vm._v(_vm._s(_vm.errors.first(\"email\")))]\n              )\n            ])\n          ]),\n          _c(\"input\", {\n            directives: [\n              {\n                name: \"validate\",\n                rawName: \"v-validate\",\n                value: \"required|email\",\n                expression: \"'required|email'\"\n              },\n              {\n                name: \"model\",\n                rawName: \"v-model\",\n                value: _vm.email,\n                expression: \"email\"\n              }\n            ],\n            staticClass: \"modified-input\",\n            attrs: {\n              type: \"email\",\n              name: \"email\",\n              placeholder: \"Enter email address\",\n              autocomplete: \"off\"\n            },\n            domProps: { value: _vm.email },\n            on: {\n              input: function($event) {\n                if ($event.target.composing) {\n                  return\n                }\n                _vm.email = $event.target.value\n              }\n            }\n          })\n        ])\n      ]),\n      _c(\"div\", { staticClass: \"vx-row mb-6\" }, [\n        _c(\"div\", { staticClass: \"vx-col w-full\" }, [\n          _vm._m(1),\n          _c(\n            \"div\",\n            { staticClass: \"flex relative\" },\n            [\n              (_vm.showPassword ? \"text\" : \"password\") === \"checkbox\"\n                ? _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"validate\",\n                        rawName: \"v-validate\",\n                        value: \"required\",\n                        expression: \"'required'\"\n                      },\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.password,\n                        expression: \"password\"\n                      }\n                    ],\n                    staticClass: \"modified-input\",\n                    attrs: {\n                      \"data-vv-validate-on\": \"blur\",\n                      name: \"password\",\n                      placeholder: \"Enter password\",\n                      autocomplete: \"off\",\n                      type: \"checkbox\"\n                    },\n                    domProps: {\n                      checked: Array.isArray(_vm.password)\n                        ? _vm._i(_vm.password, null) > -1\n                        : _vm.password\n                    },\n                    on: {\n                      change: function($event) {\n                        var $$a = _vm.password,\n                          $$el = $event.target,\n                          $$c = $$el.checked ? true : false\n                        if (Array.isArray($$a)) {\n                          var $$v = null,\n                            $$i = _vm._i($$a, $$v)\n                          if ($$el.checked) {\n                            $$i < 0 && (_vm.password = $$a.concat([$$v]))\n                          } else {\n                            $$i > -1 &&\n                              (_vm.password = $$a\n                                .slice(0, $$i)\n                                .concat($$a.slice($$i + 1)))\n                          }\n                        } else {\n                          _vm.password = $$c\n                        }\n                      }\n                    }\n                  })\n                : (_vm.showPassword ? \"text\" : \"password\") === \"radio\"\n                ? _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"validate\",\n                        rawName: \"v-validate\",\n                        value: \"required\",\n                        expression: \"'required'\"\n                      },\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.password,\n                        expression: \"password\"\n                      }\n                    ],\n                    staticClass: \"modified-input\",\n                    attrs: {\n                      \"data-vv-validate-on\": \"blur\",\n                      name: \"password\",\n                      placeholder: \"Enter password\",\n                      autocomplete: \"off\",\n                      type: \"radio\"\n                    },\n                    domProps: { checked: _vm._q(_vm.password, null) },\n                    on: {\n                      change: function($event) {\n                        _vm.password = null\n                      }\n                    }\n                  })\n                : _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"validate\",\n                        rawName: \"v-validate\",\n                        value: \"required\",\n                        expression: \"'required'\"\n                      },\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.password,\n                        expression: \"password\"\n                      }\n                    ],\n                    staticClass: \"modified-input\",\n                    attrs: {\n                      \"data-vv-validate-on\": \"blur\",\n                      name: \"password\",\n                      placeholder: \"Enter password\",\n                      autocomplete: \"off\",\n                      type: _vm.showPassword ? \"text\" : \"password\"\n                    },\n                    domProps: { value: _vm.password },\n                    on: {\n                      input: function($event) {\n                        if ($event.target.composing) {\n                          return\n                        }\n                        _vm.password = $event.target.value\n                      }\n                    }\n                  }),\n              _c(\"vs-icon\", {\n                staticClass: \"input-icon\",\n                attrs: {\n                  icon: _vm.showPassword ? \"visibility_off\" : \"visibility\",\n                  size: \"25px\"\n                },\n                on: {\n                  click: function($event) {\n                    _vm.showPassword = !_vm.showPassword\n                  }\n                }\n              })\n            ],\n            1\n          )\n        ])\n      ]),\n      !_vm.popup\n        ? _c(\n            \"div\",\n            { staticClass: \"flex flex-wrap justify-between my-5\" },\n            [\n              _c(\n                \"vs-checkbox\",\n                {\n                  staticClass: \"mb-3\",\n                  model: {\n                    value: _vm.checkbox_remember_me,\n                    callback: function($$v) {\n                      _vm.checkbox_remember_me = $$v\n                    },\n                    expression: \"checkbox_remember_me\"\n                  }\n                },\n                [_vm._v(\"Remember Me\")]\n              ),\n              _c(\"router-link\", { attrs: { to: \"/pages/forgot-password\" } }, [\n                _vm._v(\"Forgot Password?\")\n              ])\n            ],\n            1\n          )\n        : _vm._e(),\n      _c(\n        \"div\",\n        { staticClass: \"flex flex-wrap mb-3\" },\n        [\n          _c(\n            \"vs-button\",\n            {\n              staticClass: \"flex-1 font-bold h-16\",\n              attrs: { disabled: !_vm.validateForm },\n              on: {\n                click: function($event) {\n                  $event.preventDefault()\n                  return _vm.loginJWT($event)\n                }\n              }\n            },\n            [_vm._v(\"Login\")]\n          )\n        ],\n        1\n      )\n    ]),\n    _c(\"div\", { staticClass: \"flex flex-wrap mb-3 justify-center\" }, [\n      _vm._v(\"\\n    You don't have an account ?\\n    \"),\n      _c(\n        \"span\",\n        {\n          staticClass: \"ml-1 text-primary cursor-pointer\",\n          on: { click: _vm.navigateToRegister }\n        },\n        [_vm._v(\"Create Account\")]\n      )\n    ])\n  ])\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h6\", [\n      _vm._v(\"Email\"),\n      _c(\"span\", { staticClass: \"text-danger\" }, [_vm._v(\"*\")])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h6\", { staticClass: \"mb-4\" }, [\n      _vm._v(\"Password\"),\n      _c(\"span\", { staticClass: \"text-danger\" }, [_vm._v(\"*\")])\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}