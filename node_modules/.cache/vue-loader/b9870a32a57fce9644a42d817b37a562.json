{"remainingRequest":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/src/layouts/components/vertical-nav-menu/VerticalNavMenu1.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/src/layouts/components/vertical-nav-menu/VerticalNavMenu1.vue","mtime":1617441641271},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@import '@/assets/scss/vuexy/components/verticalNavMenu.scss';\n.vs-sidebar {\n  max-width: 400px;\n}\n",{"version":3,"sources":["VerticalNavMenu1.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6YA;AACA;AACA;AACA","file":"VerticalNavMenu1.vue","sourceRoot":"src/layouts/components/vertical-nav-menu","sourcesContent":["<!-- =========================================================================================\n  File Name: VerticalNavMenu.vue\n  Description: Vertical NavMenu Component\n  Component Name: VerticalNavMenu\n  ----------------------------------------------------------------------------------------\n  Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\n    Author: Pixinvent\n  Author URL: http://www.themeforest.net/user/pixinvent\n========================================================================================== -->\n\n<template>\n  <div class=\"parentx\">\n    <vs-sidebar\n      class=\"v-nav-menu items-no-padding\"\n      v-model=\"isVerticalNavMenuActive\"\n      ref=\"verticalNavMenu\"\n      default-index=\"-1\"\n      :click-not-close=\"true\"\n      :reduce-not-rebound=\"reduceNotRebound\"\n      :parent=\"parent\"\n      :hiddenBackground=\"clickNotClose\"\n      :reduce=\"reduce\"\n      v-hammer:swipe=\"onMenuSwipe\"\n    >\n      <div @mouseenter=\"mouseEnter\" @mouseleave=\"mouseLeave\">\n        <!-- Header -->\n        <div\n          class=\"header-sidebar flex items-end justify-between\"\n          slot=\"header\"\n        >\n          <!-- Logo -->\n          <router-link\n            v-if=\"!insideIframe\"\n            tag=\"div\"\n            class=\"vx-logo cursor-pointer flex items-center\"\n            to=\"/\"\n          >\n            <!--logo class=\"w-10 mr-4 fill-current text-primary\" /-->\n            <img\n              src=\"@/assets/images/logo/logo.svg\"\n              class=\"mr-4 text-primary h-12\"\n            />\n            <span\n              class=\"vx-logo-text text-custom-purple\"\n              v-show=\"isMouseEnter || !reduce\"\n              v-if=\"title\"\n              >{{ title }}</span\n            >\n          </router-link>\n          <!-- /Logo -->\n\n          <!-- Menu Buttons -->\n          <div>\n            <!-- Close Button -->\n            <template v-if=\"showCloseButton\">\n              <feather-icon\n                icon=\"XIcon\"\n                class=\"m-0 cursor-pointer\"\n                @click=\"\n                  $store.commit(\n                    'TOGGLE_IS_VERTICAL_NAV_MENU_ACTIVE_STUDIO',\n                    false\n                  )\n                \"\n              />\n            </template>\n\n            <!-- Toggle Buttons -->\n            <template v-else-if=\"!showCloseButton && !verticalNavMenuItemsMin\">\n              <!--<feather-icon\n                id=\"btnVNavMenuMinToggler\"\n                class=\"mr-0 cursor-pointer\"\n                :icon=\"reduce ? 'CircleIcon' : 'DiscIcon'\"\n                svg-classes=\"stroke-current text-primary\"\n                @click=\"toggleReduce(!reduce)\" />-->\n            </template>\n          </div>\n          <!-- /Menu Toggle Buttons -->\n        </div>\n        <!-- /Header -->\n\n        <!-- Header Shadow -->\n        <div class=\"shadow-bottom\" v-show=\"showShadowBottom\" />\n\n        <!-- Menu Items -->\n        <!--component\n          :is=\"sectionScrollbarTag\"\n          ref=\"verticalNavMenuPs\"\n          :class=\"{\n            'scroll-area-v-nav-menu pt-2': sectionScrollbarTag !== 'div'\n          }\"\n          :settings=\"settings\"\n          @ps-scroll-y=\"psSectionScroll\"\n          @scroll=\"psSectionScroll\"\n          :key=\"$vs.rtl\"\n        -->\n        <SidebarPanel />\n        <!--/component-->\n        <!-- /Menu Items -->\n      </div>\n    </vs-sidebar>\n\n    <!-- Swipe Gesture -->\n    <div\n      v-if=\"!isVerticalNavMenuActive\"\n      class=\"v-nav-menu-swipe-area\"\n      v-hammer:swipe=\"onSwipeAreaSwipe\"\n    />\n    <!-- /Swipe Gesture -->\n  </div>\n</template>\n\n<script>\nimport VuePerfectScrollbar from 'vue-perfect-scrollbar';\nimport VNavMenuGroup from './VerticalNavMenuGroup.vue';\nimport VNavMenuItem from './VerticalNavMenuItem.vue';\n\nimport Logo from '../Logo.vue';\nimport SidebarPanel from './SidebarPanel';\n\nexport default {\n  name: 'v-nav-menu',\n  components: {\n    SidebarPanel,\n    VNavMenuGroup,\n    VNavMenuItem,\n    VuePerfectScrollbar,\n    Logo\n  },\n  props: {\n    logo: { type: String },\n    openGroupHover: { type: Boolean, default: false },\n    parent: { type: String },\n    reduceNotRebound: { type: Boolean, default: true },\n    navMenuItems: { type: Array, required: true },\n    title: { type: String }\n  },\n  data: () => ({\n    clickNotClose: false, // disable close navMenu on outside click\n    isMouseEnter: false,\n    reduce: false, // determines if navMenu is reduce - component property\n    showCloseButton: false, // show close button in smaller devices\n    settings: {\n      // perfectScrollbar settings\n      maxScrollbarLength: 60,\n      wheelSpeed: 1,\n      swipeEasing: true\n    },\n    showShadowBottom: false\n  }),\n  computed: {\n    insideIframe() {\n      return this.$store.state.insideIframe;\n    },\n    isGroupActive() {\n      return item => {\n        const path = this.$route.fullPath;\n        const routeParent = this.$route.meta\n          ? this.$route.meta.parent\n          : undefined;\n        let open = false;\n\n        const func = item => {\n          if (item.submenu) {\n            item.submenu.forEach(item => {\n              if (\n                item.url &&\n                (path === item.url || routeParent === item.slug)\n              ) {\n                open = true;\n              } else if (item.submenu) {\n                func(item);\n              }\n            });\n          }\n        };\n        func(item);\n        return open;\n      };\n    },\n    menuItemsUpdated() {\n      const clone = this.navMenuItems.slice();\n\n      for (const [index, item] of this.navMenuItems.entries()) {\n        if (item.header && item.items.length && (index || 1)) {\n          const i = clone.findIndex(ix => ix.header === item.header);\n          for (const [subIndex, subItem] of item.items.entries()) {\n            clone.splice(i + 1 + subIndex, 0, subItem);\n          }\n        }\n      }\n\n      return clone;\n    },\n    isVerticalNavMenuActive: {\n      get() {\n        return this.$store.state.isVerticalNavMenuActiveStudio;\n      },\n      set(val) {\n        this.$store.commit('TOGGLE_IS_VERTICAL_NAV_MENU_ACTIVE_STUDIO', val);\n      }\n    },\n    layoutType() {\n      return this.$store.state.mainLayoutType;\n    },\n    reduceButton: {\n      get() {\n        return this.$store.state.reduceButton;\n      },\n      set(val) {\n        this.$store.commit('TOGGLE_REDUCE_BUTTON', val);\n      }\n    },\n    isVerticalNavMenuReduced() {\n      return Boolean(this.reduce && this.reduceButton);\n    },\n    verticalNavMenuItemsMin() {\n      return this.$store.state.verticalNavMenuItemsMin;\n    },\n    sectionScrollbarTag() {\n      return this.$store.getters.sectionScrollbarTag;\n    },\n    windowWidth() {\n      return this.$store.state.windowWidth;\n    },\n    insideIframe() {\n      return this.$store.state.insideIframe;\n    }\n  },\n  watch: {\n    $route() {\n      if (this.isVerticalNavMenuActive && this.showCloseButton)\n        this.$store.commit('TOGGLE_IS_VERTICAL_NAV_MENU_ACTIVE_STUDIO', false);\n    },\n    reduce(val) {\n      const verticalNavMenuWidth = val\n        ? 'reduced'\n        : this.$store.state.windowWidth < 1200\n        ? 'no-nav-menu'\n        : 'default';\n      this.$store.dispatch('updateVerticalNavMenuWidth', verticalNavMenuWidth);\n\n      setTimeout(function() {\n        window.dispatchEvent(new Event('resize'));\n      }, 100);\n    },\n    layoutType() {\n      this.setVerticalNavMenuWidth();\n    },\n    reduceButton() {\n      this.setVerticalNavMenuWidth();\n    },\n    windowWidth() {\n      this.setVerticalNavMenuWidth();\n    }\n  },\n  methods: {\n    onMenuSwipe(event) {\n      // Swipe Right\n      if (event.direction === 4 && this.$vs.rtl) {\n        if (this.isVerticalNavMenuActive && this.showCloseButton)\n          this.isVerticalNavMenuActive = false;\n      }\n      // Swipe Left\n      else if (event.direction === 2 && !this.$vs.rtl) {\n        if (this.isVerticalNavMenuActive && this.showCloseButton)\n          this.isVerticalNavMenuActive = false;\n      }\n    },\n    onSwipeAreaSwipe(event) {\n      // Swipe Right\n      if (event.direction === 4 && !this.$vs.rtl) {\n        if (!this.isVerticalNavMenuActive && this.showCloseButton)\n          this.isVerticalNavMenuActive = true;\n      }\n      // Swipe Left\n      else if (event.direction === 2 && this.$vs.rtl) {\n        if (!this.isVerticalNavMenuActive && this.showCloseButton)\n          this.isVerticalNavMenuActive = true;\n      }\n    },\n    psSectionScroll() {\n      const scroll_el =\n        this.$refs.verticalNavMenuPs.$el || this.$refs.verticalNavMenuPs;\n      this.showShadowBottom = scroll_el.scrollTop > 0;\n    },\n    mouseEnter() {\n      if (this.reduce)\n        this.$store.commit('UPDATE_VERTICAL_NAV_MENU_ITEMS_MIN', false);\n      this.isMouseEnter = true;\n    },\n    mouseLeave() {\n      if (this.reduce)\n        this.$store.commit('UPDATE_VERTICAL_NAV_MENU_ITEMS_MIN', true);\n      this.isMouseEnter = false;\n    },\n    setVerticalNavMenuWidth() {\n      if (this.windowWidth > 1200 || this.insideIframe) {\n        if (this.layoutType === 'vertical') {\n          // Set reduce\n          this.reduce = !!this.reduceButton;\n\n          // Open NavMenu\n          this.$store.commit('TOGGLE_IS_VERTICAL_NAV_MENU_ACTIVE_STUDIO', true);\n\n          // Set Menu Items Only Icon Mode\n          const verticalNavMenuItemsMin = !!(\n            this.reduceButton && !this.isMouseEnter\n          );\n          this.$store.commit(\n            'UPDATE_VERTICAL_NAV_MENU_ITEMS_MIN',\n            verticalNavMenuItemsMin\n          );\n\n          // Menu Action buttons\n          this.clickNotClose = true;\n          this.showCloseButton = false;\n\n          const verticalNavMenuWidth = this.isVerticalNavMenuReduced\n            ? 'reduced'\n            : 'default';\n          this.$store.dispatch(\n            'updateVerticalNavMenuWidth',\n            verticalNavMenuWidth\n          );\n\n          return;\n        }\n      }\n\n      // Close NavMenu\n      this.$store.commit('TOGGLE_IS_VERTICAL_NAV_MENU_ACTIVE_STUDIO', false);\n\n      // Reduce button\n      if (this.reduceButton) this.reduce = false;\n\n      // Menu Action buttons\n      this.showCloseButton = true;\n      this.clickNotClose = false;\n\n      // Update NavMenu Width\n      this.$store.dispatch('updateVerticalNavMenuWidth', 'no-nav-menu');\n\n      // Remove Only Icon in Menu\n      this.$store.commit('UPDATE_VERTICAL_NAV_MENU_ITEMS_MIN', false);\n\n      // if(this.layoutType === 'vertical' || (this.layoutType === 'horizontal' && this.windowWidth < 1200))\n      // if (this.windowWidth < 1200) {\n\n      //   // Close NavMenu\n      //   this.$store.commit('TOGGLE_IS_VERTICAL_NAV_MENU_ACTIVE_STUDIO', false)\n\n      //   // Reduce button\n      //   if (this.reduceButton) this.reduce = false\n\n      //   // Menu Action buttons\n      //   this.showCloseButton = true\n      //   this.clickNotClose   = false\n\n      //   // Update NavMenu Width\n      //   this.$store.dispatch('updateVerticalNavMenuWidth', 'no-nav-menu')\n\n      //   // Remove Only Icon in Menu\n      //   this.$store.commit('UPDATE_VERTICAL_NAV_MENU_ITEMS_MIN', false)\n\n      // } else {\n\n      //   // Set reduce\n      //   this.reduce = this.reduceButton ? true : false\n\n      //   // Open NavMenu\n      //   this.$store.commit('TOGGLE_IS_VERTICAL_NAV_MENU_ACTIVE_STUDIO', true)\n\n      //   // Set Menu Items Only Icon Mode\n      //   const verticalNavMenuItemsMin = (this.reduceButton && !this.isMouseEnter) ? true : false\n      //   this.$store.commit('UPDATE_VERTICAL_NAV_MENU_ITEMS_MIN', verticalNavMenuItemsMin)\n\n      //   // Menu Action buttons\n      //   this.clickNotClose   = true\n      //   this.showCloseButton = false\n\n      //   const verticalNavMenuWidth   = this.isVerticalNavMenuReduced ? \"reduced\" : \"default\"\n      //   this.$store.dispatch('updateVerticalNavMenuWidth', verticalNavMenuWidth)\n      // }\n    },\n    toggleReduce(val) {\n      this.reduceButton = val;\n      this.setVerticalNavMenuWidth();\n    }\n  },\n  mounted() {\n    this.setVerticalNavMenuWidth();\n  }\n};\n</script>\n\n<style lang=\"scss\">\n@import '@/assets/scss/vuexy/components/verticalNavMenu.scss';\n.vs-sidebar {\n  max-width: 400px;\n}\n</style>\n"]}]}