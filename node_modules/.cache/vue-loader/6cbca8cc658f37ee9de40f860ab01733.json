{"remainingRequest":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/src/layouts/components/horizontal-nav-menu/HorizontalNavMenuHeader.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/src/layouts/components/horizontal-nav-menu/HorizontalNavMenuHeader.vue","mtime":1617441641267},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport HNavMenuGroup from './HorizontalNavMenuGroup.vue';\nimport HNavMenuItem from './HorizontalNavMenuItem.vue';\n\nexport default {\n  props: {\n    header: {\n      type: Object,\n      requried: true\n    },\n    openOnHover: {\n      type: Boolean,\n      default: true\n    }\n  },\n  components: {\n    HNavMenuGroup,\n    HNavMenuItem\n  },\n  data() {\n    return {\n      showChildren: false,\n      isHovered: false,\n      dropRight: false\n    };\n  },\n  computed: {\n    isHeaderActive() {\n      const path = this.$route.fullPath;\n      let active = false;\n      const routeParent = this.$route.meta\n        ? this.$route.meta.parent\n        : undefined;\n\n      this.header.items.forEach(item => {\n        // If item is group\n        if (item.submenu) {\n          if (this.checkGrpChildrenActive(item)) {\n            active = true;\n          }\n        } else if (item.url) {\n          if (path == item.url || routeParent == item.slug) {\n            active = true;\n          }\n        }\n      });\n\n      return active;\n    }\n  },\n  watch: {\n    showChildren() {\n      this.$nextTick(() => {\n        if (this.showChildren) {\n          const dd = this.$refs.headerDropdown;\n          if (\n            dd.getBoundingClientRect().left +\n              dd.offsetWidth -\n              (window.innerWidth - 16) >=\n            0\n          ) {\n            this.dropRight = true;\n          }\n        }\n      });\n    }\n  },\n  methods: {\n    checkGrpChildrenActive(group) {\n      const path = this.$route.fullPath;\n      let active = false;\n      const routeParent = this.$route.meta\n        ? this.$route.meta.parent\n        : undefined;\n\n      if (group.submenu) {\n        group.submenu.forEach(item => {\n          if ((path === item.url || routeParent === item.slug) && item.slug) {\n            active = true;\n          } else if (item.submenu) {\n            // eslint-disable-next-line no-unused-expressions\n            this.checkGrpChildrenActive(item) ? (active = true) : null;\n          }\n        });\n      }\n\n      return active;\n    },\n    hovered(val = true) {\n      this.isHovered = val;\n      if (this.openOnHover) {\n        val ? (this.showChildren = true) : (this.showChildren = false);\n      }\n    }\n  }\n};\n",{"version":3,"sources":["HorizontalNavMenuHeader.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4DA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"HorizontalNavMenuHeader.vue","sourceRoot":"src/layouts/components/horizontal-nav-menu","sourcesContent":["<template>\n  <div\n    class=\"nav-header py-4\"\n    @mouseover=\"hovered\"\n    @mouseleave=\"hovered(false)\"\n    @click=\"showChildren = !showChildren\"\n  >\n    <!-- header -->\n    <div\n      class=\"header-label flex items-center cursor-pointer relative px-5 py-2\"\n      :class=\"[\n        { 'text-white bg-primary-gradient header-active': isHeaderActive },\n        { 'header-open': isHovered || showChildren }\n      ]\"\n    >\n      <feather-icon :icon=\"header.icon\" svgClasses=\"h-5 w-5\" class=\"mr-3\" />\n      <span class=\"whitespace-no-wrap\">{{ header.header }}</span>\n      <feather-icon icon=\"ChevronDownIcon\" svgClasses=\"h-4 w-4\" class=\"ml-1\" />\n    </div>\n\n    <!-- Children -->\n    <transition name=\"fade-top-2x\">\n      <ul\n        class=\"header-children h-nav-menu-dd shadow-drop text-intial absolute shadow-lg py-2\"\n        :class=\"{ 'dd-right': dropRight }\"\n        v-show=\"showChildren\"\n        ref=\"headerDropdown\"\n      >\n        <li v-for=\"(item, index) in header.items\" :key=\"item.name\">\n          <template v-if=\"!item.submenu\">\n            <h-nav-menu-item\n              :to=\"item.slug != 'external' ? item.url : ''\"\n              :href=\"item.slug == 'external' ? item.url : ''\"\n              :icon=\"item.icon\"\n              :target=\"item.target\"\n              :isDisabled=\"item.isDisabled\"\n              :slug=\"item.slug\"\n            >\n              <span class=\"truncate\">{{ item.name }}</span>\n              <vs-chip :color=\"item.tagColor\" v-if=\"item.tag\">{{\n                item.tag\n              }}</vs-chip>\n            </h-nav-menu-item>\n          </template>\n          <template v-else>\n            <h-nav-menu-group\n              openHover\n              :key=\"`group-${index}`\"\n              :group=\"item\"\n              :groupIndex=\"index\"\n              :open=\"checkGrpChildrenActive(item)\"\n            />\n          </template>\n        </li>\n      </ul>\n    </transition>\n  </div>\n</template>\n\n<script>\nimport HNavMenuGroup from './HorizontalNavMenuGroup.vue';\nimport HNavMenuItem from './HorizontalNavMenuItem.vue';\n\nexport default {\n  props: {\n    header: {\n      type: Object,\n      requried: true\n    },\n    openOnHover: {\n      type: Boolean,\n      default: true\n    }\n  },\n  components: {\n    HNavMenuGroup,\n    HNavMenuItem\n  },\n  data() {\n    return {\n      showChildren: false,\n      isHovered: false,\n      dropRight: false\n    };\n  },\n  computed: {\n    isHeaderActive() {\n      const path = this.$route.fullPath;\n      let active = false;\n      const routeParent = this.$route.meta\n        ? this.$route.meta.parent\n        : undefined;\n\n      this.header.items.forEach(item => {\n        // If item is group\n        if (item.submenu) {\n          if (this.checkGrpChildrenActive(item)) {\n            active = true;\n          }\n        } else if (item.url) {\n          if (path == item.url || routeParent == item.slug) {\n            active = true;\n          }\n        }\n      });\n\n      return active;\n    }\n  },\n  watch: {\n    showChildren() {\n      this.$nextTick(() => {\n        if (this.showChildren) {\n          const dd = this.$refs.headerDropdown;\n          if (\n            dd.getBoundingClientRect().left +\n              dd.offsetWidth -\n              (window.innerWidth - 16) >=\n            0\n          ) {\n            this.dropRight = true;\n          }\n        }\n      });\n    }\n  },\n  methods: {\n    checkGrpChildrenActive(group) {\n      const path = this.$route.fullPath;\n      let active = false;\n      const routeParent = this.$route.meta\n        ? this.$route.meta.parent\n        : undefined;\n\n      if (group.submenu) {\n        group.submenu.forEach(item => {\n          if ((path === item.url || routeParent === item.slug) && item.slug) {\n            active = true;\n          } else if (item.submenu) {\n            // eslint-disable-next-line no-unused-expressions\n            this.checkGrpChildrenActive(item) ? (active = true) : null;\n          }\n        });\n      }\n\n      return active;\n    },\n    hovered(val = true) {\n      this.isHovered = val;\n      if (this.openOnHover) {\n        val ? (this.showChildren = true) : (this.showChildren = false);\n      }\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\">\n@import '@/assets/scss/vuexy/components/horizontalNavMenuHeader.scss';\n</style>\n"]}]}