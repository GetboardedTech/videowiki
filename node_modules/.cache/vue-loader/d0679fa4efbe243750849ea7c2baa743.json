{"remainingRequest":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/src/views/login/LoginJWT.vue?vue&type=style&index=0&id=5289cb3e&scoped=true&lang=css&","dependencies":[{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/src/views/login/LoginJWT.vue","mtime":1617441641275},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.modified-input {\n  height: 60px;\n  border: none;\n  /* border-radius: 16px; */\n  background: #f3f3f3;\n  font-family: Montserrat;\n  border-radius: 4px;\n  padding: 2rem;\n  width: 100%;\n}\n.input-icon {\n  position: absolute;\n  right: 5%;\n  bottom: 30%;\n  cursor: pointer;\n}\n",{"version":3,"sources":["LoginJWT.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"LoginJWT.vue","sourceRoot":"src/views/login","sourcesContent":["<template>\n  <div>\n    <form>\n      <div class=\"vx-row mb-6\">\n        <div class=\"vx-col w-full\">\n          <div class=\"mb-4\">\n            <h6>Email<span class=\"text-danger\">*</span></h6>\n            <div class=\"h-2\">\n              <span class=\"text-danger text-sm\" v-show=\"errors.has('email')\">{{\n                errors.first('email')\n              }}</span>\n            </div>\n          </div>\n          <input\n            v-validate=\"'required|email'\"\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Enter email address\"\n            class=\"modified-input\"\n            autocomplete=\"off\"\n            v-model=\"email\"\n          />\n        </div>\n      </div>\n      <div class=\"vx-row mb-6\">\n        <div class=\"vx-col w-full\">\n          <h6 class=\"mb-4\">Password<span class=\"text-danger\">*</span></h6>\n          <div class=\"flex relative\">\n            <input\n              :type=\"showPassword ? 'text' : 'password'\"\n              data-vv-validate-on=\"blur\"\n              v-validate=\"'required'\"\n              name=\"password\"\n              placeholder=\"Enter password\"\n              class=\"modified-input\"\n              autocomplete=\"off\"\n              v-model=\"password\"\n            />\n            <vs-icon\n              :icon=\"showPassword ? 'visibility_off' : 'visibility'\"\n              class=\"input-icon\"\n              @click=\"showPassword = !showPassword\"\n              size=\"25px\"\n            />\n          </div>\n        </div>\n      </div>\n\n      <div class=\"flex flex-wrap justify-between my-5\" v-if=\"!popup\">\n        <vs-checkbox v-model=\"checkbox_remember_me\" class=\"mb-3\"\n          >Remember Me</vs-checkbox\n        >\n        <router-link to=\"/pages/forgot-password\">Forgot Password?</router-link>\n      </div>\n      <div class=\"flex flex-wrap mb-3\">\n        <vs-button\n          :disabled=\"!validateForm\"\n          @click.prevent=\"loginJWT\"\n          class=\"flex-1 font-bold h-16\"\n          >Login</vs-button\n        >\n        <!--vs-button type=\"border\" @click=\"registerUser\">Register</vs-button-->\n      </div>\n    </form>\n    <div class=\"flex flex-wrap mb-3 justify-center\">\n      You don't have an account ?\n      <span class=\"ml-1 text-primary cursor-pointer\" @click=\"navigateToRegister\"\n        >Create Account</span\n      >\n      <!--vs-button type=\"border\" @click=\"registerUser\">Create Account</vs-button-->\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    popup: {\n      type: Boolean,\n      default: false,\n      required: false\n    }\n  },\n  data() {\n    return {\n      email: '',\n      password: '',\n      checkbox_remember_me: false,\n      showPassword: false\n    };\n  },\n  computed: {\n    validateForm() {\n      return !this.errors.any() && this.email !== '' && this.password !== '';\n    }\n  },\n  methods: {\n    checkLogin() {\n      // If user is already logged in notify\n      if (this.$store.state.auth.isUserLoggedIn()) {\n        // Close animation if passed as payload\n        // this.$vs.loading.close()\n\n        this.$vs.notify({\n          title: 'Login Attempt',\n          text: 'You are already logged in!',\n          iconPack: 'feather',\n          icon: 'icon-alert-circle',\n          color: 'warning'\n        });\n\n        return false;\n      }\n      return true;\n    },\n    loginJWT() {\n      if (!this.checkLogin()) return;\n\n      // Loading\n      this.$vs.loading();\n\n      const payload = {\n        checkbox_remember_me: this.checkbox_remember_me,\n        userDetails: {\n          email: this.email,\n          password: this.password\n        }\n      };\n\n      this.$store\n        .dispatch('auth/login', payload)\n        .then(() => {\n          this.$vs.loading.close();\n          // window.location.href = '/';\n          this.$acl.change('user');\n          if (this.popup) this.$emit('loggedIn');\n          else this.$router.push('/');\n        })\n        .catch(error => {\n          this.$vs.loading.close();\n          this.$vs.notify({\n            title: 'Error',\n            text: error.message,\n            iconPack: 'feather',\n            icon: 'icon-alert-circle',\n            color: 'danger'\n          });\n        });\n    },\n    registerUser() {\n      if (!this.checkLogin()) return;\n      this.$router.push('/register').catch(() => {});\n    },\n    navigateToRegister() {\n      if (this.popup) this.$emit('toRegister');\n      else this.$router.push('/register');\n    }\n  }\n};\n</script>\n<style scoped>\n.modified-input {\n  height: 60px;\n  border: none;\n  /* border-radius: 16px; */\n  background: #f3f3f3;\n  font-family: Montserrat;\n  border-radius: 4px;\n  padding: 2rem;\n  width: 100%;\n}\n.input-icon {\n  position: absolute;\n  right: 5%;\n  bottom: 30%;\n  cursor: pointer;\n}\n</style>\n<!--template>\n  <div>\n    <vs-input\n      v-validate=\"'required|email|min:3'\"\n      data-vv-validate-on=\"blur\"\n      name=\"email\"\n      icon-no-border\n      icon=\"icon icon-user\"\n      icon-pack=\"feather\"\n      label-placeholder=\"Email\"\n      v-model=\"email\"\n      class=\"w-full\"\n    />\n    <span class=\"text-danger text-sm\">{{ errors.first('email') }}</span>\n\n    <vs-input\n      data-vv-validate-on=\"blur\"\n      v-validate=\"'required|min:6|max:10'\"\n      type=\"password\"\n      name=\"password\"\n      icon-no-border\n      icon=\"icon icon-lock\"\n      icon-pack=\"feather\"\n      label-placeholder=\"Password\"\n      v-model=\"password\"\n      class=\"w-full mt-6\"\n    />\n    <span class=\"text-danger text-sm\">{{ errors.first('password') }}</span>\n\n    <div class=\"flex flex-wrap justify-between my-5\">\n      <vs-checkbox v-model=\"checkbox_remember_me\" class=\"mb-3\"\n        >Remember Me</vs-checkbox\n      >\n      <router-link to=\"/pages/forgot-password\">Forgot Password?</router-link>\n    </div>\n    <div class=\"flex flex-wrap justify-between mb-3\">\n      <vs-button :disabled=\"!validateForm\" @click=\"loginJWT\">Login</vs-button>\n      <vs-button type=\"border\" @click=\"registerUser\">Register</vs-button>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      email: '',\n      password: '',\n      checkbox_remember_me: false\n    };\n  },\n  computed: {\n    validateForm() {\n      return !this.errors.any() && this.email !== '' && this.password !== '';\n    }\n  },\n  methods: {\n    checkLogin() {\n      // If user is already logged in notify\n      if (this.$store.state.auth.isUserLoggedIn()) {\n        // Close animation if passed as payload\n        // this.$vs.loading.close()\n\n        this.$vs.notify({\n          title: 'Login Attempt',\n          text: 'You are already logged in!',\n          iconPack: 'feather',\n          icon: 'icon-alert-circle',\n          color: 'warning'\n        });\n\n        return false;\n      }\n      return true;\n    },\n    loginJWT() {\n      if (!this.checkLogin()) return;\n\n      // Loading\n      this.$vs.loading();\n\n      const payload = {\n        checkbox_remember_me: this.checkbox_remember_me,\n        userDetails: {\n          email: this.email,\n          password: this.password\n        }\n      };\n\n      this.$store\n        .dispatch('auth/login', payload)\n        .then(() => {\n          this.$vs.loading.close();\n          window.location.href = '/dashboard';\n        })\n        .catch(error => {\n          this.$vs.loading.close();\n          this.$vs.notify({\n            title: 'Error',\n            text: error.message,\n            iconPack: 'feather',\n            icon: 'icon-alert-circle',\n            color: 'danger'\n          });\n        });\n    },\n    registerUser() {\n      if (!this.checkLogin()) return;\n      this.$router.push('/register').catch(() => {});\n    }\n  }\n};\n</script-->\n"]}]}