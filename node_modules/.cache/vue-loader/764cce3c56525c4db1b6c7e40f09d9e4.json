{"remainingRequest":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/src/views/register/RegisterJWT.vue?vue&type=template&id=005920b2&scoped=true&","dependencies":[{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/src/views/register/RegisterJWT.vue","mtime":1617441641275},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", [\n    _c(\n      \"form\",\n      [\n        _c(\"div\", { staticClass: \"flex mb-6\" }, [\n          _c(\"div\", { staticClass: \"w-1/2 mr-2\" }, [\n            _vm._m(0),\n            _c(\"input\", {\n              directives: [\n                {\n                  name: \"model\",\n                  rawName: \"v-model\",\n                  value: _vm.firstName,\n                  expression: \"firstName\"\n                }\n              ],\n              staticClass: \"modified-input\",\n              attrs: {\n                type: \"text\",\n                placeholder: \"Enter First Name\",\n                autocomplete: \"off\"\n              },\n              domProps: { value: _vm.firstName },\n              on: {\n                input: function($event) {\n                  if ($event.target.composing) {\n                    return\n                  }\n                  _vm.firstName = $event.target.value\n                }\n              }\n            })\n          ]),\n          _c(\"div\", { staticClass: \"w-1/2\" }, [\n            _vm._m(1),\n            _c(\"input\", {\n              directives: [\n                {\n                  name: \"model\",\n                  rawName: \"v-model\",\n                  value: _vm.lastName,\n                  expression: \"lastName\"\n                }\n              ],\n              staticClass: \"modified-input\",\n              attrs: {\n                type: \"text\",\n                placeholder: \"Enter Last Name\",\n                autocomplete: \"off\"\n              },\n              domProps: { value: _vm.lastName },\n              on: {\n                input: function($event) {\n                  if ($event.target.composing) {\n                    return\n                  }\n                  _vm.lastName = $event.target.value\n                }\n              }\n            })\n          ])\n        ]),\n        _c(\"div\", { staticClass: \"vx-row mb-6\" }, [\n          _c(\"div\", { staticClass: \"vx-col w-full\" }, [\n            _vm._m(2),\n            _c(\"input\", {\n              directives: [\n                {\n                  name: \"model\",\n                  rawName: \"v-model\",\n                  value: _vm.email,\n                  expression: \"email\"\n                }\n              ],\n              staticClass: \"modified-input\",\n              attrs: {\n                type: \"email\",\n                placeholder: \"Enter email address\",\n                autocomplete: \"off\"\n              },\n              domProps: { value: _vm.email },\n              on: {\n                input: function($event) {\n                  if ($event.target.composing) {\n                    return\n                  }\n                  _vm.email = $event.target.value\n                }\n              }\n            })\n          ])\n        ]),\n        _c(\"div\", { staticClass: \"vx-row mb-6\" }, [\n          _c(\"div\", { staticClass: \"vx-col w-full\" }, [\n            _vm._m(3),\n            _c(\n              \"div\",\n              { staticClass: \"flex relative\" },\n              [\n                (_vm.create_showPassword ? \"text\" : \"password\") === \"checkbox\"\n                  ? _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.password,\n                          expression: \"password\"\n                        }\n                      ],\n                      staticClass: \"modified-input\",\n                      attrs: {\n                        placeholder: \"Enter password\",\n                        autocomplete: \"off\",\n                        type: \"checkbox\"\n                      },\n                      domProps: {\n                        checked: Array.isArray(_vm.password)\n                          ? _vm._i(_vm.password, null) > -1\n                          : _vm.password\n                      },\n                      on: {\n                        change: function($event) {\n                          var $$a = _vm.password,\n                            $$el = $event.target,\n                            $$c = $$el.checked ? true : false\n                          if (Array.isArray($$a)) {\n                            var $$v = null,\n                              $$i = _vm._i($$a, $$v)\n                            if ($$el.checked) {\n                              $$i < 0 && (_vm.password = $$a.concat([$$v]))\n                            } else {\n                              $$i > -1 &&\n                                (_vm.password = $$a\n                                  .slice(0, $$i)\n                                  .concat($$a.slice($$i + 1)))\n                            }\n                          } else {\n                            _vm.password = $$c\n                          }\n                        }\n                      }\n                    })\n                  : (_vm.create_showPassword ? \"text\" : \"password\") === \"radio\"\n                  ? _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.password,\n                          expression: \"password\"\n                        }\n                      ],\n                      staticClass: \"modified-input\",\n                      attrs: {\n                        placeholder: \"Enter password\",\n                        autocomplete: \"off\",\n                        type: \"radio\"\n                      },\n                      domProps: { checked: _vm._q(_vm.password, null) },\n                      on: {\n                        change: function($event) {\n                          _vm.password = null\n                        }\n                      }\n                    })\n                  : _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.password,\n                          expression: \"password\"\n                        }\n                      ],\n                      staticClass: \"modified-input\",\n                      attrs: {\n                        placeholder: \"Enter password\",\n                        autocomplete: \"off\",\n                        type: _vm.create_showPassword ? \"text\" : \"password\"\n                      },\n                      domProps: { value: _vm.password },\n                      on: {\n                        input: function($event) {\n                          if ($event.target.composing) {\n                            return\n                          }\n                          _vm.password = $event.target.value\n                        }\n                      }\n                    }),\n                _c(\"vs-icon\", {\n                  staticClass: \"input-icon\",\n                  attrs: {\n                    icon: _vm.create_showPassword\n                      ? \"visibility_off\"\n                      : \"visibility\",\n                    size: \"25px\"\n                  },\n                  on: {\n                    click: function($event) {\n                      _vm.create_showPassword = !_vm.create_showPassword\n                    }\n                  }\n                })\n              ],\n              1\n            )\n          ])\n        ]),\n        _c(\"div\", { staticClass: \"vx-row mb-6\" }, [\n          _c(\"div\", { staticClass: \"vx-col w-full\" }, [\n            _vm._m(4),\n            _c(\n              \"div\",\n              { staticClass: \"flex relative\" },\n              [\n                (_vm.repeat_showPassword ? \"text\" : \"password\") === \"checkbox\"\n                  ? _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.confirm_password,\n                          expression: \"confirm_password\"\n                        }\n                      ],\n                      staticClass: \"modified-input\",\n                      attrs: {\n                        placeholder: \"Enter password\",\n                        autocomplete: \"off\",\n                        type: \"checkbox\"\n                      },\n                      domProps: {\n                        checked: Array.isArray(_vm.confirm_password)\n                          ? _vm._i(_vm.confirm_password, null) > -1\n                          : _vm.confirm_password\n                      },\n                      on: {\n                        change: function($event) {\n                          var $$a = _vm.confirm_password,\n                            $$el = $event.target,\n                            $$c = $$el.checked ? true : false\n                          if (Array.isArray($$a)) {\n                            var $$v = null,\n                              $$i = _vm._i($$a, $$v)\n                            if ($$el.checked) {\n                              $$i < 0 &&\n                                (_vm.confirm_password = $$a.concat([$$v]))\n                            } else {\n                              $$i > -1 &&\n                                (_vm.confirm_password = $$a\n                                  .slice(0, $$i)\n                                  .concat($$a.slice($$i + 1)))\n                            }\n                          } else {\n                            _vm.confirm_password = $$c\n                          }\n                        }\n                      }\n                    })\n                  : (_vm.repeat_showPassword ? \"text\" : \"password\") === \"radio\"\n                  ? _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.confirm_password,\n                          expression: \"confirm_password\"\n                        }\n                      ],\n                      staticClass: \"modified-input\",\n                      attrs: {\n                        placeholder: \"Enter password\",\n                        autocomplete: \"off\",\n                        type: \"radio\"\n                      },\n                      domProps: { checked: _vm._q(_vm.confirm_password, null) },\n                      on: {\n                        change: function($event) {\n                          _vm.confirm_password = null\n                        }\n                      }\n                    })\n                  : _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.confirm_password,\n                          expression: \"confirm_password\"\n                        }\n                      ],\n                      staticClass: \"modified-input\",\n                      attrs: {\n                        placeholder: \"Enter password\",\n                        autocomplete: \"off\",\n                        type: _vm.repeat_showPassword ? \"text\" : \"password\"\n                      },\n                      domProps: { value: _vm.confirm_password },\n                      on: {\n                        input: function($event) {\n                          if ($event.target.composing) {\n                            return\n                          }\n                          _vm.confirm_password = $event.target.value\n                        }\n                      }\n                    }),\n                _c(\"vs-icon\", {\n                  staticClass: \"input-icon\",\n                  attrs: {\n                    icon: _vm.repeat_showPassword\n                      ? \"visibility_off\"\n                      : \"visibility\",\n                    size: \"25px\"\n                  },\n                  on: {\n                    click: function($event) {\n                      _vm.repeat_showPassword = !_vm.repeat_showPassword\n                    }\n                  }\n                })\n              ],\n              1\n            )\n          ])\n        ]),\n        _c(\n          \"vs-checkbox\",\n          {\n            staticClass: \"mt-6\",\n            model: {\n              value: _vm.isTermsConditionAccepted,\n              callback: function($$v) {\n                _vm.isTermsConditionAccepted = $$v\n              },\n              expression: \"isTermsConditionAccepted\"\n            }\n          },\n          [_vm._v(\"I accept the terms & conditions.\")]\n        ),\n        _c(\n          \"div\",\n          { staticClass: \"flex flex-wrap mb-3\" },\n          [\n            _c(\n              \"vs-button\",\n              {\n                staticClass: \"mt-6 flex-1 font-bold h-16\",\n                attrs: { disabled: !_vm.validateForm },\n                on: {\n                  click: function($event) {\n                    $event.preventDefault()\n                    return _vm.registerUserJWt($event)\n                  }\n                }\n              },\n              [_vm._v(\"\\n        Create Account\")]\n            )\n          ],\n          1\n        )\n      ],\n      1\n    ),\n    _c(\"div\", { staticClass: \"flex flex-wrap mb-3 justify-center\" }, [\n      _vm._v(\"\\n    Do you already have an account?\\n    \"),\n      _c(\n        \"span\",\n        {\n          staticClass: \"ml-1 text-primary cursor-pointer\",\n          on: { click: _vm.navigateToLogin }\n        },\n        [_vm._v(\"Login\")]\n      )\n    ])\n  ])\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h6\", { staticClass: \"mb-4\" }, [\n      _vm._v(\"First Name\"),\n      _c(\"span\", { staticClass: \"text-danger\" }, [_vm._v(\"*\")])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h6\", { staticClass: \"mb-4\" }, [\n      _vm._v(\"Last Name\"),\n      _c(\"span\", { staticClass: \"text-danger\" }, [_vm._v(\"*\")])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h6\", { staticClass: \"mb-4\" }, [\n      _vm._v(\"Email\"),\n      _c(\"span\", { staticClass: \"text-danger\" }, [_vm._v(\"*\")])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h6\", { staticClass: \"mb-4\" }, [\n      _vm._v(\"\\n          Create Password\"),\n      _c(\"span\", { staticClass: \"text-danger\" }, [_vm._v(\"*\")])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h6\", { staticClass: \"mb-4\" }, [\n      _vm._v(\"\\n          Repeat Password\"),\n      _c(\"span\", { staticClass: \"text-danger\" }, [_vm._v(\"*\")])\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}