{"remainingRequest":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/src/views/pages/AddMusic.vue?vue&type=style&index=0&id=c39aedae&scoped=true&lang=css&","dependencies":[{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/src/views/pages/AddMusic.vue","mtime":1617441641275},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.vs-con-loading__container {\n  z-index: 10 !important;\n}\n.scene-card {\n  min-height: 30rem;\n  /*background: #7367F0;\n    color: white;*/\n  opacity: 0.2;\n  box-shadow: none;\n  margin-bottom: 10rem;\n}\n.activeScene {\n  box-shadow: 0px 4px 25px 0px rgba(0, 0, 0, 0.1) !important;\n  -webkit-box-shadow: 0px 4px 25px 0px rgba(0, 0, 0, 0.1) !important;\n  opacity: 1 !important;\n}\n.items-center {\n  text-align: center;\n  text-align: -moz-center;\n  text-align: -webkit-center;\n}\n",{"version":3,"sources":["AddMusic.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AddMusic.vue","sourceRoot":"src/views/pages","sourcesContent":["<template>\n  <div>\n    <vx-card\n      v-for=\"(s, indexs) in $store.state.studio.scenes\"\n      :key=\"indexs\"\n      :id=\"'scene_card_' + indexs\"\n      class=\"scene-card vs-con-loading__container\"\n      :class=\"{\n        activeScene:\n          $store.state.studio.currentActiveScene === parseInt(indexs) + 1,\n      }\"\n    >\n      <p class=\"font-semibold items-left mb-base\" style=\"white-space: normal\">\n        {{ s }}\n      </p>\n      <div v-if=\"!!addedAudioVideos[parseInt(indexs) + 1]\" class=\"mb-base\">\n        <video\n          width=\"100%\"\n          height=\"auto\"\n          controls\n          muted\n          :id=\"'video_' + indexs\"\n          :src=\"addedAudioVideos[parseInt(indexs) + 1]\"\n        >\n          {{ $t('studio.errors.e1') }}\n        </video>\n      </div>\n      <div\n        v-else-if=\"!!preparedScenesVideos[parseInt(indexs) + 1]\"\n        class=\"mb-base\"\n      >\n        <video\n          width=\"100%\"\n          height=\"auto\"\n          controls\n          :id=\"'video_' + indexs\"\n          muted\n        >\n          <!--source\n            :src=\"\n              constants.apiUrl +\n              '/' +\n              preparedScenesVideos[parseInt(indexs) + 1]\n            \"\n            type=\"video/mp4\"\n          /-->\n          <source\n            :src=\"preparedScenesVideos[parseInt(indexs) + 1]\"\n            type=\"video/mp4\"\n          />\n          {{ $t('studio.errors.e1') }}\n        </video>\n      </div>\n      <div v-else class=\"mb-base\">\n        <img\n          v-if=\"isImageUrl(selectedFromLibraryVideos[parseInt(indexs) + 1])\"\n          width=\"100%\"\n          height=\"auto\"\n          :src=\"selectedFromLibraryVideos[parseInt(indexs) + 1]\"\n        />\n        <video\n          v-else\n          width=\"100%\"\n          height=\"auto\"\n          :id=\"'video_' + indexs\"\n          controls\n          :src=\"selectedFromLibraryVideos[parseInt(indexs) + 1]\"\n        >\n          {{ $t('studio.errors.e1') }}\n        </video>\n      </div>\n      <!--div v-else>\n        <video width=\"100%\" height=\"auto\" id=\"myvid\" controls :src=\"initialVideo(indexs)\">\n          {{ $t('studio.errors.e1') }}\n        </video>\n      </div-->\n      <!--<div v-else class=\"items-left mb-base\">\n        <h6 class=\"mb-2\">{{$store.state.videoWiki.selectedAudios[indexs].name}}</h6>\n        <audio class=\"audio-el\" controls>\n          <source :src=\"$store.state.videoWiki.API_URL + $store.state.videoWiki.selectedAudios[indexs].url\" type=\"audio/mpeg\">\n          Your browser does not support the audio element.\n        </audio>\n      </div>-->\n      <!-- <vs-button\n        class=\"mb-3\"\n        id=\"vidbutton\"\n        @click=\"playVid\"\n        >Play Video</vs-button\n      > -->\n      <audio-recorder\n        :sceneNum=\"indexs\"\n        @updateComponent=\"updateComponent\"\n      ></audio-recorder>\n      <!--ul :class=\"'playlist_' + indexs\" class=\"mb-base\"></ul-->\n      <!--div class=\"mb-base\"></div-->\n    </vx-card>\n    <div style=\"margin-bottom: 150px\"></div>\n  </div>\n</template>\n\n<script>\nimport constants from '../../../constant';\nimport AudioRecorder from '../components/audioRecorder';\nexport default {\n  name: 'AddMusic',\n  components: { AudioRecorder },\n  data() {\n    return {\n      constants,\n    };\n  },\n  computed: {\n    selectedFromLibraryVideos() {\n      return this.$store.state.studio.selectedFromLibraryVideos;\n    },\n    addedAudioVideos() {\n      return this.$store.state.studio.addedAudioVideos;\n    },\n    preparedScenesVideos() {\n      return this.$store.state.studio.preparedScenesVideos;\n    },\n    insideIframe() {\n      return this.$store.state.insideIframe;\n    }\n  },\n  methods: {\n    isImageUrl(urlString) {\n      try {\n        const imgExtentions = ['jpg', 'png', 'jpeg'];\n        urlString = new URL(urlString);\n        return imgExtentions.includes(urlString.pathname.split('.')[1]);\n      } catch (err) {\n        return false;\n      }\n    },\n    updateComponent() {\n      this.$forceUpdate();\n    },\n    callback(msg) {\n      console.debug('Event: ', msg);\n    },\n    // audioVideoMerge() {},\n    updateScroll() {\n      // let scrollPosition = window.scrollY\n      // console.log(scrollPosition)\n      for (const s in this.$store.state.studio.scenes) {\n        const rect = document\n          .getElementById('scene_card_' + s)\n          .getBoundingClientRect();\n        // console.log(s, \"bounding client\", rect.top, rect.bottom);\n\n        if (rect.top < 200 && rect.bottom > (this.insideIframe ? 420 : 500)) {\n          // console.log(s+\" is active\")\n          this.$store.commit('studio/setActiveScene', parseInt(s) + 1);\n        }\n      }\n    },\n  },\n  mounted() {\n    window.addEventListener('scroll', this.updateScroll);\n    const el = document.getElementById(\n      `scene_card_${this.$store.state.studio.currentActiveScene - 1}`\n    );\n    el.scrollIntoView({ block: 'center' });\n  },\n  destroyed() {\n    window.removeEventListener('scroll', this.updateScroll);\n  },\n};\n</script>\n\n<style scoped>\n.vs-con-loading__container {\n  z-index: 10 !important;\n}\n.scene-card {\n  min-height: 30rem;\n  /*background: #7367F0;\n    color: white;*/\n  opacity: 0.2;\n  box-shadow: none;\n  margin-bottom: 10rem;\n}\n.activeScene {\n  box-shadow: 0px 4px 25px 0px rgba(0, 0, 0, 0.1) !important;\n  -webkit-box-shadow: 0px 4px 25px 0px rgba(0, 0, 0, 0.1) !important;\n  opacity: 1 !important;\n}\n.items-center {\n  text-align: center;\n  text-align: -moz-center;\n  text-align: -webkit-center;\n}\n</style>\n"]}]}