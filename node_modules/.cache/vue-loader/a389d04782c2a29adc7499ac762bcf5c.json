{"remainingRequest":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/src/layouts/components/vertical-nav-menu/PanelItems/ScenesPanel.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/src/layouts/components/vertical-nav-menu/PanelItems/ScenesPanel.vue","mtime":1617441641267},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport VuePerfectScrollbar from 'vue-perfect-scrollbar';\nimport SearchModal from '@/components/search/SearchModal';\nimport VideoNotFound from '@/components/VideoNotFound';\nimport VideoPreview from './components/VideoPreview';\nimport CustomDropdown from './components/CustomDropdown';\nexport default {\n  name: 'ScenesPanel',\n  components: {\n    VideoNotFound,\n    SearchModal,\n    VideoPreview,\n    VuePerfectScrollbar,\n    CustomDropdown\n  },\n  data() {\n    return {\n      showSearchModal: false,\n      currentScene: null,\n      pptImage: false,\n      settings: {\n        // perfectScrollbar settings\n        maxScrollbarLength: 60,\n        wheelSpeed: 1,\n        swipeEasing: true,\n        scrollXMarginOffset: 100\n      },\n      transitionList: [\n        { value: 'no_motion', label: 'No Motion' },\n        { value: 'slide_in_right', label: 'Slide in Right' },\n        { value: 'slide_in_left', label: 'Slide in Left' },\n        { value: 'slide_in_bottom', label: 'Slide in Bottom' },\n        { value: 'slide_in_top', label: 'Slide in top' },\n        { value: 'fade_in', label: 'Fade In' },\n        { value: 'fade_out', label: 'Fade Out' }\n      ]\n    };\n  },\n  computed: {\n    selectedVideos() {\n      return this.$store.state.studio.selectedFromLibraryVideos.slice(1);\n    },\n    scrollbarTag() {\n      return this.$store.getters.scrollbarTag;\n    },\n    sceneLength() {\n      return Object.keys(this.$store.state.studio.scenes).length;\n    },\n    sceneTransitionList() {\n      return this.$store.state.studio.sceneTransition;\n    }\n  },\n  methods: {\n    isImageUrl(urlString) {\n      const imgExtentions = ['jpg', 'png', 'jpeg'];\n      urlString = new URL(urlString);\n      return imgExtentions.includes(urlString.pathname.split('.')[1]);\n    },\n    loadSearchModal(index) {\n      this.showSearchModal = true;\n      this.currentScene = index;\n    },\n    setTransition(idx, value) {\n      this.$store.commit('studio/setTransition', {\n        sceneNum: idx,\n        value\n      });\n    },\n    getTransition(idx) {\n      if (this.sceneTransitionList[idx]) {\n        return this.sceneTransitionList[idx];\n      }\n      this.setTransition(idx, 'no_motion');\n      return 'No Motion';\n    },\n    scrollToScene(sceneNumber) {\n      var element = document.getElementById(`scene_card_${sceneNumber}`);\n      const headerOffset = 80;\n      var elementPosition = element.getBoundingClientRect().top;\n      var offsetPosition = elementPosition - headerOffset + window.pageYOffset;\n      window.scrollTo({\n        top: offsetPosition,\n        behavior: 'smooth'\n      });\n    },\n    prepareAllScenes() {\n      /* this.$store.commit(\n        'studio/setPrepareAllScenes',\n        this.$store.state.studio.selectedFromLibraryVideos\n      ); */\n      this.$store.commit('studio/skipSubtitles');\n      this.$store.commit('studio/toggleMusic');\n    },\n    addScene(index) {\n      this.$store.commit('studio/addScene', index);\n    },\n    deleteScene(index) {\n      if (this.selectedVideos.length > 1) {\n        this.$store.commit('studio/deleteScene', index);\n      } else {\n        this.$vs.notify({\n          title: 'Alert',\n          text: 'Cannot delete last scene',\n          color: 'primary'\n        });\n      }\n    }\n  }\n};\n",{"version":3,"sources":["ScenesPanel.vue"],"names":[],"mappingsfile":"ScenesPanel.vue","sourceRoot":"src/layouts/components/vertical-nav-menu/PanelItems","sourcesContent":["<template>\n  <div class=\"vx-card cursor-default\" style=\"height: 100%\">\n    <div class=\"vx-card__collapsible-content\">\n      <div class=\"vx-card__body\">\n        <div class=\"-mr-4\">\n          <div class=\"w-full items-center mb-base\">\n            <h6 class=\"font-semibold mb-base\" style=\"white-space: normal\">\n              You can add subtitle to your videos\n            </h6>\n            <vs-button @click=\"prepareAllScenes\">{{\n              $t('studio.sidebarPanel.course.c3')\n            }}</vs-button>\n          </div>\n          <component\n            :is=\"scrollbarTag\"\n            ref=\"verticalNavMenuPs\"\n            class=\"scroll-area pr-3\"\n            :settings=\"settings\"\n            :key=\"$vs.rtl\"\n          >\n            <div\n              v-for=\"(v, indexv) in selectedVideos\"\n              :key=\"indexv\"\n              class=\"w-full mb-base\"\n            >\n              <div class=\"flex justify-between items-center\">\n                <h5 class=\"mb-3\">Scene {{ indexv + 1 }}</h5>\n                <div class=\"flex justify-end w-1/2\">\n                  <div v-if=\"indexv + 1 < sceneLength\" class=\"w-1/3\">\n                    <CustomDropdown\n                      :options=\"transitionList\"\n                      @input=\"setTransition(indexv, $event)\"\n                      :value=\"getTransition(indexv)\"\n                    />\n                  </div>\n                  <vx-tooltip text=\"Add Scene\" class=\"w-1/3\">\n                    <vs-icon\n                      icon=\"add\"\n                      size=\"20px\"\n                      class=\"cursor-pointer\"\n                      @click=\"addScene(indexv)\"\n                    />\n                  </vx-tooltip>\n                  <vx-tooltip text=\"Delete Scene\">\n                    <vs-icon\n                      icon=\"delete\"\n                      size=\"20px\"\n                      class=\"cursor-pointer\"\n                      @click=\"deleteScene(indexv)\"\n                    />\n                  </vx-tooltip>\n                </div>\n              </div>\n              <!--video\n                width=\"100%\"\n                height=\"auto\"\n                v-if=\"isVideoUrl(v)\"\n                :src=\"v\"\n                @mouseenter=\"playScene\"\n                @mouseleave=\"pauseScene\"\n              >\n                <!--<source :src=\"v[1]\" type=\"video/mp4\">-->\n              <!--{{ $t('studio.sidebarPanel.course.c2') }}\n              </video-->\n              <template v-if=\"v\">\n                <img\n                  v-if=\"isImageUrl(v)\"\n                  width=\"100%\"\n                  height=\"auto\"\n                  class=\"cursor-pointer\"\n                  @click=\"scrollToScene(indexv)\"\n                  :src=\"v\"\n                />\n                <VideoPreview\n                  :src=\"v\"\n                  class=\"cursor-pointer\"\n                  v-else\n                  @click.native=\"scrollToScene(indexv)\"\n                />\n              </template>\n              <div\n                v-else\n                class=\"add-scene-container relative vs-con-loading__container\"\n                :id=\"`upload_scene_${indexv + 1}`\"\n              >\n                <VideoNotFound\n                  :sceneNum=\"indexv + 1\"\n                  @click.native=\"scrollToScene(indexv)\"\n                  @search=\"loadSearchModal($event)\"\n                />\n              </div>\n            </div>\n            <div class=\"w-full items-center\">\n              <vs-button icon=\"add\" @click=\"addScene(selectedVideos.length)\"\n                >Add Scene</vs-button\n              >\n            </div>\n          </component>\n        </div>\n      </div>\n    </div>\n    <SearchModal\n      :showModal.sync=\"showSearchModal\"\n      :sceneNum=\"currentScene\"\n      @close=\"showSearchModal = false\"\n    />\n  </div>\n</template>\n\n<script>\nimport VuePerfectScrollbar from 'vue-perfect-scrollbar';\nimport SearchModal from '@/components/search/SearchModal';\nimport VideoNotFound from '@/components/VideoNotFound';\nimport VideoPreview from './components/VideoPreview';\nimport CustomDropdown from './components/CustomDropdown';\nexport default {\n  name: 'ScenesPanel',\n  components: {\n    VideoNotFound,\n    SearchModal,\n    VideoPreview,\n    VuePerfectScrollbar,\n    CustomDropdown\n  },\n  data() {\n    return {\n      showSearchModal: false,\n      currentScene: null,\n      pptImage: false,\n      settings: {\n        // perfectScrollbar settings\n        maxScrollbarLength: 60,\n        wheelSpeed: 1,\n        swipeEasing: true,\n        scrollXMarginOffset: 100\n      },\n      transitionList: [\n        { value: 'no_motion', label: 'No Motion' },\n        { value: 'slide_in_right', label: 'Slide in Right' },\n        { value: 'slide_in_left', label: 'Slide in Left' },\n        { value: 'slide_in_bottom', label: 'Slide in Bottom' },\n        { value: 'slide_in_top', label: 'Slide in top' },\n        { value: 'fade_in', label: 'Fade In' },\n        { value: 'fade_out', label: 'Fade Out' }\n      ]\n    };\n  },\n  computed: {\n    selectedVideos() {\n      return this.$store.state.studio.selectedFromLibraryVideos.slice(1);\n    },\n    scrollbarTag() {\n      return this.$store.getters.scrollbarTag;\n    },\n    sceneLength() {\n      return Object.keys(this.$store.state.studio.scenes).length;\n    },\n    sceneTransitionList() {\n      return this.$store.state.studio.sceneTransition;\n    }\n  },\n  methods: {\n    isImageUrl(urlString) {\n      const imgExtentions = ['jpg', 'png', 'jpeg'];\n      urlString = new URL(urlString);\n      return imgExtentions.includes(urlString.pathname.split('.')[1]);\n    },\n    loadSearchModal(index) {\n      this.showSearchModal = true;\n      this.currentScene = index;\n    },\n    setTransition(idx, value) {\n      this.$store.commit('studio/setTransition', {\n        sceneNum: idx,\n        value\n      });\n    },\n    getTransition(idx) {\n      if (this.sceneTransitionList[idx]) {\n        return this.sceneTransitionList[idx];\n      }\n      this.setTransition(idx, 'no_motion');\n      return 'No Motion';\n    },\n    scrollToScene(sceneNumber) {\n      var element = document.getElementById(`scene_card_${sceneNumber}`);\n      const headerOffset = 80;\n      var elementPosition = element.getBoundingClientRect().top;\n      var offsetPosition = elementPosition - headerOffset + window.pageYOffset;\n      window.scrollTo({\n        top: offsetPosition,\n        behavior: 'smooth'\n      });\n    },\n    prepareAllScenes() {\n      /* this.$store.commit(\n        'studio/setPrepareAllScenes',\n        this.$store.state.studio.selectedFromLibraryVideos\n      ); */\n      this.$store.commit('studio/skipSubtitles');\n      this.$store.commit('studio/toggleMusic');\n    },\n    addScene(index) {\n      this.$store.commit('studio/addScene', index);\n    },\n    deleteScene(index) {\n      if (this.selectedVideos.length > 1) {\n        this.$store.commit('studio/deleteScene', index);\n      } else {\n        this.$vs.notify({\n          title: 'Alert',\n          text: 'Cannot delete last scene',\n          color: 'primary'\n        });\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n.items-center {\n  text-align: center;\n  text-align: -moz-center;\n  text-align: -webkit-center;\n}\n.add-scene-container {\n  width: 100%;\n  height: 133px;\n  display: flex;\n  justify-content: center;\n  background: #b9b9b9;\n}\n.image-frame {\n  width: 100%;\n  height: auto;\n}\n.scroll-area {\n  position: relative;\n  width: 100%;\n  height: 60vh;\n}\n</style>\n"]}]}