{"remainingRequest":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/src/views/pages/components/DocumentUpload.vue?vue&type=style&index=0&id=6e9efc80&scoped=true&lang=css&","dependencies":[{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/src/views/pages/components/DocumentUpload.vue","mtime":1617441641275},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.upload-box-wrapper {\n  border: 1.4px dashed #7247c4;\n  border-radius: 6px;\n  padding: 10px;\n}\n.upload-box {\n  background: rgba(114, 71, 196, 0.06);\n  border-radius: 6px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 380px;\n  cursor: pointer;\n}\n",{"version":3,"sources":["DocumentUpload.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"DocumentUpload.vue","sourceRoot":"src/views/pages/components","sourcesContent":["<template>\n  <vx-card title=\"Upload a PPT or PDF File\">\n    <div class=\"upload-box-wrapper\">\n      <div\n        class=\"upload-box\"\n        @click=\"chooseFile\"\n        @dragover.prevent\n        @drop.prevent=\"uploadDocument\"\n      >\n        <input\n          type=\"file\"\n          id=\"upload-doc\"\n          @change=\"uploadDocument\"\n          class=\"hidden\"\n          accept=\".docx,.pdf,.ppt,.pptx,.doc\"\n        />\n        <div class=\"upload-box-inner\">\n          <vs-icon\n            color=\"primary\"\n            rounded\n            icon=\"add_circle\"\n            :size=\"$store.state.windowWidth < 500 ? '52px' : '72px'\"\n            class=\"mb-4\"\n          ></vs-icon>\n          <p\n            class=\"font-semibold text-primary text-sm sm:text-xl\"\n            style=\"white-space: normal\"\n          >\n            Choose a file or drag it here\n          </p>\n          <!--p class=\"text-primary text-sm\" style=\"white-space: normal\">\n            Maximum file upload file size 500 MB\n          </p-->\n        </div>\n      </div>\n    </div>\n  </vx-card>\n</template>\n<script>\nexport default {\n  name: 'DocumentUpload',\n  data() {\n    return {\n      selectedFile: ''\n    };\n  },\n  computed: {\n    uploadedDocumentIsPPT() {\n      return this.$store.state.studio.video.fromPPT;\n    }\n  },\n  methods: {\n    chooseFile() {\n      document.getElementById('upload-doc').click();\n    },\n    uploadDocument(event) {\n      const Files = event.target.files || event.dataTransfer.files;\n      const selectedFile = Files[0];\n      this.$Progress.start();\n      this.$vs.loading({ color: 'transparent' });\n      this.$store\n        .dispatch('studio/uploadDoc', selectedFile)\n        .then(data => {\n          this.handleApiResponse(data);\n          this.$Progress.finish();\n          this.$vs.loading.close();\n        })\n        .catch(err => {\n          console.log(err);\n          this.$Progress.fail();\n          this.$vs.loading.close();\n          this.$vs.notify({\n            title: 'Error Occured',\n            text: 'Fail to parse document',\n            color: 'danger'\n          });\n        });\n    },\n    handleApiResponse(data) {\n      this.$store.commit('studio/setInitialState');\n      if (data.slides) {\n        const scenes = {};\n        const videos = {};\n        const images = {};\n        const keywords = {};\n        this.$store.commit('studio/SET_VIDEO_ATTR', {\n          key: 'fromPPT',\n          value: true\n        });\n        let script = '';\n        Object.values(data.slides).forEach(({ img_path, text }, index) => {\n          scenes[index] = '*No notes found in this slide*';\n          videos[index] = '';\n          images[index] = { 0: [img_path, 'slide', 'slide'] };\n          keywords[index] = [];\n          script += text;\n          this.$store.commit('studio/setInitialVideo', {\n            indexs: index,\n            value: img_path\n          });\n        });\n        this.$store.commit('studio/setSentences', scenes);\n        this.$store.commit('studio/setVideos', videos);\n        this.$store.commit('studio/setKeywords', keywords);\n        this.$store.commit('studio/setImages', images);\n        this.$store.commit('studio/setScript', script);\n      }\n      if (data.title) {\n        this.$store.commit('studio/SET_VIDEO_ATTR', {\n          key: 'title',\n          value: data.title\n        });\n      }\n      if (data.text) {\n        this.$store.commit('studio/setScript', data.text);\n      }\n      if (!this.uploadedDocumentIsPPT) {\n        this.$store.commit('studio/SET_TAB_INDEX', 0);\n      } else setTimeout(() => this.$store.commit('studio/toggleLibrary'), 1000);\n    }\n  }\n};\n</script>\n<style scoped>\n.upload-box-wrapper {\n  border: 1.4px dashed #7247c4;\n  border-radius: 6px;\n  padding: 10px;\n}\n.upload-box {\n  background: rgba(114, 71, 196, 0.06);\n  border-radius: 6px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 380px;\n  cursor: pointer;\n}\n</style>\n"]}]}