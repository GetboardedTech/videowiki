{"remainingRequest":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/src/layouts/components/vertical-nav-menu/PanelItems/LibraryPanel.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/src/layouts/components/vertical-nav-menu/PanelItems/LibraryPanel.vue","mtime":1617441534121},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport LibraryItem from './components/LibraryItem';\n\nexport default {\n  name: 'LibraryPanel',\n  components: { LibraryItem },\n  computed: {\n    getLibraryItems() {\n      return this.$store.state.studio.keywords;\n    },\n    currentActiveScene() {\n      return this.$store.state.studio.currentActiveScene;\n    },\n    scenes() {\n      return this.$store.state.studio.scenes;\n    }\n  },\n  methods: {\n    /* nextScene(){\n      console.log(\"scene_card_\" + (this.currentActiveScene))\n      if (this.currentActiveScene < Object.keys(this.scenes).length){\n        document.getElementById(\"scene_card_\" + (this.currentActiveScene)).scrollIntoView();\n        this.$store.commit(\"setActiveScene\",this.currentActiveScene + 1)\n      }\n      return true;\n    },\n    previousScene(){\n      if (this.currentActiveScene > 1){\n        document.getElementById(\"scene_card_\" + (this.currentActiveScene - 2)).scrollIntoView();\n        this.$store.commit(\"setActiveScene\",this.currentActiveScene - 1)\n      }\n      return true;\n    } */\n  }\n};\n",{"version":3,"sources":["LibraryPanel.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"LibraryPanel.vue","sourceRoot":"src/layouts/components/vertical-nav-menu/PanelItems","sourcesContent":["<template>\n  <!--<div class=\"vx-card items-center\" style=\"height: 100%;\">\n    <div class=\"vx-card__collapsible-content vs-con-loading__container\">\n      <div class=\"vx-card__body items-center\">\n\n      </div>\n    </div>\n  </div>-->\n  <div style=\"height: 100%;\">\n    <vx-card\n      v-if=\"Object.keys(getLibraryItems).length === 0\"\n      style=\"height: 100%;\"\n      class=\"p-3\"\n    >\n      <p style=\"white-space: normal;\" class=\"font-semibold\">\n        {{ $t('studio.sidebarPanel.library.l1') }}\n      </p>\n    </vx-card>\n    <template v-else>\n      <div v-for=\"(k, indexk) in getLibraryItems\" :key=\"indexk\">\n        <LibraryItem\n          v-if=\"$store.state.studio.currentActiveScene === parseInt(indexk) + 1\"\n          :keywords=\"k\"\n          :sceneNum=\"parseInt(indexk) + 1\"\n          class=\"mb-base\"\n        />\n      </div>\n    </template>\n  </div>\n</template>\n\n<script>\nimport LibraryItem from './components/LibraryItem';\n\nexport default {\n  name: 'LibraryPanel',\n  components: { LibraryItem },\n  computed: {\n    getLibraryItems() {\n      return this.$store.state.studio.keywords;\n    },\n    currentActiveScene() {\n      return this.$store.state.studio.currentActiveScene;\n    },\n    scenes() {\n      return this.$store.state.studio.scenes;\n    }\n  },\n  methods: {\n    /* nextScene(){\n      console.log(\"scene_card_\" + (this.currentActiveScene))\n      if (this.currentActiveScene < Object.keys(this.scenes).length){\n        document.getElementById(\"scene_card_\" + (this.currentActiveScene)).scrollIntoView();\n        this.$store.commit(\"setActiveScene\",this.currentActiveScene + 1)\n      }\n      return true;\n    },\n    previousScene(){\n      if (this.currentActiveScene > 1){\n        document.getElementById(\"scene_card_\" + (this.currentActiveScene - 2)).scrollIntoView();\n        this.$store.commit(\"setActiveScene\",this.currentActiveScene - 1)\n      }\n      return true;\n    } */\n  }\n};\n</script>\n\n<style scoped></style>\n"]}]}