{"remainingRequest":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/src/views/MyVideos.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/src/views/MyVideos.vue","mtime":1617441641271},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport TheHeader from '@/layouts/components/navbar/NavbarDashboard';\nimport VideoCard from './dashboard/components/VideoCard';\nimport axios from '../axios';\nimport constants from '../../constant';\nexport default {\n  name: 'MyVideos',\n  components: {\n    TheHeader,\n    VideoCard\n  },\n  data() {\n    return {\n      videoList: [],\n      isLoading: false\n    };\n  },\n  computed: {\n    savedVideoList() {\n      return this.videoList\n        .filter(video => video.is_save_later)\n        .slice()\n        .reverse();\n    },\n    publishedVideoList() {\n      return this.videoList\n        .filter(video => !video.is_save_later)\n        .slice()\n        .reverse();\n    }\n  },\n  mounted() {\n    this.getUserVideos();\n  },\n  methods: {\n    getUserVideos() {\n      /* this.$vs.loading({\n        background: 'transparent',\n        container: '#div-with-loading',\n      }); */\n      axios\n        .get(constants.apiUrl + '/videoapi/user_videos')\n        .then(res => {\n          this.videoList = res.data.data;\n        })\n        .catch(() => {\n          this.$vs.notify({\n            title: 'Error',\n            text: 'Cannot fetch videos',\n            color: 'danger'\n          });\n        })\n        .finally(() => {\n          /* this.$vs.loading.close('#div-with-loading > .con-vs-loading');\n          this.isLoading = false; */\n        });\n    }\n  }\n};\n",{"version":3,"sources":["MyVideos.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"MyVideos.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div>\n    <TheHeader />\n    <vs-tabs>\n      <vs-tab\n        label=\"Published Videos\"\n        class=\"p-8 vs-con-loading__container\"\n        id=\"div-with-loading\"\n      >\n        <div v-if=\"publishedVideoList.length > 0\" class=\"vx-row\">\n          <VideoCard\n            v-for=\"video in publishedVideoList\"\n            :key=\"video.id\"\n            :prop=\"video\"\n            :user=\"true\"\n          />\n        </div>\n        <div v-else class=\"flex h-72 justify-center items-center flex-wrap\">\n          <h4 class=\"text-danger\">No Published videos</h4>\n        </div>\n      </vs-tab>\n      <vs-tab label=\"Saved Videos\" class=\"p-8\">\n        <div class=\"vx-row\" v-if=\"savedVideoList.length > 0\">\n          <VideoCard\n            v-for=\"video in savedVideoList\"\n            :key=\"video.id\"\n            :prop=\"video\"\n            :user=\"true\"\n          />\n        </div>\n        <div v-else class=\"flex h-72 justify-center items-center flex-wrap\">\n          <h4 class=\"text-danger\">No Saved Videos</h4>\n        </div>\n      </vs-tab>\n    </vs-tabs>\n  </div>\n</template>\n<script>\nimport TheHeader from '@/layouts/components/navbar/NavbarDashboard';\nimport VideoCard from './dashboard/components/VideoCard';\nimport axios from '../axios';\nimport constants from '../../constant';\nexport default {\n  name: 'MyVideos',\n  components: {\n    TheHeader,\n    VideoCard\n  },\n  data() {\n    return {\n      videoList: [],\n      isLoading: false\n    };\n  },\n  computed: {\n    savedVideoList() {\n      return this.videoList\n        .filter(video => video.is_save_later)\n        .slice()\n        .reverse();\n    },\n    publishedVideoList() {\n      return this.videoList\n        .filter(video => !video.is_save_later)\n        .slice()\n        .reverse();\n    }\n  },\n  mounted() {\n    this.getUserVideos();\n  },\n  methods: {\n    getUserVideos() {\n      /* this.$vs.loading({\n        background: 'transparent',\n        container: '#div-with-loading',\n      }); */\n      axios\n        .get(constants.apiUrl + '/videoapi/user_videos')\n        .then(res => {\n          this.videoList = res.data.data;\n        })\n        .catch(() => {\n          this.$vs.notify({\n            title: 'Error',\n            text: 'Cannot fetch videos',\n            color: 'danger'\n          });\n        })\n        .finally(() => {\n          /* this.$vs.loading.close('#div-with-loading > .con-vs-loading');\n          this.isLoading = false; */\n        });\n    }\n  }\n};\n</script>\n<style scoped>\n/*.content {\n  padding-top: 3rem;\n  padding-left: 1.75rem;\n  padding-right: 1.75rem;\n  background: #e5e5e5;\n}*/\n</style>\n"]}]}