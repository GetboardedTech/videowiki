{"remainingRequest":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/src/App.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/src/App.vue","mtime":1617441641207},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/falcon-puneet/Documents/Arbunize/videowiki/video-wiki-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ninput {\n  font-family: Montserrat;\n}\n",{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2IA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<!-- =========================================================================================\n\tFile Name: App.vue\n\tDescription: Main vue file - APP\n\t----------------------------------------------------------------------------------------\n\tItem Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\n\tAuthor: Pixinvent\n\tAuthor URL: http://www.themeforest.net/user/pixinvent\n========================================================================================== -->\n\n<template>\n  <div id=\"app\" :class=\"vueAppClasses\">\n    <router-view @setAppClasses=\"setAppClasses\" />\n    <vs-popup title=\"Login/Register\" :active.sync=\"authPopup\">\n      <div class=\"w-2/3 mx-auto\">\n        <h1 class=\"mb-4\">\n          <b>{{ login ? 'Login' : 'Register' }}</b>\n        </h1>\n        <Login\n          v-if=\"login\"\n          :popup=\"true\"\n          @loggedIn=\"$store.commit('TOGGLE_LOGIN_POPUP', false)\"\n          @toRegister=\"login = false\"\n        />\n        <Register\n          v-else\n          :popup=\"true\"\n          @registered=\"$store.commit('TOGGLE_LOGIN_POPUP', false)\"\n          @toLogin=\"login = true\"\n        />\n      </div>\n    </vs-popup>\n    <back-to-top\n      bottom=\"5%\"\n      :right=\"$vs.rtl ? 'calc(100% - 2.2rem - 38px)' : '30px'\"\n      visibleoffset=\"500\"\n      v-if=\"!hideScrollToTop\"\n    >\n      <vs-button\n        icon-pack=\"feather\"\n        icon=\"icon-arrow-up\"\n        class=\"shadow-lg btn-back-to-top\"\n      />\n    </back-to-top>\n  </div>\n</template>\n\n<script>\nimport BackToTop from 'vue-backtotop';\nimport themeConfig from '@/../themeConfig.js';\nimport Login from '@/views/login/LoginJWT';\nimport Register from '@/views/register/RegisterJWT';\nexport default {\n  data() {\n    return {\n      vueAppClasses: [],\n      login: true,\n      hideScrollToTop: themeConfig.hideScrollToTop,\n    };\n  },\n  components: {\n    Login,\n    Register,\n    BackToTop,\n  },\n  watch: {\n    '$store.state.theme'(val) {\n      this.toggleClassInBody(val);\n    },\n    '$vs.rtl'(val) {\n      document.documentElement.setAttribute('dir', val ? 'rtl' : 'ltr');\n    },\n  },\n  computed: {\n    authPopup: {\n      get() {\n        return this.$store.state.authPopup;\n      },\n      set(value) {\n        this.$store.commit('TOGGLE_LOGIN_POPUP', value);\n      },\n    },\n  },\n  methods: {\n    toggleClassInBody(className) {\n      if (className == 'dark') {\n        if (document.body.className.match('theme-semi-dark'))\n          document.body.classList.remove('theme-semi-dark');\n        document.body.classList.add('theme-dark');\n      } else if (className == 'semi-dark') {\n        if (document.body.className.match('theme-dark'))\n          document.body.classList.remove('theme-dark');\n        document.body.classList.add('theme-semi-dark');\n      } else {\n        if (document.body.className.match('theme-dark'))\n          document.body.classList.remove('theme-dark');\n        if (document.body.className.match('theme-semi-dark'))\n          document.body.classList.remove('theme-semi-dark');\n      }\n    },\n    setAppClasses(classesStr) {\n      this.vueAppClasses.push(classesStr);\n    },\n    handleWindowResize() {\n      this.$store.commit('UPDATE_WINDOW_WIDTH', window.innerWidth);\n      this.$store.commit('UPDATE_WINDOW_HEIGHT', window.innerHeight);\n\n      // Set --vh property\n      document.documentElement.style.setProperty(\n        '--vh',\n        `${window.innerHeight * 0.01}px`\n      );\n    },\n    handleScroll() {\n      this.$store.commit('UPDATE_WINDOW_SCROLL_Y', window.scrollY);\n    },\n  },\n  mounted() {\n    this.toggleClassInBody(themeConfig.theme);\n    this.$store.commit('UPDATE_WINDOW_WIDTH', window.innerWidth);\n    const vh = window.innerHeight * 0.01;\n    // Then we set the value in the --vh custom property to the root of the document\n    document.documentElement.style.setProperty('--vh', `${vh}px`);\n  },\n  async created() {\n    const dir = this.$vs.rtl ? 'rtl' : 'ltr';\n    document.documentElement.setAttribute('dir', dir);\n    if (window.location !== window.parent.location) {\n      this.$store.commit('SET_IFRAME_STATUS', true);\n    }\n    window.addEventListener('resize', this.handleWindowResize);\n    window.addEventListener('scroll', this.handleScroll);\n  },\n  destroyed() {\n    window.removeEventListener('resize', this.handleWindowResize);\n    window.removeEventListener('scroll', this.handleScroll);\n  },\n};\n</script>\n<style>\ninput {\n  font-family: Montserrat;\n}\n</style>\n"]}]}